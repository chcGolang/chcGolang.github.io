<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>KeepAlived使用教程</title>
      <link href="/posts/4d9e1630/"/>
      <url>/posts/4d9e1630/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="KeepAlived使用教程"><a href="#KeepAlived使用教程" class="headerlink" title="KeepAlived使用教程"></a>KeepAlived使用教程</h1><h2 id="核心配置文件说明"><a href="#核心配置文件说明" class="headerlink" title="核心配置文件说明"></a>核心配置文件说明</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    ## 路由id：当前安装keepalived的节点主机标识符，保证全局唯一</span><br><span class="line">    router_id keep_131</span><br><span class="line">    </span><br><span class="line">    notification_email &#123;  #指定keepalived在发生切换时需要发送email到的对象，一行一个</span><br><span class="line">monitor@3evip.cn</span><br><span class="line">    &#125;</span><br><span class="line">    notification_email_from monitor@3evip.cn #指定发件人</span><br><span class="line">    smtp_server stmp.3evip.cn #指定smtp服务器地址</span><br><span class="line">    smtp_connect_timeout 30 #指定smtp连接超时时间</span><br><span class="line">    </span><br><span class="line">    ## 修改执行脚本的用户</span><br><span class="line">    script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">    </span><br><span class="line">    vrrp_mcast_group4 224.0.0.18 ## 默认是224.0.0.18</span><br><span class="line">    vrrp_mcast_group6 ff02::12 #指定发送VRRP组播消息所使用的IPV6组播地址。默认是ff02::12</span><br><span class="line">    default_interface eth0 #设置静态地址默认绑定的端口。默认是eth0。</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_info &#123; ## 定义脚本文件信息</span><br><span class="line">    script "sh /etc/keepalived/script/check_info.sh" ## 脚本文件位置</span><br><span class="line">    interval 2 ##每隔两秒运行上一行脚本</span><br><span class="line">    weight -10 ## 如果脚本运行失败，则降级权重-10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123; ## vrrp名称</span><br><span class="line">    state BACKUP  ## 主节点为MASTER，备份节点为BACKUP</span><br><span class="line">    preempt_delay #抢占延时，默认5分钟</span><br><span class="line">    interface ens33 ## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span><br><span class="line">    virtual_router_id 111  ## 虚拟路由ID号（主备节点一定要相同）</span><br><span class="line">    mcast_src_ip 192.168.50.112 ## 本机ip地址</span><br><span class="line">    priority 100  ##优先级配置（0-254的值）</span><br><span class="line">    nopreempt  ##设置为不抢夺VIP</span><br><span class="line">    advert_int 1  ## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span><br><span class="line">    authentication &#123;  ## 认证匹配</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 123456</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.50.28  ## 虚拟ip，可以指定多个</span><br><span class="line">        192.168.50.27</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     track_script &#123; ## 运行脚本</span><br><span class="line">     check_info  ## 指定要运行的脚本名称</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> LVS配置</span></span><br><span class="line">virtual_server 192.168.231.128 80 &#123;</span><br><span class="line">  delay_loop 10 # 健康检查的时间间隔,秒</span><br><span class="line">  lb_algo wlc # LVS调度算法:rr|wrr|lc|wlc|lblc|sh|dh</span><br><span class="line">  lb_kind DR # LVS模式:NAT|DR|TUN</span><br><span class="line">  persistence_timeout 300 # 持久化超时时间，单位是秒。默认是6分钟。</span><br><span class="line">  persistence_granularity 255.255.255.255 # 子网掩码,默认255.255.255.255</span><br><span class="line">  protocol TCP # 网络协议:TCP|UDP|SCTP</span><br><span class="line">  </span><br><span class="line"><span class="meta">   #</span><span class="bash"> 负载均衡的服务器ip地址和端口</span></span><br><span class="line">  real_server 192.168.231.131 80 &#123; # real_server ip prot</span><br><span class="line">    weight 1 # 给服务器指定权重。默认是1.</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">       connect_port 80 # 检查的端口</span><br><span class="line">       connect_timeout 3 # 检查超时时间(秒)</span><br><span class="line">       retry 2 # 重试次数</span><br><span class="line">       delay_before_retry 3 # 间隔时间(秒)</span><br><span class="line">    &#125;</span><br><span class="line">    # notify_up &lt;STRING&gt; # 当服务器健康检查成功时，执行的脚本。</span><br><span class="line">    # notify_down &lt;STRING&gt; # 当服务器健康检查失败时，执行的脚本。</span><br><span class="line">    # uthreshold &lt;INT&gt; # 到这台服务器的最大连接数。</span><br><span class="line">    # lthreshold &lt;INT&gt; # 到这台服务器的最小连接数。</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  real_server 192.168.231.132 80 &#123; # real_server ip prot</span><br><span class="line">    weight 1 # 给服务器指定权重。默认是1.</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">       connect_port 80 # 检查的端口</span><br><span class="line">       connect_timeout 3 # 检查超时时间(秒)</span><br><span class="line">       retry 2 # 重试次数</span><br><span class="line">       delay_before_retry 3 # 间隔时间(秒)</span><br><span class="line">    &#125;</span><br><span class="line">    # notify_up &lt;STRING&gt; # 当服务器健康检查成功时，执行的脚本。</span><br><span class="line">    # notify_down &lt;STRING&gt; # 当服务器健康检查失败时，执行的脚本。</span><br><span class="line">    # uthreshold &lt;INT&gt; # 到这台服务器的最大连接数。</span><br><span class="line">    # lthreshold &lt;INT&gt; # 到这台服务器的最小连接数。</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="keepalived问题"><a href="#keepalived问题" class="headerlink" title="keepalived问题"></a>keepalived问题</h2><ol><li><p><strong>keepalived组播防火墙问题</strong></p><p>防火墙开启keepalived组播</p><p>组播ip默认是:<code>vrrp_mcast_group4</code>配置内容,默认224.0.0.18</p><p><strong>centos7</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface ens33 --destination 224.0.0.18 --protocol vrrp -j ACCEPT</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> --<span class="keyword">in</span>-interface ens33为网卡名称</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --destination 224.0.0.18为组播ip</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="KeeyAlived安装"><a href="#KeeyAlived安装" class="headerlink" title="KeeyAlived安装"></a>KeeyAlived安装</h2><h3 id="双机主备"><a href="#双机主备" class="headerlink" title="双机主备"></a>双机主备</h3><ol><li><p><strong>主机配置情况</strong></p><p><strong>虚拟ip:192.168.231.130</strong></p><p><strong>网卡:ens33</strong></p><table><thead><tr><th>主机</th><th>角色</th></tr></thead><tbody><tr><td>192.168.231.131</td><td>MASTER</td></tr><tr><td>192.168.231.132</td><td>BACKUP</td></tr><tr><td></td><td></td></tr></tbody></table></li></ol><ol start="2"><li><p><strong>配置环境变量</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置文件目录</span></span><br><span class="line">export keepalived_dir=/home/keepalived</span><br><span class="line"><span class="meta">#</span><span class="bash"> keepalived脚本目录</span></span><br><span class="line">export keepalived_script=$&#123;keepalived_dir&#125;/script</span><br><span class="line"><span class="meta">#</span><span class="bash"> 虚拟ip</span></span><br><span class="line">export keepalived_vrrp_ip=192.168.231.130</span><br><span class="line"><span class="meta">#</span><span class="bash"> 认证密码</span></span><br><span class="line">export keepalived_pass=keepalived</span><br><span class="line"><span class="meta">#</span><span class="bash"> 虚拟路由id</span></span><br><span class="line">export keepalived_virtual_id=130</span><br><span class="line"><span class="meta">#</span><span class="bash"> vrrp名称</span></span><br><span class="line">export keepalived_vrrp_name=VI_1</span><br><span class="line"><span class="meta">#</span><span class="bash"> keepalived的容器名</span></span><br><span class="line">export keepalived_docker_name=keepalived</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建keepalived目录</span></span><br><span class="line">mkdir -p $&#123;keepalived_dir&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建keepalived脚本目录</span></span><br><span class="line">mkdir -p $&#123;keepalived_script&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p><strong>创建配置文件</strong></p><p><strong>192.168.231.131</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主机网卡名称</span></span><br><span class="line">export keepalived_interface=ens33</span><br><span class="line"><span class="meta">#</span><span class="bash"> 节点状态(节点为MASTER，备份节点为BACKUP)</span></span><br><span class="line">export keepalived_state=MASTER</span><br><span class="line"><span class="meta">#</span><span class="bash"> 主机ip</span></span><br><span class="line">export keepalived_ip=192.168.231.131</span><br><span class="line"><span class="meta">#</span><span class="bash"> 路由id</span></span><br><span class="line">export keepalived_router_id=131</span><br><span class="line"><span class="meta">#</span><span class="bash"> 优先级配置（0-254的值）</span></span><br><span class="line">export keepalived_priority=100</span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行创建配置文件命令</span></span><br></pre></td></tr></table></figure></li></ol><p>   <strong>192.168.231.132</strong></p>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  #</span><span class="bash"> 主机网卡名称</span></span><br><span class="line">  export keepalived_interface=ens33</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 节点状态(节点为MASTER，备份节点为BACKUP)</span></span><br><span class="line">  export keepalived_state=BACKUP</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 主机ip</span></span><br><span class="line">  export keepalived_ip=192.168.231.132</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 路由id</span></span><br><span class="line">  export keepalived_router_id=132</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 优先级配置（0-254的值）</span></span><br><span class="line">  export keepalived_priority=80</span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行创建配置文件命令</span></span><br></pre></td></tr></table></figure><p>   <strong>创建配置文件命令</strong></p>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建配置文件</span></span><br><span class="line"><span class="meta">cat&gt;</span><span class="bash"><span class="variable">$&#123;keepalived_dir&#125;</span>/keepalived.conf&lt;&lt;EOF </span></span><br><span class="line">   global_defs &#123;</span><br><span class="line">       # 路由id：当前安装keepalived的节点主机标识符，保证全局唯一</span><br><span class="line">       router_id $&#123;keepalived_router_id&#125;</span><br><span class="line">       ## 修改执行脚本的用户为root</span><br><span class="line">       script_user root</span><br><span class="line">       enable_script_security</span><br><span class="line">       ## 默认是224.0.0.18</span><br><span class="line">       vrrp_mcast_group4 224.0.0.18</span><br><span class="line">       </span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   vrrp_instance $&#123;keepalived_vrrp_name&#125; &#123;</span><br><span class="line">       state $&#123;keepalived_state&#125;  ## 主节点为MASTER，备份节点为BACKUP</span><br><span class="line">       interface $&#123;keepalived_interface&#125; ## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span><br><span class="line">       virtual_router_id $&#123;keepalived_virtual_id&#125;  ## 虚拟路由ID号（主备节点一定要相同）</span><br><span class="line">       mcast_src_ip $&#123;keepalived_ip&#125; ## 本机ip地址</span><br><span class="line">       priority $&#123;keepalived_priority&#125;  ##优先级配置（0-254的值）</span><br><span class="line">       advert_int 1  ## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span><br><span class="line">       authentication &#123;  ## 认证匹配</span><br><span class="line">           auth_type PASS ## 认证方式:PASS</span><br><span class="line">           auth_pass $&#123;keepalived_pass&#125; ## 认证密码</span><br><span class="line">       &#125;</span><br><span class="line">       virtual_ipaddress &#123;</span><br><span class="line">           $&#123;keepalived_vrrp_ip&#125;  ## 虚拟ip，可以指定多个</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ol start="4"><li><p><strong>启动keepalived</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">   cat&gt;</span><span class="bash"><span class="variable">$&#123;keepalived_dir&#125;</span>/run.sh&lt;&lt;EOF</span></span><br><span class="line">   docker run -d --net=host \\</span><br><span class="line">   --privileged \\</span><br><span class="line">   --name $&#123;keepalived_docker_name&#125; \\</span><br><span class="line">   --user root \\</span><br><span class="line">   --restart=always \\</span><br><span class="line">   -v /etc/localtime:/etc/localtime:ro \\</span><br><span class="line">-v /lib/modules:/lib/modules \\</span><br><span class="line">   -v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class="line">   -v $(which docker):/usr/bin/docker \\</span><br><span class="line">   -v /etc/docker:/etc/docker \\</span><br><span class="line">   -v $&#123;keepalived_dir&#125;/keepalived.conf:/usr/local/etc/keepalived/keepalived.conf \\</span><br><span class="line">   -v $&#123;keepalived_script&#125;:/etc/keepalived/script \\</span><br><span class="line">   osixia/keepalived --copy-service</span><br><span class="line">   EOF</span><br><span class="line">   </span><br><span class="line">   chmod +x $&#123;keepalived_dir&#125;/run.sh</span><br><span class="line">   sh $&#123;keepalived_dir&#125;/run.sh</span><br><span class="line">   </span><br><span class="line"><span class="meta">   #</span><span class="bash"> 容器操作宿主机docker命令</span></span><br><span class="line">   docker exec $&#123;keepalived_docker_name&#125; bash -c 'mkdir /lib64 &amp;&amp; ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2'</span><br></pre></td></tr></table></figure></li></ol><h3 id="双主热备"><a href="#双主热备" class="headerlink" title="双主热备"></a>双主热备</h3><p>双机热备的这种主从模式的缺点是无论部署了多少个KeeyAlived主机,也就只能有一台主机在工作.然而双主热备的模式则会让所用的KeeyAlived主机工作</p><p><strong>安装方式是在双机热备的基础上进行修改</strong></p><ol><li><p><strong>主机配置情况</strong></p><p><strong>虚拟ip:192.168.231.130 , 192.168.231.129</strong></p><p><strong>网卡:ens33</strong></p><table><thead><tr><th>主机</th></tr></thead><tbody><tr><td>192.168.231.131</td></tr><tr><td>192.168.231.132</td></tr><tr><td></td></tr></tbody></table></li></ol><ol start="2"><li><p><strong>配置通用环境变量</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 设置新的vrrp名称</span></span><br><span class="line">export keepalived_vrrp_name=VI_2</span><br><span class="line"><span class="meta">#</span><span class="bash"> 虚拟ip</span></span><br><span class="line">export keepalived_vrrp_ip=192.168.231.129</span><br><span class="line"><span class="meta">#</span><span class="bash"> 虚拟路由id</span></span><br><span class="line">export keepalived_virtual_id=129</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p><p><strong>192.168.231.131</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主机网卡名称</span></span><br><span class="line">export keepalived_interface=ens33</span><br><span class="line"><span class="meta">#</span><span class="bash"> 节点状态(节点为MASTER，备份节点为BACKUP)</span></span><br><span class="line">export keepalived_state=BACKUP</span><br><span class="line"><span class="meta">#</span><span class="bash"> 主机ip</span></span><br><span class="line">export keepalived_ip=192.168.231.131</span><br><span class="line"><span class="meta">#</span><span class="bash"> 优先级配置（0-254的值）</span></span><br><span class="line">export keepalived_priority=80</span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行添加配置文件命令</span></span><br></pre></td></tr></table></figure><p><strong>192.168.231.132</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主机网卡名称</span></span><br><span class="line">export keepalived_interface=ens33</span><br><span class="line"><span class="meta">#</span><span class="bash"> 节点状态(节点为MASTER，备份节点为BACKUP)</span></span><br><span class="line">export keepalived_state=MASTER</span><br><span class="line"><span class="meta">#</span><span class="bash"> 主机ip</span></span><br><span class="line">export keepalived_ip=192.168.231.132</span><br><span class="line"><span class="meta">#</span><span class="bash"> 优先级配置（0-254的值）</span></span><br><span class="line">export keepalived_priority=100</span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行添加配置文件命令</span></span><br></pre></td></tr></table></figure><p><strong>添加配置文件内容命令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加配置文件内容</span></span><br><span class="line"><span class="meta">cat&gt;</span><span class="bash">&gt;<span class="variable">$&#123;keepalived_dir&#125;</span>/keepalived.conf&lt;&lt;EOF </span></span><br><span class="line"></span><br><span class="line">vrrp_instance $&#123;keepalived_vrrp_name&#125; &#123;</span><br><span class="line">    state $&#123;keepalived_state&#125;  ## 主节点为MASTER，备份节点为BACKUP</span><br><span class="line">    interface $&#123;keepalived_interface&#125; ## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span><br><span class="line">    virtual_router_id $&#123;keepalived_virtual_id&#125;  ## 虚拟路由ID号（主备节点一定要相同）</span><br><span class="line">    mcast_src_ip $&#123;keepalived_ip&#125; ## 本机ip地址</span><br><span class="line">    priority $&#123;keepalived_priority&#125;  ##优先级配置（0-254的值）</span><br><span class="line">    advert_int 1  ## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span><br><span class="line">    authentication &#123;  ## 认证匹配</span><br><span class="line">        auth_type PASS ## 认证方式:PASS</span><br><span class="line">        auth_pass $&#123;keepalived_pass&#125; ## 认证密码</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        $&#123;keepalived_vrrp_ip&#125;  ## 虚拟ip，可以指定多个</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>查看完整的配置文件信息</p><p><strong>192.168.231.131</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    # 路由id：当前安装keepalived的节点主机标识符，保证全局唯一</span><br><span class="line">    router_id 131</span><br><span class="line">    ## 修改执行脚本的用户为root</span><br><span class="line">    script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">    ## 默认是224.0.0.18</span><br><span class="line">    vrrp_mcast_group4 224.0.0.18</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_nginx &#123; ## 定义脚本文件信息</span><br><span class="line">    script "sh /etc/keepalived/script/check_nginx.sh" ## 脚本文件位置</span><br><span class="line">    interval 2 ##每隔两秒运行上一行脚本</span><br><span class="line">    weight -10 ## 如果脚本运行失败，则降级权重-10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER  ## 主节点为MASTER，备份节点为BACKUP</span><br><span class="line">    interface ens33 ## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span><br><span class="line">    virtual_router_id 130  ## 虚拟路由ID号（主备节点一定要相同）</span><br><span class="line">    mcast_src_ip 192.168.231.131 ## 本机ip地址</span><br><span class="line">    priority 100  ##优先级配置（0-254的值）</span><br><span class="line">    advert_int 1  ## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span><br><span class="line">    authentication &#123;  ## 认证匹配</span><br><span class="line">        auth_type PASS ## 认证方式:PASS</span><br><span class="line">        auth_pass keepalived ## 认证密码</span><br><span class="line">    &#125;</span><br><span class="line">   virtual_ipaddress &#123;</span><br><span class="line">        192.168.231.130  ## 虚拟ip，可以指定多个</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123; ## 运行脚本</span><br><span class="line">        check_nginx  ## 指定要运行的脚本名称</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state BACKUP  ## 主节点为MASTER，备份节点为BACKUP</span><br><span class="line">    interface ens33 ## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span><br><span class="line">    virtual_router_id 129  ## 虚拟路由ID号（主备节点一定要相同）</span><br><span class="line">    mcast_src_ip 192.168.231.131 ## 本机ip地址</span><br><span class="line">    priority 80  ##优先级配置（0-254的值）</span><br><span class="line">    advert_int 1  ## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span><br><span class="line">    authentication &#123;  ## 认证匹配</span><br><span class="line">        auth_type PASS ## 认证方式:PASS</span><br><span class="line">        auth_pass keepalived ## 认证密码</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.231.129  ## 虚拟ip，可以指定多个</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>192.168.231.132</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    # 路由id：当前安装keepalived的节点主机标识符，保证全局唯一</span><br><span class="line">    router_id 132</span><br><span class="line">    ## 修改执行脚本的用户为root</span><br><span class="line">    script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">    ## 默认是224.0.0.18</span><br><span class="line">    vrrp_mcast_group4 224.0.0.18 </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_nginx &#123; ## 定义脚本文件信息</span><br><span class="line">    script "sh /etc/keepalived/script/check_nginx.sh" ## 脚本文件位置</span><br><span class="line">    interval 2 ##每隔两秒运行上一行脚本</span><br><span class="line">    weight -10 ## 如果脚本运行失败，则降级权重-10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP  ## 主节点为MASTER，备份节点为BACKUP</span><br><span class="line">    interface ens33 ## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span><br><span class="line">    virtual_router_id 130  ## 虚拟路由ID号（主备节点一定要相同）</span><br><span class="line">    mcast_src_ip 192.168.231.132 ## 本机ip地址</span><br><span class="line">    priority 80  ##优先级配置（0-254的值）</span><br><span class="line">    advert_int 1  ## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span><br><span class="line">    authentication &#123;  ## 认证匹配</span><br><span class="line">        auth_type PASS ## 认证方式:PASS</span><br><span class="line">        auth_pass keepalived ## 认证密码</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.231.130  ## 虚拟ip，可以指定多个</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123; ## 运行脚本</span><br><span class="line">        check_nginx  ## 指定要运行的脚本名称</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vrrp_instance VI_2 &#123;</span><br><span class="line">    state MASTER  ## 主节点为MASTER，备份节点为BACKUP</span><br><span class="line">    interface ens33 ## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span><br><span class="line">    virtual_router_id 129  ## 虚拟路由ID号（主备节点一定要相同）</span><br><span class="line">    mcast_src_ip 192.168.231.132 ## 本机ip地址</span><br><span class="line">    priority 100  ##优先级配置（0-254的值）</span><br><span class="line">    advert_int 1  ## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span><br><span class="line">    authentication &#123;  ## 认证匹配</span><br><span class="line">        auth_type PASS ## 认证方式:PASS</span><br><span class="line">        auth_pass keepalived ## 认证密码</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.231.129  ## 虚拟ip，可以指定多个</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>重启keepalived</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart $&#123;keepalived_docker_name&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="KeeyAlived执行定时脚本"><a href="#KeeyAlived执行定时脚本" class="headerlink" title="KeeyAlived执行定时脚本"></a>KeeyAlived执行定时脚本</h2><h3 id="定时检测容器存活"><a href="#定时检测容器存活" class="headerlink" title="定时检测容器存活"></a>定时检测容器存活</h3><ul><li><p><strong>keepalived.conf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    ## 修改执行脚本的用户为root</span><br><span class="line">    script_user root</span><br><span class="line">    enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_nginx &#123; ## 定义脚本文件信息</span><br><span class="line">    script "sh /etc/keepalived/script/check_nginx.sh" ## 脚本文件位置</span><br><span class="line">    interval 2 ##每隔两秒运行上一行脚本</span><br><span class="line">    weight -10 ## 如果脚本运行失败，则降级权重-10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123; ## vrrp名称</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">     track_script &#123; ## 运行脚本</span><br><span class="line">     check_nginx  ## 指定要运行的脚本名称</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>check_nginx.sh</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 脚本文件名</span></span><br><span class="line">export keepalived_script_name=check_nginx.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 要检测的容器名</span></span><br><span class="line">export keepalived_script_docker=nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建配置文件</span></span><br><span class="line"><span class="meta">cat&gt;</span><span class="bash"><span class="variable">$&#123;keepalived_script&#125;</span>/<span class="variable">$&#123;keepalived_script_name&#125;</span>&lt;&lt;EOF </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">A=\`docker ps -f name=$&#123;keepalived_script_docker&#125; | grep $&#123;keepalived_script_docker&#125; | wc -l\`</span><br><span class="line">B=\`docker ps -af name=$&#123;keepalived_script_docker&#125; | grep $&#123;keepalived_script_docker&#125; | wc -l\`</span><br><span class="line"><span class="meta">#</span><span class="bash"> 判断对应的docker容器是否存活</span></span><br><span class="line">if  [ \$A -eq 0 ];then</span><br><span class="line">    if [ \$B -eq 1 ];then</span><br><span class="line">        docker start $&#123;keepalived_script_docker&#125;</span><br><span class="line">        sleep 3</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">    if [ \`docker ps -f name=$&#123;keepalived_script_docker&#125; | grep $&#123;keepalived_script_docker&#125; | wc -l\` -eq 0 ];then</span><br><span class="line">        docker stop $&#123;keepalived_docker_name&#125;</span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置脚本文件权限</span></span><br><span class="line">chmod +x $&#123;keepalived_script&#125;/$&#123;keepalived_script_name&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装LVS"><a href="#安装LVS" class="headerlink" title="安装LVS"></a>安装LVS</h2><p><strong>LVS文章</strong>:<a href="https://wsgzao.github.io/post/lvs-keepalived/" target="_blank" rel="noopener">https://wsgzao.github.io/post/lvs-keepalived/</a></p><ol><li><p><strong>主机配置情况</strong></p><p><strong>虚拟ip:192.168.231.128</strong></p><p><strong>网卡:ens33</strong></p><table><thead><tr><th>主机</th><th>角色</th></tr></thead><tbody><tr><td>192.168.231.133</td><td>MASTER</td></tr><tr><td>192.168.231.134</td><td>BACKUP</td></tr></tbody></table></li><li><p><strong>安装ipvsadm</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ipvsadm</span><br></pre></td></tr></table></figure></li><li><p><strong>配置文件</strong></p><p><strong>先按照双机主备或者双主热备的方式安装keepalived</strong></p><p><strong>192.168.231.133,192.168.231.134</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 访问lvs的端口号</span></span><br><span class="line">export lvs_port=80</span><br><span class="line"><span class="meta">#</span><span class="bash"> 健康检查的时间间隔,秒</span></span><br><span class="line">export lvs_loop=10</span><br><span class="line"><span class="meta">#</span><span class="bash"> LVS调度算法:rr|wrr|lc|wlc|lblc|sh|dh</span></span><br><span class="line">export lvs_argo=wlc</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加lvs集群基础内容</span></span><br><span class="line"><span class="meta">cat&gt;</span><span class="bash">&gt;<span class="variable">$&#123;keepalived_dir&#125;</span>/keepalived.conf&lt;&lt;EOF</span></span><br><span class="line">virtual_server $&#123;keepalived_vrrp_ip&#125; $&#123;lvs_port&#125; &#123;</span><br><span class="line">  delay_loop $&#123;lvs_loop&#125; # 健康检查的时间间隔,秒</span><br><span class="line">  lb_algo $&#123;lvs_argo&#125; # LVS调度算法:rr|wrr|lc|wlc|lblc|sh|dh</span><br><span class="line">  lb_kind DR # LVS模式:NAT|DR|TUN</span><br><span class="line">  persistence_timeout 300 # 持久化超时时间，单位是秒。默认是6分钟。</span><br><span class="line">  persistence_granularity 255.255.255.255 # 子网掩码,默认255.255.255.255</span><br><span class="line">  protocol TCP # 网络协议:TCP|UDP|SCTP</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加负载均衡的服务器ip地址和端口</span></span><br><span class="line">virtual_server 192.168.231.128 80 &#123;</span><br><span class="line">  ...</span><br><span class="line">  </span><br><span class="line"><span class="meta">   #</span><span class="bash"> 负载均衡的服务器ip地址和端口</span></span><br><span class="line">  real_server 192.168.231.131 80 &#123; # real_server ip prot</span><br><span class="line">    weight 1 # 给服务器指定权重。默认是1.</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">       connect_port 80 # 检查的端口</span><br><span class="line">       connect_timeout 3 # 检查超时时间(秒)</span><br><span class="line">       retry 2 # 重试次数</span><br><span class="line">       delay_before_retry 3 # 间隔时间(秒)</span><br><span class="line">    &#125;</span><br><span class="line">    # notify_up &lt;STRING&gt; # 当服务器健康检查成功时，执行的脚本。</span><br><span class="line">    # notify_down &lt;STRING&gt; # 当服务器健康检查失败时，执行的脚本。</span><br><span class="line">    # uthreshold &lt;INT&gt; # 到这台服务器的最大连接数。</span><br><span class="line">    # lthreshold &lt;INT&gt; # 到这台服务器的最小连接数。</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  real_server 192.168.231.132 80 &#123; # real_server ip prot</span><br><span class="line">    weight 1 # 给服务器指定权重。默认是1.</span><br><span class="line">    TCP_CHECK &#123;</span><br><span class="line">       connect_port 80 # 检查的端口</span><br><span class="line">       connect_timeout 3 # 检查超时时间(秒)</span><br><span class="line">       retry 2 # 重试次数</span><br><span class="line">       delay_before_retry 3 # 间隔时间(秒)</span><br><span class="line">    &#125;</span><br><span class="line">    # notify_up &lt;STRING&gt; # 当服务器健康检查成功时，执行的脚本。</span><br><span class="line">    # notify_down &lt;STRING&gt; # 当服务器健康检查失败时，执行的脚本。</span><br><span class="line">    # uthreshold &lt;INT&gt; # 到这台服务器的最大连接数。</span><br><span class="line">    # lthreshold &lt;INT&gt; # 到这台服务器的最小连接数。</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>real_server的服务器配置lo虚拟ip</strong></p><p><code>192.168.231.131 , 192.168.231.132</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> lo网卡名称</span></span><br><span class="line">export lo_name=ifcfg-lo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 新的lo网卡文件名</span></span><br><span class="line">export lo_new_filename=$&#123;lo_name&#125;:0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 新的lo网卡名称</span></span><br><span class="line">export lo_new_name=lo:0</span><br><span class="line"><span class="meta">#</span><span class="bash"> lvs虚拟ip</span></span><br><span class="line">export keepalived_vrrp_ip=192.168.231.128</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装工具</span></span><br><span class="line">yum install net-tools</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加 TYPE=Loopback</span></span><br><span class="line">echo "TYPE=Loopback" &gt;&gt; /etc/sysconfig/network-scripts/$&#123;lo_name&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加新的lo网卡 ifcfg-lo:0</span></span><br><span class="line">cat &gt; /etc/sysconfig/network-scripts/$&#123;lo_new_filename&#125; &lt;&lt; EOF</span><br><span class="line">DEVICE=$&#123;lo_new_name&#125;</span><br><span class="line">IPADDR=$&#123;keepalived_vrrp_ip&#125;</span><br><span class="line">NETMASK=255.255.255.255</span><br><span class="line">ONBOOT=yes</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载新的网卡</span></span><br><span class="line">ifup $&#123;lo_new_name&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看ip是否配置成功</span></span><br><span class="line">ip addr</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加虚拟ip到host,重启系统会丢失</span></span><br><span class="line">route add -host $&#123;keepalived_vrrp_ip&#125; dev $&#123;lo_new_name&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看是否生效</span></span><br><span class="line">route -n</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加到开机执行命令</span></span><br><span class="line">echo "route add -host $&#123;keepalived_vrrp_ip&#125; dev $&#123;lo_new_name&#125;" &gt;&gt; /etc/rc.local</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看添加是否成功</span></span><br><span class="line">cat /etc/rc.local</span><br></pre></td></tr></table></figure><p> <strong>real_server的服务器配置ARP</strong></p><p><code>192.168.231.131 , 192.168.231.132</code></p><p>在<code>/etc/sysctl.conf</code>添加一下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 打开文件</span></span><br><span class="line">vi /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> configration <span class="keyword">for</span> lvs</span></span><br><span class="line">net.ipv4.conf.all.arp_ignore = 1</span><br><span class="line">net.ipv4.conf.default.arp_ignore = 1</span><br><span class="line">net.ipv4.conf.lo.arp_ignore = 1</span><br><span class="line">net.ipv4.conf.all.arp_announce = 2</span><br><span class="line">net.ipv4.conf.default.arp_announce = 2</span><br><span class="line">net.ipv4.conf.lo.arp_announce = 2</span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure><p>执行<code>sysctl -p</code>让配置生效</p></li></ol><h3 id="LVS命令"><a href="#LVS命令" class="headerlink" title="LVS命令"></a>LVS命令</h3><p>命令文档:<a href="https://blog.51cto.com/10978134/2122118" target="_blank" rel="noopener">https://blog.51cto.com/10978134/2122118</a></p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><code>ipvsadm -Ln</code></td><td>查看集群列表</td></tr><tr><td><code>ipvsadm -Ln --stats</code></td><td>查看集群状态</td></tr><tr><td><code>ipvsadm -Ln --persistent-conn</code></td><td>查看持久化连接</td></tr><tr><td><code>ipvsadm -Lnc</code></td><td>查看连接请求过期时间以及请求源ip和目标ip</td></tr><tr><td><code>ipvsadm -Ln --timeout</code></td><td>查看过期时间</td></tr><tr><td><code>ipvsadm -h</code></td><td>帮助文档</td></tr><tr><td><code>man ipvsadm</code></td><td>详细帮助文档</td></tr><tr><td><code>ipvsadm -C</code></td><td>清空集群配置</td></tr><tr><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-更新calico网络插件</title>
      <link href="/posts/35aeffc1/"/>
      <url>/posts/35aeffc1/</url>
      
        <content type="html"><![CDATA[<h1 id="kubernetes-更新calico网络插件"><a href="#kubernetes-更新calico网络插件" class="headerlink" title="kubernetes-更新calico网络插件"></a>kubernetes-更新calico网络插件</h1><blockquote><p>Calico版本信息: <a href="https://docs.projectcalico.org/releases" target="_blank" rel="noopener">https://docs.projectcalico.org/releases</a><br>Calico部署教程: <a href="https://docs.projectcalico.org/getting-started/kubernetes/self-managed-onprem/onpremises" target="_blank" rel="noopener">https://docs.projectcalico.org/getting-started/kubernetes/self-managed-onprem/onpremises</a></p></blockquote><h2 id="卸载版本的calico"><a href="#卸载版本的calico" class="headerlink" title="卸载版本的calico"></a>卸载版本的calico</h2><ol><li><p><strong>卸载calico镜像</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/kubernetes/addons</span><br><span class="line">kubectl delete -f calico-rbac-kdd.yaml</span><br><span class="line">kubectl delete -f calico.yaml</span><br></pre></td></tr></table></figure></li><li><p><strong>清除cni缓存信息</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /var/lib/cni/*</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装新版本Calico-3-13"><a href="#安装新版本Calico-3-13" class="headerlink" title="安装新版本Calico (3.13)"></a>安装新版本Calico (3.13)</h2><ol><li><p><strong>下载yaml文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://docs.projectcalico.org/v3.10/manifests/calico-typha.yaml -o calico-typha-3-13.yaml</span><br></pre></td></tr></table></figure></li><li><p><strong>修改calico-typha-3-13.yaml文件内容</strong></p><p><strong><code>CALICO_IPV4POOL_CIDR</code>的内容要和<code>/etc/kubernetes/addons/calico.yaml</code>的<code>CALICO_IPV4POOL_CIDR</code>一致</strong></p></li></ol>   <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The default IPv4 pool to create on startup if none exists. Pod IPs will be</span></span><br><span class="line"><span class="comment"># chosen from this range. Changing this value after installation will have</span></span><br><span class="line"><span class="comment"># no effect. This should fall within `--cluster-cidr`.</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">CALICO_IPV4POOL_CIDR</span></span><br><span class="line"><span class="attr">  value:</span> <span class="string">"172.43.0.0/16"</span> <span class="comment"># 和/etc/kubernetes/addons/calico.yaml的一致</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p><strong>加载信息的calico</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f calico-typha-3-13.yaml</span><br></pre></td></tr></table></figure></li><li><p><strong>等待容器加载完毕</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n kube-system -w</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群晖Nas备份linux服务器到usb和公有云</title>
      <link href="/posts/a42fdd7/"/>
      <url>/posts/a42fdd7/</url>
      
        <content type="html"><![CDATA[<h1 id="群晖Nas备份linux服务器到usb和公有云"><a href="#群晖Nas备份linux服务器到usb和公有云" class="headerlink" title="群晖Nas备份linux服务器到usb和公有云"></a>群晖Nas备份linux服务器到usb和公有云</h1><h2 id="1-安装套件"><a href="#1-安装套件" class="headerlink" title="1.安装套件"></a>1.安装套件</h2><p><code>Active Backup for Business</code>:linux文件备份工具</p><p><code>Hyper Backup</code>:文件备份工具</p><p><code>Cloud Sync</code>:公有云备份工具</p><p><code>Hyper Backup Explorer</code>:用于(windows/linux/mac)浏览Hyper Backup的备份信息</p><p>下载地址:<a href="https://www.synology.cn/zh-cn/support/download/DS1515+#utilities" target="_blank" rel="noopener"><code>Hyper Backup Explorer</code></a></p><p>注意点:如果<code>Hyper Backup</code>的公有云支持项中支持你的公有云则无需在使用<code>Cloud Sync</code></p><h2 id="2-Active-Backup-for-Business备份linux文件"><a href="#2-Active-Backup-for-Business备份linux文件" class="headerlink" title="2. Active Backup for Business备份linux文件"></a>2. <code>Active Backup for Business</code>备份linux文件</h2><p>总体教程地址:<code>https://blog.caihc.site/posts/da551c6a/</code></p><p><strong>需要改变的地方是:备份模式为镜像</strong></p><p><img src="http://qiniu.caihc.site/20200119114856.png" alt></p><h2 id="3-Hyper-Backup套件备份"><a href="#3-Hyper-Backup套件备份" class="headerlink" title="3. Hyper Backup套件备份"></a>3. Hyper Backup套件备份</h2><ol><li><p>选择数据备份任务</p><p><img src="http://qiniu.caihc.site/20200119115125.png" alt></p></li><li><p>选择图中指点的地方<br>  <img src="http://qiniu.caihc.site/20200119115248.png" alt></p></li><li><p>需要备份的目的文件夹和名字<br> <img src="http://qiniu.caihc.site/20200119115346.png" alt></p></li><li><p>选择需要备份的源文件夹</p><p> <img src="http://qiniu.caihc.site/20200119115740.png" alt></p></li><li><p>备份计划</p><p><img src="http://qiniu.caihc.site/20200119115809.png" alt></p></li></ol><p>到这里相关设置基本完毕</p><h2 id="3-Cloud-Sync备份"><a href="#3-Cloud-Sync备份" class="headerlink" title="3. Cloud Sync备份"></a>3. Cloud Sync备份</h2><p><strong>如果<code>Hyper Backup</code>没有支持你的公有云,例如百度网盘</strong></p><ol><li><p>选择你要备份的云供应商(这里我选百度云)</p><p><img src="http://qiniu.caihc.site/20200119120443.png" alt></p></li><li><p>选择后就是相关的账户授权操作,这里我就不演示了</p></li><li><p>需要备份的本地路径和远程存储路径(这里因为我是已本地为主,所以就不使用双向)</p><p><img src="http://qiniu.caihc.site/20200119120652.png" alt></p></li><li><p>备份计划为每天的凌晨3点</p><p><img src="http://qiniu.caihc.site/20200119120834.png" alt></p></li></ol><p>相关配置就到这里完毕</p>]]></content>
      
      
      <categories>
          
          <category> synology </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>黑群晖 Active Backup for Business 套件激活方法</title>
      <link href="/posts/a3645eb7/"/>
      <url>/posts/a3645eb7/</url>
      
        <content type="html"><![CDATA[<h1 id="黑群晖-Active-Backup-for-Business-套件激活方法"><a href="#黑群晖-Active-Backup-for-Business-套件激活方法" class="headerlink" title="黑群晖 Active Backup for Business 套件激活方法"></a>黑群晖 Active Backup for Business 套件激活方法</h1><p><strong>群晖版本6.1</strong></p><h2 id="1-安装Active-Backup-for-Business套件"><a href="#1-安装Active-Backup-for-Business套件" class="headerlink" title="1. 安装Active Backup for Business套件"></a>1. 安装<code>Active Backup for Business</code>套件</h2><p>到套件中心安装<code>Active Backup for Business</code></p><p><img src="http://qiniu.caihc.site/1.jpg" alt></p><h2 id="2-查询群晖序列号"><a href="#2-查询群晖序列号" class="headerlink" title="2. 查询群晖序列号"></a>2. 查询群晖序列号</h2><ul><li><p>到【控制面板】 - 【信息中心】 找到【产品序列号】并记下来</p><p><img src="http://qiniu.caihc.site/1578997611(1).png" alt></p></li></ul><h2 id="3-激活"><a href="#3-激活" class="headerlink" title="3. 激活"></a>3. 激活</h2><ul><li><p>测试群晖登陆链接</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://IP地址:5001/webapi/auth.cgi?api=SYNO.API.Auth&amp;method=Login&amp;version=1&amp;account=登陆用户名&amp;passwd=登陆密码</span><br></pre></td></tr></table></figure><p>返回的结果:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"success"</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>激活</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://IP地址:5001/webapi/entry.cgi?api=SYNO.ActiveBackup.Activation&amp;method=<span class="built_in">set</span>&amp;version=1&amp;activated=<span class="literal">true</span>&amp;serial_number=<span class="string">"序列号"</span></span><br></pre></td></tr></table></figure><p>返回结果是:<code>{&quot;data&quot;:{&quot;activated&quot;:true},&quot;success&quot;:true}</code>,则为激活成功,然后打开套件就不需要再次激活</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> synology </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Active Backup for Business 备份linux文件</title>
      <link href="/posts/da551c6a/"/>
      <url>/posts/da551c6a/</url>
      
        <content type="html"><![CDATA[<h1 id="Active-Backup-for-Business-备份linux文件"><a href="#Active-Backup-for-Business-备份linux文件" class="headerlink" title="Active Backup for Business 备份linux文件"></a>Active Backup for Business 备份linux文件</h1><h2 id="1-添加需要备份的linux服务器"><a href="#1-添加需要备份的linux服务器" class="headerlink" title="1.添加需要备份的linux服务器"></a>1.添加需要备份的linux服务器</h2><p><img src="http://qiniu.caihc.site/20200114231545.png" alt></p><p><img src="http://qiniu.caihc.site/20200114231619.png" alt></p><p>SMB为备份windows系列的,rsync则是用于备份linux系列的</p><p><img src="http://qiniu.caihc.site/20200114231844.png" alt></p><p>可以选择相关的链接服务器的方式,我这里使用的是ssh密钥+rsync的方式进行链接备份,但是无论选择哪种都需要目标服务器先安装rsync</p><p><img src="http://qiniu.caihc.site/20200114231946.png" alt></p><p>选择备份的模式,我这里选择增量备份</p><p><img src="http://qiniu.caihc.site/20200114232037.png" alt></p><p>选择要备份的文件夹,可以选择多个,我这里就备份opt的文件夹</p><p><img src="http://qiniu.caihc.site/20200114233240.png" alt></p><p>填写本次备份任务的名字,要备份到本地路径的位置,还有备份计划</p><p><img src="http://qiniu.caihc.site/20200114233309.png" alt></p><p>检查是否填写正确</p><p><img src="http://qiniu.caihc.site/20200114233341.png" alt></p><p>备份计划创建成功</p><p>如果绝对需要备份一份到云存储,可以在本次备份计划后面在添加一个<code>Cloud Sync</code>的备份计划</p>]]></content>
      
      
      <categories>
          
          <category> synology </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-ELK日志功能</title>
      <link href="/posts/c6b6d8bf/"/>
      <url>/posts/c6b6d8bf/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes-ELK日志"><a href="#Kubernetes-ELK日志" class="headerlink" title="Kubernetes ELK日志"></a>Kubernetes ELK日志</h1><p> <strong>ELK = Elasticsearch + Log-pilot + Kibana</strong>搭建日志收集功能</p><h1 id="环境情况"><a href="#环境情况" class="headerlink" title="环境情况"></a>环境情况</h1><ul><li>CentOS 7 x64</li><li>Docker-ce 19.03.2</li><li>Kubernetes v1.15.1</li><li>Kubernetes 3 * Node ( 2 Master 1 Node )</li></ul><h1 id="文档地址"><a href="#文档地址" class="headerlink" title="文档地址"></a>文档地址</h1><p><strong>Log-pilot使用文档</strong>:<a href="https://github.com/AliyunContainerService/log-pilot/blob/master/docs/fluentd/docs.md" target="_blank" rel="noopener"> https://github.com/AliyunContainerService/log-pilot/blob/master/docs/fluentd/docs.md </a></p><p><strong>Log-pilot的K8s部署文档</strong>:<a href="https://www.alibabacloud.com/help/doc-detail/86552.html?spm=a2c5t.11065259.1996646101.searchclickresult.52c73384xdUKpz" target="_blank" rel="noopener"> https://www.alibabacloud.com/help/doc-detail/86552.html?spm=a2c5t.11065259.1996646101.searchclickresult.52c73384xdUKpz </a></p><p><strong>Elasticsearch+Kibana的K8S的Yaml</strong>:<a href="https://github.com/kubernetes/kubernetes/tree/release-1.15/cluster/addons/fluentd-elasticsearch" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/tree/release-1.15/cluster/addons/fluentd-elasticsearch</a></p><h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><blockquote><ol><li>目前log-pilot:0.9.7-filebeat的版本是不支持Elasticsearch 7.x的</li><li>quay.io/fluentd_elasticsearch/elasticsearch 的image国内环境可以下载(也就是1.16及以上的都不需要修改image)</li><li>gcr.io/fluentd-elasticsearch/elasticsearch 需要代理或者dockerhub中搜elasticsearch:版本号</li></ol></blockquote><h1 id="Elasticsearch部署"><a href="#Elasticsearch部署" class="headerlink" title="Elasticsearch部署"></a>Elasticsearch部署</h1><h2 id="1-创建pv-amp-pvc"><a href="#1-创建pv-amp-pvc" class="headerlink" title="1. 创建pv&amp;pvc"></a>1. 创建pv&amp;pvc</h2><blockquote><p>如果是使用其他的存储或者是自动创建的storageClass则无视这个操作</p></blockquote><ul><li><p><strong><code>elasticsearch-logging-volume.yaml</code></strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">elasticsearch-pv-0</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">#指定pv的容量为1Gi</span></span><br><span class="line"><span class="attr">  capacity:</span></span><br><span class="line"><span class="attr">    storage:</span> <span class="number">1</span><span class="string">Gi</span></span><br><span class="line">  <span class="comment">#指定访问模式</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line">    <span class="comment">#pv能以readwrite模式mount到单个节点</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="comment">#指定pv的回收策略,即pvc资源释放后的事件.recycle(不建议,使用动态供给代替)删除pvc的所有文件</span></span><br><span class="line"><span class="attr">  persistentVolumeReclaimPolicy:</span> <span class="string">Delete</span></span><br><span class="line">  <span class="comment">#指定pv的class为nfs,相当于为pv分类,pvc将指定class申请pv</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">logging</span></span><br><span class="line">  <span class="comment">#指定pv为nfs服务器上对应的目录</span></span><br><span class="line"><span class="attr">  nfs:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/data/nfs</span></span><br><span class="line"><span class="attr">    server:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.201</span></span><br><span class="line"><span class="comment"># 创建pvc</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span>                               <span class="comment"># 与StatefulSet所在的namespace一致</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">elasticsearch-logging-elasticsearch-logging-0</span>  <span class="comment"># $&#123;StatefulSet.volumeMounts.name&#125;-$&#123;StatefulSet.metadata.name&#125;.$&#123;pod.num&#125;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ReadWriteMany</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="attr">    requests:</span></span><br><span class="line"><span class="attr">      storage:</span> <span class="number">1</span><span class="string">Gi</span>                                     <span class="comment"># 请根据实际情况设定</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">logging</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">elasticsearch-pv-1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">#指定pv的容量为1Gi</span></span><br><span class="line"><span class="attr">  capacity:</span></span><br><span class="line"><span class="attr">    storage:</span> <span class="number">1</span><span class="string">Gi</span>                                    <span class="comment"># 请根据实际情况设定</span></span><br><span class="line">  <span class="comment">#指定访问模式</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line">    <span class="comment">#pv能以readwrite模式mount到单个节点</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="comment">#指定pv的回收策略,即pvc资源释放后的事件.recycle(不建议,使用动态供给代替)删除pvc的所有文件</span></span><br><span class="line"><span class="attr">  persistentVolumeReclaimPolicy:</span> <span class="string">Delete</span></span><br><span class="line">  <span class="comment">#指定pv的class为nfs,相当于为pv分类,pvc将指定class申请pv</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">logging</span></span><br><span class="line">  <span class="comment">#指定pv为nfs服务器上对应的目录</span></span><br><span class="line"><span class="attr">  nfs:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/data/nfs</span></span><br><span class="line"><span class="attr">    server:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.201</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span>                              <span class="comment"># 与StatefulSet所在的namespace一致</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">elasticsearch-logging-elasticsearch-logging-1</span> <span class="comment"># $&#123;StatefulSet.volumeMounts.name&#125;-$&#123;StatefulSet.metadata.name&#125;.$&#123;pod.num&#125;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ReadWriteMany</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="attr">    requests:</span></span><br><span class="line"><span class="attr">      storage:</span> <span class="number">1</span><span class="string">Gi</span>                                    <span class="comment"># 请根据实际情况设定</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">logging</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2-部署Elasticsearch"><a href="#2-部署Elasticsearch" class="headerlink" title="2. 部署Elasticsearch"></a>2. 部署Elasticsearch</h2><h3 id="2-1-下载配置文件"><a href="#2-1-下载配置文件" class="headerlink" title="2.1 下载配置文件"></a>2.1 下载配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/kubernetes/release-1.15/cluster/addons/fluentd-elasticsearch/es-statefulset.yaml</span><br><span class="line"></span><br><span class="line">wget https://raw.githubusercontent.com/kubernetes/kubernetes/release-1.15/cluster/addons/fluentd-elasticsearch/es-service.yaml</span><br></pre></td></tr></table></figure><h3 id="2-2-修改配置文件-es-statefulset-yaml"><a href="#2-2-修改配置文件-es-statefulset-yaml" class="headerlink" title="2.2 修改配置文件(es-statefulset.yaml)"></a>2.2 修改配置文件(es-statefulset.yaml)</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RBAC authn and authz</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line">    <span class="string">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line">    <span class="string">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="attr">- apiGroups:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"services"</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"namespaces"</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"endpoints"</span></span><br><span class="line"><span class="attr">  verbs:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">"get"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line">    <span class="string">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="attr">- kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">  apiGroup:</span> <span class="string">""</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Elasticsearch deployment itself</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">    version:</span> <span class="string">v6.6.1</span></span><br><span class="line">    <span class="string">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  serviceName:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span>                   <span class="comment"># 副本数量</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      k8s-app:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">      version:</span> <span class="string">v6.7.2</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        k8s-app:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">        version:</span> <span class="string">v6.7.2</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line">      <span class="comment"># 是否允许部署到Master节点上</span></span><br><span class="line"><span class="attr">      tolerations:</span></span><br><span class="line"><span class="attr">      - key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line"><span class="attr">        effect:</span> <span class="string">NoSchedule</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - image:</span> <span class="string">jicki/elasticsearch:v6.6.1</span>       <span class="comment"># 更换国内环境可以下载的image</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line">          <span class="comment"># need more cpu upon initialization, therefore burstable class</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">1000</span><span class="string">m</span></span><br><span class="line"><span class="attr">          requests:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">9200</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">db</span></span><br><span class="line"><span class="attr">          protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">9300</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">transport</span></span><br><span class="line"><span class="attr">          protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/usr/share/elasticsearch/data</span> <span class="comment"># 修改目录位置,使用/data的方式pv&amp;pvc会导致无限重启</span></span><br><span class="line"><span class="attr">        env:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">"NAMESPACE"</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            fieldRef:</span></span><br><span class="line"><span class="attr">              fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">POD_NAME</span></span><br><span class="line"><span class="attr">          valueFrom:</span></span><br><span class="line"><span class="attr">            fieldRef:</span></span><br><span class="line"><span class="attr">              apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">              fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">      <span class="comment">#volumes:                     </span></span><br><span class="line">      <span class="comment">#- name: elasticsearch-logging</span></span><br><span class="line">      <span class="comment">#  persistentVolumeClaim:                  # 使用共享存储的方式存储</span></span><br><span class="line">      <span class="comment">#    claimName: elasticsearch-logging      </span></span><br><span class="line">      <span class="comment">#- name: elasticsearch-logging             </span></span><br><span class="line">      <span class="comment">#  hostPath:                               # 使用挂载主机目录的方式存储</span></span><br><span class="line">      <span class="comment">#    path: /elasticsearch-data</span></span><br><span class="line">      <span class="comment">#- name: elasticsearch-logging</span></span><br><span class="line">      <span class="comment">#  emptyDir: &#123;&#125;                            # 使用emptyDir临时目录存储</span></span><br><span class="line">      <span class="comment"># Elasticsearch requires vm.max_map_count to be at least 262144.</span></span><br><span class="line">      <span class="comment"># If your OS already sets up this number to a higher value, feel free</span></span><br><span class="line">      <span class="comment"># to remove this init container.</span></span><br><span class="line"><span class="attr">      initContainers:</span>               <span class="comment"># 初始化操作</span></span><br><span class="line"><span class="attr">      - image:</span> <span class="attr">alpine:3.6</span></span><br><span class="line"><span class="attr">        command:</span> <span class="string">["/sbin/sysctl",</span> <span class="string">"-w"</span><span class="string">,</span> <span class="string">"vm.max_map_count=262144"</span><span class="string">]</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">elasticsearch-logging-init</span></span><br><span class="line"><span class="attr">        securityContext:</span></span><br><span class="line"><span class="attr">          privileged:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  volumeClaimTemplates:</span>                          <span class="comment"># storageClass动态创建pv&amp;pvc的方式</span></span><br><span class="line"><span class="attr">  - metadata:</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      accessModes:</span> </span><br><span class="line"><span class="bullet">      -</span> <span class="string">ReadWriteMany</span></span><br><span class="line"><span class="attr">      storageClassName:</span> <span class="string">logging</span>                  <span class="comment"># 这里storageClassName需要先创建好的pv&amp;pvc,也可以使用有自动创建pv&amp;pvc的storageClassName</span></span><br><span class="line"><span class="attr">      resources:</span></span><br><span class="line"><span class="attr">        requests:</span></span><br><span class="line"><span class="attr">          storage:</span> <span class="number">100</span><span class="string">Mi</span>     <span class="comment"># 请根据实际情况设定</span></span><br></pre></td></tr></table></figure><h3 id="2-3-创建服务"><a href="#2-3-创建服务" class="headerlink" title="2.3 创建服务"></a>2.3 创建服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署statefulset</span></span><br><span class="line">kubectl apply -f es-statefulset.yaml</span><br><span class="line"><span class="comment"># 部署service</span></span><br><span class="line">kubectl apply -f es-service.yaml</span><br><span class="line"><span class="comment"># 查看部署情况</span></span><br><span class="line">kubectl get statefulset,svc,pods -n kube-system |grep elasticsearch</span><br></pre></td></tr></table></figure><h1 id="3-部署-Log-pilot"><a href="#3-部署-Log-pilot" class="headerlink" title="3. 部署 Log-pilot"></a>3. 部署 Log-pilot</h1><blockquote><p>部署过程中有问题可以到任意主机的/var/log/filebeat下查看日志</p></blockquote><ul><li><p><strong><code>log-pilot.yaml</code></strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">log-pilot</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">log-pilot</span></span><br><span class="line">  <span class="comment"># 设置期望部署的namespace</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  updateStrategy:</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">RollingUpdate</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">log-pilot</span></span><br><span class="line"><span class="attr">      annotations:</span></span><br><span class="line">        <span class="string">scheduler.alpha.kubernetes.io/critical-pod:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line">      <span class="comment"># 是否允许部署到Master节点上</span></span><br><span class="line"><span class="attr">      tolerations:</span></span><br><span class="line"><span class="attr">      - key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line"><span class="attr">        effect:</span> <span class="string">NoSchedule</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">elasticsearch-logging</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">log-pilot</span></span><br><span class="line">        <span class="comment"># 版本请参考https://github.com/AliyunContainerService/log-pilot/releases</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/acs/log-pilot:0.9.7-filebeat</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">500</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">          requests:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">200</span><span class="string">m</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">200</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">        env:</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">"NODE_NAME"</span></span><br><span class="line"><span class="attr">            valueFrom:</span></span><br><span class="line"><span class="attr">              fieldRef:</span></span><br><span class="line"><span class="attr">                fieldPath:</span> <span class="string">spec.nodeName</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">"LOGGING_OUTPUT"</span></span><br><span class="line"><span class="attr">            value:</span> <span class="string">"elasticsearch"</span></span><br><span class="line">          <span class="comment"># 请确保集群到ES网络可达</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">"ELASTICSEARCH_HOSTS"</span></span><br><span class="line"><span class="attr">            value:</span> <span class="string">"elasticsearch-logging:9200"</span>   <span class="comment"># &#123;es_endpoint&#125;:&#123;es_port&#125;</span></span><br><span class="line">          <span class="comment"># 配置ES访问权限</span></span><br><span class="line">          <span class="comment">#- name: "ELASTICSEARCH_USER"</span></span><br><span class="line">          <span class="comment">#  value: "&#123;es_username&#125;"</span></span><br><span class="line">          <span class="comment">#- name: "ELASTICSEARCH_PASSWORD"</span></span><br><span class="line">          <span class="comment">#  value: "&#123;es_password&#125;"</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">sock</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/var/run/docker.sock</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/host</span></span><br><span class="line"><span class="attr">          readOnly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">varlib</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/var/lib/filebeat</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">varlog</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/var/log/filebeat</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">localtime</span></span><br><span class="line"><span class="attr">          mountPath:</span> <span class="string">/etc/localtime</span></span><br><span class="line"><span class="attr">          readOnly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">        livenessProbe:</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">          exec:</span></span><br><span class="line"><span class="attr">            command:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/pilot/healthz</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">        securityContext:</span></span><br><span class="line"><span class="attr">          capabilities:</span></span><br><span class="line"><span class="attr">            add:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">SYS_ADMIN</span></span><br><span class="line"><span class="attr">      terminationGracePeriodSeconds:</span> <span class="number">30</span>      <span class="comment"># pod关闭最大容忍时间(秒)</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">sock</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/var/run/docker.sock</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">varlib</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/var/lib/filebeat</span></span><br><span class="line"><span class="attr">          type:</span> <span class="string">DirectoryOrCreate</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">varlog</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/var/log/filebeat</span></span><br><span class="line"><span class="attr">          type:</span> <span class="string">DirectoryOrCreate</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">localtime</span></span><br><span class="line"><span class="attr">        hostPath:</span></span><br><span class="line"><span class="attr">          path:</span> <span class="string">/etc/localtime</span></span><br></pre></td></tr></table></figure></li><li><p><strong>创建服务</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f <span class="built_in">log</span>-pilot.yaml</span><br><span class="line"><span class="comment"># 查看服务部署情况</span></span><br><span class="line">kubectl get pods -n kube-system -o wide |grep <span class="built_in">log</span>-pilot</span><br></pre></td></tr></table></figure></li></ul><h1 id="4-部署-Kibana"><a href="#4-部署-Kibana" class="headerlink" title="4. 部署 Kibana"></a>4. 部署 Kibana</h1><h2 id="4-1-下载配置文件"><a href="#4-1-下载配置文件" class="headerlink" title="4.1 下载配置文件"></a>4.1 下载配置文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/kubernetes/release-1.15/cluster/addons/fluentd-elasticsearch/kibana-deployment.yaml</span><br><span class="line"></span><br><span class="line">wget https://raw.githubusercontent.com/kubernetes/kubernetes/release-1.15/cluster/addons/fluentd-elasticsearch/kibana-service.yaml</span><br></pre></td></tr></table></figure><h2 id="4-2-修改配置文件-kibana-deployment-yaml"><a href="#4-2-修改配置文件-kibana-deployment-yaml" class="headerlink" title="4.2 修改配置文件(kibana-deployment.yaml)"></a>4.2 修改配置文件(kibana-deployment.yaml)</h2><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这里使用 ingress 暴露端口 </span><br><span class="line">&gt; SERVER_BASEPATH 这个变量要注释掉</span><br><span class="line">&gt; 如果我们使用 kubectl proxy 访问，就不要注释</span><br><span class="line">&gt; 并且添加一个 CLUSTER_NAME</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kibana-logging</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kibana-logging</span></span><br><span class="line">    <span class="string">kubernetes.io/cluster-service:</span> <span class="string">"true"</span></span><br><span class="line">    <span class="string">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      k8s-app:</span> <span class="string">kibana-logging</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        k8s-app:</span> <span class="string">kibana-logging</span></span><br><span class="line"><span class="attr">      annotations:</span></span><br><span class="line">        <span class="string">seccomp.security.alpha.kubernetes.io/pod:</span> <span class="string">'docker/default'</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">kibana-logging</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">docker.elastic.co/kibana/kibana-oss:6.6.1</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line">          <span class="comment"># need more cpu upon initialization, therefore burstable class</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">1000</span><span class="string">m</span></span><br><span class="line"><span class="attr">          requests:</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="attr">        env:</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">ELASTICSEARCH_URL</span></span><br><span class="line"><span class="attr">            value:</span> <span class="attr">http://elasticsearch-logging:9200</span></span><br><span class="line">          <span class="comment">#- name: SERVER_BASEPATH</span></span><br><span class="line">          <span class="comment">#  value: /api/v1/namespaces/kube-system/services/kibana-logging/proxy</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">CLUSTER_NAME</span></span><br><span class="line"><span class="attr">            value:</span> <span class="string">docker-cluster</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">5601</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">ui</span></span><br><span class="line"><span class="attr">          protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><h2 id="4-3-创建ingress配置文件"><a href="#4-3-创建ingress配置文件" class="headerlink" title="4.3 创建ingress配置文件"></a>4.3 创建ingress配置文件</h2><p><strong><code>kibana-ingress.yaml</code></strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kibana-ingress</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">kibana.chc.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">kibana-logging</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">5601</span></span><br></pre></td></tr></table></figure><h2 id="4-4-创建服务"><a href="#4-4-创建服务" class="headerlink" title="4.4 创建服务"></a>4.4 创建服务</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f  kibana-deployment.yaml</span><br><span class="line">kubectl apply -f kibana-service.yaml</span><br><span class="line">kubectl apply -f kibana-ingress.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务部署情况</span></span><br><span class="line">kubectl get pods,svc,ingress -n kube-system|grep kibana</span><br></pre></td></tr></table></figure><h1 id="5-测试demo"><a href="#5-测试demo" class="headerlink" title="5. 测试demo"></a>5. 测试demo</h1><ul><li><p><strong><code>tomcat-log.yaml</code></strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">        env:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">aliyun_logs_tomcat</span>            <span class="comment"># 提取命令行日志</span></span><br><span class="line"><span class="attr">          value:</span> <span class="string">"stdout"</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">aliyun_logs_access</span>            <span class="comment"># 提取指定位置的日志文件</span></span><br><span class="line"><span class="attr">          value:</span> <span class="string">"/usr/local/tomcat/logs/*"</span></span><br><span class="line"><span class="attr">        volumeMounts:</span>                         </span><br><span class="line"><span class="attr">        - mountPath:</span> <span class="string">/usr/local/tomcat/logs</span>   <span class="comment"># 容器内文件日志路径需要配置emptyDir</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">accesslogs</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">accesslogs</span></span><br><span class="line"><span class="attr">        emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">web.chc.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>查看es索引创建情况</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@vmware-1 ~]<span class="comment"># curl 10.101.151.108:9200/_cat/indices?v</span></span><br><span class="line">health status index             uuid                   pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class="line">green  open   access-2019.10.17 eMvfmntrSPybJNXEYeAm0Q   5   1        158            0    868.6kb        453.2kb</span><br><span class="line">green  open   tomcat-2019.10.17 zV3ZDjy5TL-Ajg8MSlXepA   5   1        132            0    560.4kb        280.9kb</span><br><span class="line">green  open   .kibana_1         NrYxSm59RWKbov2bKRexfg   1   1          3            0     34.4kb         17.2kb</span><br><span class="line">[root@vmware-1 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="5-1-配置日志"><a href="#5-1-配置日志" class="headerlink" title="5.1 配置日志"></a>5.1 配置日志</h2><p><img src="http://qiniu.caihc.site/k8s-log/log-1.png" alt></p><p><img src="http://qiniu.caihc.site/k8s-log/log-2.png" alt></p><p><img src="http://qiniu.caihc.site/k8s-log/log-3.png" alt></p><p><img src="http://qiniu.caihc.site/k8s-log/log-4.png" alt></p><p><img src="http://qiniu.caihc.site/k8s-log/log-5.png" alt></p><p><img src="http://qiniu.caihc.site/k8s-log/log-6.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-PersistentVolume</title>
      <link href="/posts/e9c601bf/"/>
      <url>/posts/e9c601bf/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Kubermetes对于有状态的容器应用或者对数据需要持久化的应用，不仅需要将容器内的目录挂载到<code>宿主机的目录</code>或者<code>emptyDir临时存储卷</code>，而且需要更加可靠的存储来保存应用产生的重要数据，以便容器应用在重建之后，仍然可以使用之前的数据。不过，存储资源和计算资源(CPU/内存)的管理方式完全不同。为了能够屏蔽底层存储实现的细节，让用户方便使用，同时能让管理员方便管理, Kubernetes从<code>v1.0</code>版本就引入<code>PersistentVolume</code>和<code>PersistentVolumeClaim</code>两个资源对象来实现对存储的管理子系统。</p><p><code>PersistentVolume (PV)</code>是对底层网络共享存储的抽象，将共享存储定义为一种“资源”，比如节点(Node) 也是一种容 器应用可以“消费”的资源。PV由管理员进行创建和配置，它与共享存储的具体实现直接相关，例如GlusterFS、iSCSI、 RBD或<code>GCB/AWS公有云</code>提供的共享存储，通过插件式的机制完成与共享存储的对接，以供应用访问和使用。</p><p><code>PersistentVolumeClaim (PVC)</code>则是用户对于存储资源的一个“申请”。就像Pod“消费”Node的资源一-样， PVC会“消费”PV资源。PVC 可以申请特定的存储空间和访问模式。</p><p><code>StorageClass</code>，使用PVC“申请”到一定的存储空间仍然不足以满足应用对于存储设备的各种需求。通常应用程序都会对存储设备的特性和性能有不同的要求，包括读写速度、并发性能、数据冗余等更高的要求，Kubernetes 从v1.4版本开始引入了-一个新的资源对象<code>StorageClass</code>,用于标记存储资源的特性和性能。到<code>v1.6</code>版本时，<code>StorageClass</code>和<code>动态资源供应</code>的机制得到了完善，实现了存储卷的按需创建，在共享存储的自动化管理进程中实现了重要的一步。</p><p>通过<code>StorageClass</code>的定义，管理员可以将存储资源定义为某种<code>类别(Class)</code>, 正如存储设备对于自身的配置描述(Profile)，例如“快速存储”“慢速存储”“有数据冗余”“无数据冗余”等。用户根据<code>StorageClas</code>的描述就能够直观得知各种存储资源的特性，就可以根据应用对存储资源的需求去申请存储资源了。</p><p><img src="http://qiniu.caihc.site/k8s/pv&pvc.PNG" alt></p><p>文档地址:<a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/" target="_blank" rel="noopener"> https://kubernetes.io/docs/concepts/storage/persistent-volumes/ </a></p><h3 id="PersistentVolume支持的持久化存储的插件"><a href="#PersistentVolume支持的持久化存储的插件" class="headerlink" title="PersistentVolume支持的持久化存储的插件"></a>PersistentVolume支持的持久化存储的插件</h3><table><thead><tr><th align="left">Volume Plugin</th><th align="left">ReadWriteOnce</th><th align="left">ReadOnlyMany</th><th align="center">ReadWriteMany</th></tr></thead><tbody><tr><td align="left">AWSElasticBlockStore</td><td align="left">✓</td><td align="left">-</td><td align="center">-</td></tr><tr><td align="left">AzureFile</td><td align="left">✓</td><td align="left">✓</td><td align="center">✓</td></tr><tr><td align="left">AzureDisk</td><td align="left">✓</td><td align="left">-</td><td align="center">-</td></tr><tr><td align="left">CephFS</td><td align="left">✓</td><td align="left">✓</td><td align="center">✓</td></tr><tr><td align="left">Cinder</td><td align="left">✓</td><td align="left">-</td><td align="center">-</td></tr><tr><td align="left">CSI</td><td align="left">depends on the driver</td><td align="left">depends on the driver</td><td align="center">depends on the driver</td></tr><tr><td align="left">FC</td><td align="left">✓</td><td align="left">✓</td><td align="center">-</td></tr><tr><td align="left">FlexVolume</td><td align="left">✓</td><td align="left">✓</td><td align="center">depends on the driver</td></tr><tr><td align="left">Flocker</td><td align="left">✓</td><td align="left">-</td><td align="center">-</td></tr><tr><td align="left">GCEPersistentDisk</td><td align="left">✓</td><td align="left">✓</td><td align="center">-</td></tr><tr><td align="left">Glusterfs</td><td align="left">✓</td><td align="left">✓</td><td align="center">✓</td></tr><tr><td align="left">HostPath</td><td align="left">✓</td><td align="left">-</td><td align="center">-</td></tr><tr><td align="left">iSCSI</td><td align="left">✓</td><td align="left">✓</td><td align="center">-</td></tr><tr><td align="left">Quobyte</td><td align="left">✓</td><td align="left">✓</td><td align="center">✓</td></tr><tr><td align="left">NFS</td><td align="left">✓</td><td align="left">✓</td><td align="center">✓</td></tr><tr><td align="left">RBD</td><td align="left">✓</td><td align="left">✓</td><td align="center">-</td></tr><tr><td align="left">VsphereVolume</td><td align="left">✓</td><td align="left">-</td><td align="center">- (works when Pods are collocated)</td></tr><tr><td align="left">PortworxVolume</td><td align="left">✓</td><td align="left">-</td><td align="center">✓</td></tr><tr><td align="left">ScaleIO</td><td align="left">✓</td><td align="left">✓</td><td align="center">-</td></tr><tr><td align="left">StorageOS</td><td align="left">✓</td><td align="left">-</td><td align="center">-</td></tr></tbody></table><h3 id="访问模式-accessModes"><a href="#访问模式-accessModes" class="headerlink" title="访问模式(accessModes)"></a>访问模式(<code>accessModes</code>)</h3><ul><li><code>ReadWriteOnce</code>——该卷可以被单个节点以读/写模式挂载</li><li><code>ReadOnlyMany</code>——该卷可以被多个节点以只读模式挂载</li><li><code>ReadWriteMany</code>——该卷可以被多个节点以读/写模式挂载</li></ul><p><strong>在命令行中，访问模式缩写为</strong>：</p><ul><li><code>RWO - ReadWriteOnce</code></li><li><code>ROX - ReadOnlyMany</code></li><li><code>RWX - ReadWriteMany</code></li></ul><h3 id="回收策略-ReclaimPolicy"><a href="#回收策略-ReclaimPolicy" class="headerlink" title="回收策略(ReclaimPolicy)"></a>回收策略(<code>ReclaimPolicy</code>)</h3><ul><li><code>Retain</code>（保留）——手动回收</li><li><code>Recycle</code>（回收）——基本擦除（<code>rm -rf /myvolume/*</code> ）</li><li><code>Delete</code>（删除）——关联的存储资产（例如 AWS EBS、GCE PD、Azure Disk 和 OpenStack Cinder 卷）<br>将被删除<br><strong>当前，只有 NFS 和 HostPath 支持回收策略。AWS EBS、GCE PD、Azure Disk 和 Cinder 卷支持删除策略</strong></li></ul><h3 id="卷的状态"><a href="#卷的状态" class="headerlink" title="卷的状态"></a>卷的状态</h3><p>卷可以处于以下状态：</p><ul><li><code>Available</code>（可用）——一块空闲资源还没有被任何声明绑定</li><li><code>Bound</code>（已绑定）——卷已经被声明绑定</li><li><code>Released</code>（已释放）——声明被删除，但是资源还未被集群重新声明</li><li><code>Failed</code>（失败）——该卷的自动回收失败</li></ul><h2 id="使用nfs来实现共享存储"><a href="#使用nfs来实现共享存储" class="headerlink" title="使用nfs来实现共享存储"></a>使用nfs来实现共享存储</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><table><thead><tr><th>主机</th><th>角色</th></tr></thead><tbody><tr><td>10.0.0.201</td><td>Master</td></tr><tr><td>10.0.0.202</td><td>Master</td></tr><tr><td>10.0.0.203</td><td>Node</td></tr></tbody></table><h3 id="安装nfs"><a href="#安装nfs" class="headerlink" title="安装nfs"></a>安装nfs</h3><ul><li><p>安装nfs服务端</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 10.0.0.201</span></span><br><span class="line">yum install nfs-utils rpcbind</span><br></pre></td></tr></table></figure></li><li><p>用于nfs服务的存储文件夹</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 10.0.0.201</span></span><br><span class="line">mkdir -p /data/nfs</span><br></pre></td></tr></table></figure></li><li><p><code>/etc/exports</code>文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/exports</span><br><span class="line">/data/nfs 10.0.0.0/24(rw,sync)</span><br></pre></td></tr></table></figure></li><li><p>开启nfs服务,更改文件夹权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> nfs-server.service &amp;&amp; systemctl start nfs-server.service</span><br><span class="line"></span><br><span class="line">sudo chown nfsnobody /data/nfs</span><br><span class="line"><span class="comment"># 检验是否开启成功</span></span><br><span class="line">showmount -e</span><br><span class="line">Export list <span class="keyword">for</span> vmware-1:</span><br><span class="line">/data/nfs 10.0.0.0/24</span><br></pre></td></tr></table></figure></li><li><p>nfs客户端安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有节点都要安装</span></span><br><span class="line">yum install nfs-utils -y</span><br></pre></td></tr></table></figure></li></ul><h3 id="添加StorageClass动态存储插件"><a href="#添加StorageClass动态存储插件" class="headerlink" title="添加StorageClass动态存储插件"></a>添加StorageClass动态存储插件</h3><p>文档地址:<a href="https://github.com/kubernetes-incubator/external-storage/tree/master/nfs-client" target="_blank" rel="noopener">https://github.com/kubernetes-incubator/external-storage/tree/master/nfs-client</a></p><p>配置文件地址:<a href="https://github.com/kubernetes-incubator/external-storage/tree/master/nfs-client/deploy" target="_blank" rel="noopener">https://github.com/kubernetes-incubator/external-storage/tree/master/nfs-client/deploy</a></p><ul><li><p><code>rbac.yaml</code></p><p>无需更改文件内容直接加载配置文件</p></li><li><p><code>nfs_deployment.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line"><span class="attr">  strategy:</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">Recreate</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">nfs-client-provisioner</span>  <span class="comment">#这个要和ServiceAccount的metadata.name的名字一致</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">quay.io/external_storage/nfs-client-provisioner:latest</span></span><br><span class="line"><span class="attr">          volumeMounts:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">nfs-client-root</span></span><br><span class="line"><span class="attr">              mountPath:</span> <span class="string">/persistentvolumes</span></span><br><span class="line"><span class="attr">          env:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">PROVISIONER_NAME</span></span><br><span class="line"><span class="attr">              value:</span> <span class="string">fuseim.pri/ifs</span>          <span class="comment"># 自定义名称,storageclass后面要用到</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">NFS_SERVER</span></span><br><span class="line"><span class="attr">              value:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.201</span>              <span class="comment"># nfs服务器地址</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">NFS_PATH</span></span><br><span class="line"><span class="attr">              value:</span> <span class="string">/data/nfs</span>               <span class="comment"># nfs系统的挂载路径</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">nfs-client-root</span></span><br><span class="line"><span class="attr">          nfs:</span></span><br><span class="line"><span class="attr">            server:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.201</span>               <span class="comment"># nfs服务器地址</span></span><br><span class="line"><span class="attr">            path:</span> <span class="string">/data/nfs</span>                  <span class="comment"># nfs系统的挂载路径</span></span><br></pre></td></tr></table></figure></li><li><p><code>nfs_storageclass.yaml</code>也就是<code>class.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">managed-nfs-storage</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">fuseim.pri/ifs</span> <span class="comment"># nfs_deployment.yaml的PROVISIONER_NAME的名字一样</span></span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line"><span class="attr">  archiveOnDelete:</span> <span class="string">"false"</span> <span class="comment"># 当设置为“false”时，你的pv将不会被存档,在删除PVC时执行。</span></span><br></pre></td></tr></table></figure></li><li><p><code>nfs_storageclass_pvc.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nfs-pvc</span></span><br><span class="line"><span class="comment">#  annotations:</span></span><br><span class="line"><span class="comment">#    volume.beta.kubernetes.io/storage-class: "managed-nfs-storage" # nfs_storageclass.yaml的name一样</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">"managed-nfs-storage"</span> <span class="comment"># nfs_storageclass.yaml的name一样</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ReadWriteOnce</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="attr">    requests:</span></span><br><span class="line"><span class="attr">      storage:</span> <span class="number">10</span><span class="string">Mi</span></span><br></pre></td></tr></table></figure></li><li><p>测试demo,<code>web-deploy.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-deploy</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  strategy:</span></span><br><span class="line"><span class="attr">    rollingUpdate:</span></span><br><span class="line"><span class="attr">      maxSurge:</span> <span class="number">25</span><span class="string">%</span></span><br><span class="line"><span class="attr">      maxUnavailable:</span> <span class="number">25</span><span class="string">%</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">RollingUpdate</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-deploy</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-deploy</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-deploy</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">        volumeMounts:</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">nfs-volume</span></span><br><span class="line"><span class="attr">            mountPath:</span> <span class="string">"/tomcat-data"</span></span><br><span class="line"><span class="attr">            readOnly:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      volumes:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">nfs-volume</span></span><br><span class="line"><span class="attr">        persistentVolumeClaim:</span></span><br><span class="line"><span class="attr">          claimName:</span> <span class="string">nfs-pvc</span>      <span class="comment"># pvc的名称</span></span><br></pre></td></tr></table></figure><p>然后<code>exec</code>进去一个pod到<code>/tomcat-data</code>目录下添加编辑文件,然后去另一个<code>pod</code>和<code>/data/nfs</code>下查看</p></li></ul><h3 id="添加静态的pv-amp-pvc"><a href="#添加静态的pv-amp-pvc" class="headerlink" title="添加静态的pv&amp;pvc"></a>添加静态的pv&amp;pvc</h3><ul><li><p><code>nfs_pv.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nfspv1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">#指定pv的容量为1Gi</span></span><br><span class="line"><span class="attr">  capacity:</span></span><br><span class="line"><span class="attr">    storage:</span> <span class="number">1</span><span class="string">Gi</span></span><br><span class="line">  <span class="comment">#指定访问模式</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line">    <span class="comment">#pv能以readwrite模式mount到单个节点</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="comment">#指定pv的回收策略,即pvc资源释放后的事件.recycle(不建议,使用动态供给代替)删除pvc的所有文件</span></span><br><span class="line"><span class="attr">  persistentVolumeReclaimPolicy:</span> <span class="string">Recycle</span></span><br><span class="line">  <span class="comment">#指定pv的class为nfs,相当于为pv分类,pvc将指定class申请pv</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">mynfs</span></span><br><span class="line">  <span class="comment">#指定pv为nfs服务器上对应的目录</span></span><br><span class="line"><span class="attr">  nfs:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/data/nfs</span></span><br><span class="line"><span class="attr">    server:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.201</span></span><br></pre></td></tr></table></figure></li><li><p><code>nfs_pvc.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nfspvc1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  accessModes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">ReadWriteOnce</span></span><br><span class="line"><span class="attr">  resources:</span></span><br><span class="line"><span class="attr">    requests:</span></span><br><span class="line"><span class="attr">      storage:</span> <span class="number">1</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">  storageClassName:</span> <span class="string">mynfs</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-IngressNginx</title>
      <link href="/posts/64d5c842/"/>
      <url>/posts/64d5c842/</url>
      
        <content type="html"><![CDATA[<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><ul><li><p>文档地址:<a href="https://kubernetes.github.io/ingress-nginx/" target="_blank" rel="noopener">https://kubernetes.github.io/ingress-nginx/</a></p></li><li><p>下载配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>下载image</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取需要下载的image</span></span><br><span class="line">grep image mandatory.yaml</span><br><span class="line">image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.0</span><br><span class="line"><span class="comment"># 下载代理下载image</span></span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/nginx-ingress-controller:0.25.0</span><br><span class="line"><span class="comment"># 打上tag</span></span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/nginx-ingress-controller:0.25.0 quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.0</span><br></pre></td></tr></table></figure></li><li><p>修改<code>mandatory.yaml</code>文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span> <span class="comment">#改成 DaemonSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span> <span class="comment"># 删除replicas</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line">      <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line">        <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">      annotations:</span></span><br><span class="line">        <span class="string">prometheus.io/port:</span> <span class="string">"10254"</span></span><br><span class="line">        <span class="string">prometheus.io/scrape:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">      <span class="comment"># 网络模式为hostNetwork</span></span><br><span class="line"><span class="attr">      hostNetwork:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment"># node选择器</span></span><br><span class="line"><span class="attr">      nodeSelector:</span></span><br><span class="line">      <span class="comment"># app_gateway便签的</span></span><br><span class="line"><span class="attr">        app_gateway:</span> <span class="string">ingress</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.0</span></span><br><span class="line"><span class="attr">          args:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--publish-service=$(POD_NAMESPACE)/ingress-nginx</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line"><span class="attr">          securityContext:</span></span><br><span class="line"><span class="attr">            allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p><code>err services &quot;ingress-nginx&quot; not found</code>异常</p><p><code>ingress-nginx-service.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  externalTrafficPolicy:</span> <span class="string">Local</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">LoadBalancer</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">      port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">      targetPort:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">https</span></span><br><span class="line"><span class="attr">      port:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">      targetPort:</span> <span class="string">https</span></span><br></pre></td></tr></table></figure></li><li><p>添加<code>ingress-nginx</code>的pod节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看ingress-nginx便签</span></span><br><span class="line">kubectl get ds -n ingress-nginx nginx-ingress-controller</span><br><span class="line"><span class="comment"># 在nodel节点添加NODE SELECTOR对应的便签(这里我nginx-ingress的便签是app_gateway=ingress)</span></span><br><span class="line">kubectl label node vmware-3 app_gateway=ingress</span><br><span class="line"><span class="comment"># 删除同理,清除node标签</span></span><br><span class="line">kubectl label node vmware-3 app_gateway-</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>获取<code>nginx-ingress-controller.yaml</code>配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get daemonsets -n ingress-nginx -o yaml &gt; ingress-nginx-controller.yaml</span><br></pre></td></tr></table></figure><p>删除无用的配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">items:</span></span><br><span class="line"><span class="attr">- apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">  metadata:</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line">      <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  spec:</span></span><br><span class="line"><span class="attr">    revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">    selector:</span></span><br><span class="line"><span class="attr">      matchLabels:</span></span><br><span class="line">        <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">    template:</span></span><br><span class="line"><span class="attr">      metadata:</span></span><br><span class="line"><span class="attr">        annotations:</span></span><br><span class="line">          <span class="string">prometheus.io/port:</span> <span class="string">"10254"</span></span><br><span class="line">          <span class="string">prometheus.io/scrape:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">        creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line"><span class="attr">        labels:</span></span><br><span class="line">          <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">          <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">      spec:</span></span><br><span class="line"><span class="attr">        containers:</span></span><br><span class="line"><span class="attr">        - args:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--publish-service=$(POD_NAMESPACE)/ingress-nginx</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line"><span class="attr">          env:</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">POD_NAME</span></span><br><span class="line"><span class="attr">            valueFrom:</span></span><br><span class="line"><span class="attr">              fieldRef:</span></span><br><span class="line"><span class="attr">                apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">                fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line"><span class="attr">            valueFrom:</span></span><br><span class="line"><span class="attr">              fieldRef:</span></span><br><span class="line"><span class="attr">                apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">                fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1</span></span><br><span class="line"><span class="attr">          imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">          lifecycle:</span></span><br><span class="line"><span class="attr">            preStop:</span></span><br><span class="line"><span class="attr">              exec:</span></span><br><span class="line"><span class="attr">                command:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">/wait-shutdown</span></span><br><span class="line"><span class="attr">          livenessProbe:</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/healthz</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">10254</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line"><span class="attr">          ports:</span></span><br><span class="line"><span class="attr">          - containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">            hostPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">            protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">          - containerPort:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">            hostPort:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">https</span></span><br><span class="line"><span class="attr">            protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">          readinessProbe:</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/healthz</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">10254</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          resources:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">          securityContext:</span></span><br><span class="line"><span class="attr">            allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">            capabilities:</span></span><br><span class="line"><span class="attr">              add:</span></span><br><span class="line"><span class="bullet">              -</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line"><span class="attr">              drop:</span></span><br><span class="line"><span class="bullet">              -</span> <span class="string">ALL</span></span><br><span class="line"><span class="attr">            runAsUser:</span> <span class="number">33</span></span><br><span class="line"><span class="attr">          terminationMessagePath:</span> <span class="string">/dev/termination-log</span></span><br><span class="line"><span class="attr">          terminationMessagePolicy:</span> <span class="string">File</span></span><br><span class="line"><span class="attr">        dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line"><span class="attr">        hostNetwork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">        nodeSelector:</span></span><br><span class="line"><span class="attr">          app_gateway:</span> <span class="string">ingress</span></span><br><span class="line"><span class="attr">        restartPolicy:</span> <span class="string">Always</span></span><br><span class="line"><span class="attr">        schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line"><span class="attr">        securityContext:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">        serviceAccount:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line"><span class="attr">        serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line"><span class="attr">        terminationGracePeriodSeconds:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">    templateGeneration:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    updateStrategy:</span></span><br><span class="line"><span class="attr">      rollingUpdate:</span></span><br><span class="line"><span class="attr">        maxUnavailable:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      type:</span> <span class="string">RollingUpdate</span></span><br><span class="line"><span class="attr">  status:</span></span><br><span class="line"><span class="attr">    currentNumberScheduled:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    desiredNumberScheduled:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    numberAvailable:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    numberMisscheduled:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">    numberReady:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    observedGeneration:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    updatedNumberScheduled:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">List</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  resourceVersion:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  selfLink:</span> <span class="string">""</span></span><br></pre></td></tr></table></figure></li><li><p>测试demo</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat-demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">tomcat-demo</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">tomcat-demo</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">tomcat-demo</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat-demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">tomcat-demo</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat-demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">tomcat.chcks.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">tomcat-demo</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>创建pod</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f ingerss-demo.yaml</span><br><span class="line"><span class="comment"># 查看创建情况</span></span><br><span class="line">kubectl get pod -o wide</span><br></pre></td></tr></table></figure></li><li><p>如果实在有域名的服务器上,则需要修改自己主机的host加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.43.112 tomcat.chcks.com</span><br></pre></td></tr></table></figure><p>然后在浏览器上访问:<code>tomcat.chcks.com</code></p></li></ul><h2 id="四层代理配置"><a href="#四层代理配置" class="headerlink" title="四层代理配置"></a>四层代理配置</h2><p><code>tcp-service.yaml</code> :指定对外服务端口(服务发现)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tcp-services</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="string">"30000"</span><span class="string">:</span> <span class="string">default/tomcat-demo:80</span> <span class="comment"># 指定服务对外的端口</span></span><br></pre></td></tr></table></figure><h2 id="定制配置"><a href="#定制配置" class="headerlink" title="定制配置"></a>定制配置</h2><h3 id="nginx的基本配置"><a href="#nginx的基本配置" class="headerlink" title="nginx的基本配置"></a>nginx的基本配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nginx配置</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-configuration</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line"><span class="attr">  proxy-body-size:</span> <span class="string">"64m"</span>          <span class="comment"># 客户端请求主体的大小</span></span><br><span class="line"><span class="attr">  proxy-read-timeout:</span> <span class="string">"180"</span>       <span class="comment"># 设置从代理服务器读取响应的超时(以秒为单位)</span></span><br><span class="line"><span class="attr">  proxy-send-timeout:</span> <span class="string">"180"</span>       <span class="comment"># 设置向代理服务器传输请求的超时(以秒为单位)</span></span><br></pre></td></tr></table></figure><p>配置的文档地址:<a href="https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/" target="_blank" rel="noopener">https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/</a></p><h3 id="Header配置"><a href="#Header配置" class="headerlink" title="Header配置"></a>Header配置</h3><p>文档地址:<a href="https://kubernetes.github.io/ingress-nginx/examples/customization/custom-headers/" target="_blank" rel="noopener">https://kubernetes.github.io/ingress-nginx/examples/customization/custom-headers/</a></p><ul><li><p><code>nginx-all-header.yaml</code>:全局header配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line"><span class="attr">  proxy-set-headers:</span> <span class="string">"ingress-nginx/custom-headers"</span>  <span class="comment"># 定义header配置名称,规范:namespace/名称</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">nginx-configuration</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line">    <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># 定义全局的header</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="comment"># 添加header的内容</span></span><br><span class="line"><span class="attr">  X-Different-Name:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">  X-Request-Start:</span> <span class="string">t=$&#123;msec&#125;</span></span><br><span class="line"><span class="attr">  X-Using-Nginx-Controller:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">custom-headers</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">ingress-nginx</span></span><br></pre></td></tr></table></figure></li><li><p><code>nginx-service-header.yaml</code>:应用于service的header</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="comment"># 定义header</span></span><br><span class="line">    <span class="string">nginx.ingress.kubernetes.io/configuration-snippet:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      more_set_headers "Request-Id: $req_id";</span></span><br><span class="line"><span class="string"></span><span class="attr">  name:</span> <span class="string">tomcat-demo</span> <span class="comment"># service名称</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span> <span class="comment"># namespaces</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">tomcat.chcks.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">tomcat-demo</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">        path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="template模板配置"><a href="#template模板配置" class="headerlink" title="template模板配置"></a>template模板配置</h3><p>文档地址:<a href="https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/custom-template/" target="_blank" rel="noopener">https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/custom-template/</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 到nginx-ingress-controller的pod拷贝nginx.tmpl</span></span><br><span class="line"><span class="comment"># 查看nginx-ingress-controller所在的服务器</span></span><br><span class="line">kubectl get pod -n ingress-nginx -o wide</span><br><span class="line"><span class="comment"># 到所在服务器拷贝文件</span></span><br><span class="line">docker ps | grep k8s_nginx-ingress-controller</span><br><span class="line">docker cp 3d4006b68967:/etc/nginx/template/nginx.tmpl .</span><br><span class="line">scp nginx.tmpl root@vmware-1:/opt/kubernetes/</span><br><span class="line"><span class="comment"># 回到vmware-1的服务器</span></span><br><span class="line">kubectl create configmap nginx-template --from-file nginx.tmpl -n ingress-nginx</span><br><span class="line">kubectl get configmaps -n ingress-nginx nginx-template -o yaml</span><br></pre></td></tr></table></figure><p>应用配置文件到<code>nginx-ingress-controller</code>,修改<code>nginx-ingress-controller.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">items:</span></span><br><span class="line"><span class="attr">- apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">  metadata:</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line">      <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  spec:</span></span><br><span class="line"><span class="attr">    revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">    selector:</span></span><br><span class="line"><span class="attr">      matchLabels:</span></span><br><span class="line">        <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">    template:</span></span><br><span class="line"><span class="attr">      metadata:</span></span><br><span class="line"><span class="attr">        annotations:</span></span><br><span class="line">          <span class="string">prometheus.io/port:</span> <span class="string">"10254"</span></span><br><span class="line">          <span class="string">prometheus.io/scrape:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">        creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line"><span class="attr">        labels:</span></span><br><span class="line">          <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">          <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">      spec:</span></span><br><span class="line"><span class="attr">        containers:</span></span><br><span class="line"><span class="attr">        - args:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--publish-service=$(POD_NAMESPACE)/ingress-nginx</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line"><span class="attr">          volumeMounts:</span>  <span class="comment"># 挂载到容器内部的存储卷配置</span></span><br><span class="line"><span class="attr">          - mountPath:</span> <span class="string">/etc/nginx/template</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">nginx-template-volume</span></span><br><span class="line"><span class="attr">            readOnly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">          env:</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">POD_NAME</span></span><br><span class="line"><span class="attr">            valueFrom:</span></span><br><span class="line"><span class="attr">              fieldRef:</span></span><br><span class="line"><span class="attr">                apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">                fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line"><span class="attr">            valueFrom:</span></span><br><span class="line"><span class="attr">              fieldRef:</span></span><br><span class="line"><span class="attr">                apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">                fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1</span></span><br><span class="line"><span class="attr">          imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">          lifecycle:</span></span><br><span class="line"><span class="attr">            preStop:</span></span><br><span class="line"><span class="attr">              exec:</span></span><br><span class="line"><span class="attr">                command:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">/wait-shutdown</span></span><br><span class="line"><span class="attr">          livenessProbe:</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/healthz</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">10254</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line"><span class="attr">          ports:</span></span><br><span class="line"><span class="attr">          - containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">            hostPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">            protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">          - containerPort:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">            hostPort:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">https</span></span><br><span class="line"><span class="attr">            protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">          readinessProbe:</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/healthz</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">10254</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          resources:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">          securityContext:</span></span><br><span class="line"><span class="attr">            allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">            capabilities:</span></span><br><span class="line"><span class="attr">              add:</span></span><br><span class="line"><span class="bullet">              -</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line"><span class="attr">              drop:</span></span><br><span class="line"><span class="bullet">              -</span> <span class="string">ALL</span></span><br><span class="line"><span class="attr">            runAsUser:</span> <span class="number">33</span></span><br><span class="line"><span class="attr">          terminationMessagePath:</span> <span class="string">/dev/termination-log</span></span><br><span class="line"><span class="attr">          terminationMessagePolicy:</span> <span class="string">File</span></span><br><span class="line"><span class="attr">        dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line"><span class="attr">        hostNetwork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">        nodeSelector:</span></span><br><span class="line"><span class="attr">          app_gateway:</span> <span class="string">ingress</span></span><br><span class="line"><span class="attr">        restartPolicy:</span> <span class="string">Always</span></span><br><span class="line"><span class="attr">        schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line"><span class="attr">        securityContext:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">        serviceAccount:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line"><span class="attr">        serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line"><span class="attr">        terminationGracePeriodSeconds:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">        volumes:</span>       <span class="comment">#pod上定义共享存储卷列表</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">nginx-template-volume</span></span><br><span class="line"><span class="attr">          configMap:</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">nginx-template</span></span><br><span class="line"><span class="attr">            items:</span></span><br><span class="line"><span class="attr">            - key:</span> <span class="string">nginx.tmpl</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">nginx.tmpl</span></span><br><span class="line"><span class="attr">    templateGeneration:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    updateStrategy:</span></span><br><span class="line"><span class="attr">      rollingUpdate:</span></span><br><span class="line"><span class="attr">        maxUnavailable:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      type:</span> <span class="string">RollingUpdate</span></span><br><span class="line"><span class="attr">  status:</span></span><br><span class="line"><span class="attr">    currentNumberScheduled:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    desiredNumberScheduled:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    numberAvailable:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    numberMisscheduled:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">    numberReady:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    observedGeneration:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    updatedNumberScheduled:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">List</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  resourceVersion:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  selfLink:</span> <span class="string">""</span></span><br></pre></td></tr></table></figure><p>如需修改模板文件则</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl edit configmaps -n ingress-nginx nginx-template</span><br></pre></td></tr></table></figure><h3 id="TSL-HTTPS"><a href="#TSL-HTTPS" class="headerlink" title="TSL/HTTPS"></a>TSL/HTTPS</h3><p>文档地址:<a href="https://kubernetes.github.io/ingress-nginx/user-guide/tls/#default-ssl-certificate" target="_blank" rel="noopener">https://kubernetes.github.io/ingress-nginx/user-guide/tls/#default-ssl-certificate</a></p><p>生成证书文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout chc.key -out chc.pem -subj <span class="string">"/CN=*.chcks.com/O=*.chcks.com"</span></span><br><span class="line"></span><br><span class="line">kubectl create secret tls chc-tls --key chc.key --cert chc.pem -n ingress-nginx</span><br></pre></td></tr></table></figure><p>修改配置文件<code>nginx-ingress-controller.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">items:</span></span><br><span class="line"><span class="attr">- apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">  kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">  metadata:</span></span><br><span class="line"><span class="attr">    labels:</span></span><br><span class="line">      <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line"><span class="attr">    namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">  spec:</span></span><br><span class="line"><span class="attr">    revisionHistoryLimit:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">    selector:</span></span><br><span class="line"><span class="attr">      matchLabels:</span></span><br><span class="line">        <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">    template:</span></span><br><span class="line"><span class="attr">      metadata:</span></span><br><span class="line"><span class="attr">        annotations:</span></span><br><span class="line">          <span class="string">prometheus.io/port:</span> <span class="string">"10254"</span></span><br><span class="line">          <span class="string">prometheus.io/scrape:</span> <span class="string">"true"</span></span><br><span class="line"><span class="attr">        creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line"><span class="attr">        labels:</span></span><br><span class="line">          <span class="string">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">          <span class="string">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">      spec:</span></span><br><span class="line"><span class="attr">        containers:</span></span><br><span class="line"><span class="attr">        - args:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--publish-service=$(POD_NAMESPACE)/ingress-nginx</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line"><span class="bullet">          -</span> <span class="bullet">--default-ssl-certificate=ingress-nginx/chc-tls</span> <span class="comment">#使用证书</span></span><br><span class="line"><span class="attr">          volumeMounts:</span>  <span class="comment"># 挂载到容器内部的存储卷配置</span></span><br><span class="line"><span class="attr">          - mountPath:</span> <span class="string">/etc/nginx/template</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">nginx-template-volume</span></span><br><span class="line"><span class="attr">            readOnly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">          env:</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">POD_NAME</span></span><br><span class="line"><span class="attr">            valueFrom:</span></span><br><span class="line"><span class="attr">              fieldRef:</span></span><br><span class="line"><span class="attr">                apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">                fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line"><span class="attr">          - name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line"><span class="attr">            valueFrom:</span></span><br><span class="line"><span class="attr">              fieldRef:</span></span><br><span class="line"><span class="attr">                apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">                fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line"><span class="attr">          image:</span> <span class="string">quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1</span></span><br><span class="line"><span class="attr">          imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">          lifecycle:</span></span><br><span class="line"><span class="attr">            preStop:</span></span><br><span class="line"><span class="attr">              exec:</span></span><br><span class="line"><span class="attr">                command:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">/wait-shutdown</span></span><br><span class="line"><span class="attr">          livenessProbe:</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/healthz</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">10254</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line"><span class="attr">          ports:</span></span><br><span class="line"><span class="attr">          - containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">            hostPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">            protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">          - containerPort:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">            hostPort:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">https</span></span><br><span class="line"><span class="attr">            protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">          readinessProbe:</span></span><br><span class="line"><span class="attr">            failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">            httpGet:</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">/healthz</span></span><br><span class="line"><span class="attr">              port:</span> <span class="number">10254</span></span><br><span class="line"><span class="attr">              scheme:</span> <span class="string">HTTP</span></span><br><span class="line"><span class="attr">            periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">            successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          resources:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">          securityContext:</span></span><br><span class="line"><span class="attr">            allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">            capabilities:</span></span><br><span class="line"><span class="attr">              add:</span></span><br><span class="line"><span class="bullet">              -</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line"><span class="attr">              drop:</span></span><br><span class="line"><span class="bullet">              -</span> <span class="string">ALL</span></span><br><span class="line"><span class="attr">            runAsUser:</span> <span class="number">33</span></span><br><span class="line"><span class="attr">          terminationMessagePath:</span> <span class="string">/dev/termination-log</span></span><br><span class="line"><span class="attr">          terminationMessagePolicy:</span> <span class="string">File</span></span><br><span class="line"><span class="attr">        dnsPolicy:</span> <span class="string">ClusterFirst</span></span><br><span class="line"><span class="attr">        hostNetwork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">        nodeSelector:</span></span><br><span class="line"><span class="attr">          app_gateway:</span> <span class="string">ingress</span></span><br><span class="line"><span class="attr">        restartPolicy:</span> <span class="string">Always</span></span><br><span class="line"><span class="attr">        schedulerName:</span> <span class="string">default-scheduler</span></span><br><span class="line"><span class="attr">        securityContext:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">        serviceAccount:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line"><span class="attr">        serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line"><span class="attr">        terminationGracePeriodSeconds:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">        volumes:</span>       <span class="comment">#pod上定义共享存储卷列表</span></span><br><span class="line"><span class="attr">        - name:</span> <span class="string">nginx-template-volume</span></span><br><span class="line"><span class="attr">          configMap:</span></span><br><span class="line"><span class="attr">            name:</span> <span class="string">nginx-template</span></span><br><span class="line"><span class="attr">            items:</span></span><br><span class="line"><span class="attr">            - key:</span> <span class="string">nginx.tmpl</span></span><br><span class="line"><span class="attr">              path:</span> <span class="string">nginx.tmpl</span></span><br><span class="line"><span class="attr">    templateGeneration:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    updateStrategy:</span></span><br><span class="line"><span class="attr">      rollingUpdate:</span></span><br><span class="line"><span class="attr">        maxUnavailable:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">      type:</span> <span class="string">RollingUpdate</span></span><br><span class="line"><span class="attr">  status:</span></span><br><span class="line"><span class="attr">    currentNumberScheduled:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    desiredNumberScheduled:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    numberAvailable:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    numberMisscheduled:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">    numberReady:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    observedGeneration:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    updatedNumberScheduled:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">List</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  resourceVersion:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  selfLink:</span> <span class="string">""</span></span><br></pre></td></tr></table></figure><p>配置域名证书<code>web-https-ingress.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat-demo</span>       <span class="comment"># service名称</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span>      <span class="comment"># namespaces名称</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">tomcat.chcks.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">tomcat-demo</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">        path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">  tls:</span>                    <span class="comment">#使用tls</span></span><br><span class="line"><span class="attr">    - hosts:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">tomcat.chcks.com</span></span><br><span class="line"><span class="attr">      secretName:</span> <span class="string">chc-tls</span> <span class="comment"># secrets名称</span></span><br></pre></td></tr></table></figure><p>使用配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f ingress-nginx-controller.yaml</span><br><span class="line">kubectl apply -f web-https-ingress.yaml</span><br><span class="line"><span class="comment"># 访问:https://tomcat.chcks.com/</span></span><br></pre></td></tr></table></figure><h3 id="会话保持"><a href="#会话保持" class="headerlink" title="会话保持"></a>会话保持</h3><p><code>web-session-ingress.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  annotations:</span></span><br><span class="line">    <span class="string">nginx.ingress.kubernetes.io/affinity:</span> <span class="string">cookie</span>           <span class="comment">#使用cookie</span></span><br><span class="line">    <span class="string">nginx.ingress.kubernetes.io/session-cookie-hash:</span> <span class="string">sha1</span>  <span class="comment">#获取哈希的方式</span></span><br><span class="line">    <span class="string">nginx.ingress.kubernetes.io/session-cookie-name:</span> <span class="string">chc</span> <span class="comment">#cookie名称</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">tomcat-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">tomcat.chcks.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">tomcat-demo</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">        path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-pod</title>
      <link href="/posts/fe065661/"/>
      <url>/posts/fe065661/</url>
      
        <content type="html"><![CDATA[<h2 id="Pod基本认识"><a href="#Pod基本认识" class="headerlink" title="Pod基本认识"></a>Pod基本认识</h2><ul><li><p>pod 是 Kubernetes 集群中能够被创建和管理的最小部署单元</p></li><li><p>每个Pod都有一个特殊的被称为<code>“根容器”</code>的<code>Pause</code>容器。Pause容器对应的镜像属于Kubernetes平台的一部分，除了Pause容器，每个Pod还包含一个或多个紧密相关的用户业务容器</p></li><li><p>Pod的状态描述</p><table><thead><tr><th>状态值</th><th>描述</th></tr></thead><tbody><tr><td>Pending</td><td>API Server已经创建该Pod，但在Pod内还有一个或多个容器的镜像没有创建，包括正在下载镜像的过程。</td></tr><tr><td>Runnung</td><td>Pod内所有容器均已创建，且至少有一个容器处于运行状态、正在启动状态或正在重启状态。</td></tr><tr><td>Succeeded</td><td>Pod内所有容器均成功执行后退出，且不会再重启。</td></tr><tr><td>Failed</td><td>Pod内所有容器均已退出，但至少有一个容器退出为失败状态。</td></tr><tr><td>Unknown</td><td>由于某种原因无法获取该Pod的状态，可能由于网络通信不畅导致。</td></tr></tbody></table></li></ul><h2 id="Pod的Yaml配置文件"><a href="#Pod的Yaml配置文件" class="headerlink" title="Pod的Yaml配置文件"></a>Pod的Yaml配置文件</h2><ul><li><p>secrets.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">mysecret</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line"><span class="attr">  password:</span> <span class="string">MWYyZDFlMmU2N2Rm</span></span><br><span class="line"><span class="attr">  username:</span> <span class="string">YWRtaW4=</span></span><br></pre></td></tr></table></figure><p>Secret 解决了密码、token、密钥等敏感数据的配置问题，而不需要把这些敏感数据暴露到镜像或者 Pod Spec 中</p><p>Opaque 类型的数据是一个 map 类型，要求 value 是 base64 编码格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -n <span class="string">"admin"</span> | base64</span><br><span class="line">YWRtaW4=</span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"1f2d1e2e67df"</span> | base64</span><br><span class="line">MWYyZDFlMmU2N2Rm</span><br></pre></td></tr></table></figure></li><li><p>configMap.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">log-leven=3</span><br><span class="line">enemies.cheat=true</span><br><span class="line">enemies.cheat.level=noGoodRotten</span><br><span class="line">secret.code.passphrase=UUDDLRLRBABAS</span><br><span class="line">secret.code.allowed=true</span><br><span class="line">secret.code.lives=30</span><br></pre></td></tr></table></figure><p> ConfigMap 用于保存配置数据的键值对，可以用来保存单个属性，也可以用来保存配置文件。ConfigMap 跟 secret 很类似，但它可以更方便地处理不包含敏感信息的字符串。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建configMap</span></span><br><span class="line">kubectl create configmap web-game --from-file configMap.properties</span><br><span class="line"><span class="comment"># 编辑configMap</span></span><br><span class="line">kubectl edit configmaps web-game</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>pod.yaml配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span>          <span class="comment"># 元数据</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">pod-volume</span> <span class="comment">#元数据的名称</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hostNetwork:</span> <span class="literal">true</span>      <span class="comment">#是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络</span></span><br><span class="line"><span class="attr">  hostPID:</span> <span class="literal">true</span>          <span class="comment">#共享宿主机PID Namespace 默认为false</span></span><br><span class="line"><span class="attr">  hostAliases:</span>           <span class="comment"># 添加hosts信息</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="string">"192.168.43.115"</span> <span class="comment"># 指定ip</span></span><br><span class="line"><span class="attr">    hostnames:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"web.chc.com"</span>      <span class="comment"># 设置ip对象的hostname</span></span><br><span class="line"><span class="attr">  containers:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">web</span>              <span class="comment"># 容器名称</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">tomcat:8-slim</span>   <span class="comment">#容器的镜像名称</span></span><br><span class="line"><span class="attr">    ports:</span>                 <span class="comment">#需要暴露的端口号列表</span></span><br><span class="line"><span class="attr">    - containerPort:</span> <span class="number">8080</span>  <span class="comment">#容器需要监听的端口号</span></span><br><span class="line"><span class="attr">    volumeMounts:</span>          <span class="comment"># 挂载到容器内部的存储卷配置</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">shared-volume</span>  <span class="comment"># 引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名</span></span><br><span class="line"><span class="attr">      mountPath:</span> <span class="string">/shared-web</span> <span class="comment">#存储卷在容器内mount的绝对路径，应少于512字符</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">frps</span>                            <span class="comment"># 容器名称</span></span><br><span class="line"><span class="attr">    env:</span>                                  <span class="comment">#容器环境变量列表</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">dashboard_port</span>                <span class="comment"># 环境变量的名称</span></span><br><span class="line"><span class="attr">      value:</span> <span class="string">"8081"</span>                       <span class="comment"># 环境变量的值</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">chcgolang/frps:latest</span>          <span class="comment">#容器的镜像名称</span></span><br><span class="line"><span class="attr">    ports:</span>                                <span class="comment">#需要暴露的端口号列表</span></span><br><span class="line"><span class="attr">    - containerPort:</span> <span class="number">8081</span>                 <span class="comment">#容器需要监听的端口号</span></span><br><span class="line"><span class="attr">      hostPort:</span> <span class="number">8081</span>                      <span class="comment">#容器所在主机需要监听的端口号，默认与Container相同</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">dashboard</span>                     <span class="comment">#端口号名称</span></span><br><span class="line"><span class="attr">      protocol:</span> <span class="string">TCP</span>                       <span class="comment">#端口协议，支持TCP和UDP，默认TCP</span></span><br><span class="line"><span class="attr">    volumeMounts:</span>                         <span class="comment"># 挂载到容器内部的存储卷配置</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">shared-volume</span>  <span class="comment"># 引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名</span></span><br><span class="line"><span class="attr">      mountPath:</span> <span class="string">/shared-frps</span>             <span class="comment">#存储卷在容器内mount的绝对路径，应少于512字符</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">secrets</span>        <span class="comment"># 引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名</span></span><br><span class="line"><span class="attr">      mountPath:</span> <span class="string">/mysecret</span>                <span class="comment">#存储卷在容器内mount的绝对路径，应少于512字符</span></span><br><span class="line"><span class="attr">      readOnly:</span> <span class="literal">true</span>                      <span class="comment"># 是否开启只读模式</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">game</span>                </span><br><span class="line"><span class="attr">      mountPath:</span> <span class="string">/game</span></span><br><span class="line"><span class="attr">      readOnly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    lifecycle:</span>                            <span class="comment">#生命周期管理(只能应用所在的容器)</span></span><br><span class="line"><span class="attr">      postStart:</span>           <span class="comment">#容器运行之前运行的任务(并行运行,容器不会等待命令执行完在启动)</span></span><br><span class="line"><span class="attr">        exec:</span></span><br><span class="line"><span class="attr">          command:</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">"/bin/bash"</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">"-c"</span></span><br><span class="line"><span class="bullet">          -</span> <span class="string">"echo frps starting ... &gt;&gt; /var/log/messages"</span></span><br><span class="line"><span class="attr">      preStop:</span>  <span class="comment">#容器关闭之前运行的任务(串行运行,等待本命令执行完在结束,一般应用于安全退出)</span></span><br><span class="line"><span class="attr">        exec:</span></span><br><span class="line"><span class="attr">          command:</span> <span class="string">["/bin/bash","-c","echo</span> <span class="string">frps</span> <span class="string">stoping</span> <span class="string">...</span> <span class="string">&gt;&gt;</span> <span class="string">/var/log/messages"]</span></span><br><span class="line"><span class="attr">    envFrom:</span>                      <span class="comment"># 加载环境变量配置,用于批量设置环境变量</span></span><br><span class="line"><span class="attr">    - configMapRef:</span>               <span class="comment"># configMap类型的环境变量配置</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">web-game</span>            <span class="comment"># configMap的配置名称</span></span><br><span class="line"><span class="attr">  volumes:</span>                               <span class="comment">#在该pod上定义共享存储卷列表</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">shared-volume</span>                  <span class="comment">#共享存储卷名称</span></span><br><span class="line"><span class="attr">    hostPath:</span>                            <span class="comment"># 挂载Pod所在宿主机的目录</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/shared-volume-data</span>          <span class="comment">#Pod所在宿主机的目录，将被用于同期中mount的目录</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">secrets</span></span><br><span class="line"><span class="attr">    secret:</span>                <span class="comment"># 类型为secret的存储卷，挂载集群与定义的secre对象到容器内部</span></span><br><span class="line"><span class="attr">      secretName:</span> <span class="string">mysecret</span> <span class="comment"># secret存储卷的名称,需要对应名称的secret存储卷</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">game</span></span><br><span class="line"><span class="attr">    configMap:</span>             <span class="comment"># 类型configMap的存储卷</span></span><br><span class="line"><span class="attr">      name:</span> <span class="string">web-game</span>       <span class="comment"># configMap存储卷的名称</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-部署策略</title>
      <link href="/posts/757e013c/"/>
      <url>/posts/757e013c/</url>
      
        <content type="html"><![CDATA[<p>Kubernetes的部署策略以下几种:</p><ul><li>重建(recreate)：停止旧版本部署新版本</li><li>滚动更新(rolling-update)：一个接一个地以滚动更新方式发布新版本</li><li>蓝绿(blue/green)：新版本与旧版本一起存在，然后切换流量</li><li>金丝雀(canary)：将新版本面向一部分用户发布，然后继续全量发布</li></ul><h2 id="重建-Recreate"><a href="#重建-Recreate" class="headerlink" title="重建(Recreate)"></a>重建(Recreate)</h2><ul><li><p>特点 : 停止旧版本部署新版本</p></li><li><p>使用场景 : 最好在开发环境</p></li><li><p><code>yaml</code>(版本A)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span> <span class="comment"># 部署两个pod</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">        livenessProbe:</span></span><br><span class="line"><span class="attr">          tcpSocket:</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">          periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">          successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">web-recreate.chc.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>在访问服务的机器上配置hosts:<code>192.168.43.113 web-recreate.chc.com</code>,然后通过<code>web-recreate.chc.com</code>域名访问</p></li><li><p><code>yaml</code>(版本B)使用Recreate策略更新</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  strategy:</span> <span class="comment"># 部署策略声明</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">Recreate</span> <span class="comment"># 使用Recreate策略</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span> <span class="comment"># 部署两个pod</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">        type:</span> <span class="string">web-app</span> <span class="comment"># 更新内容为:加多一个标签type</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">        livenessProbe:</span></span><br><span class="line"><span class="attr">          tcpSocket:</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">          periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">          successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">web-recreate.chc.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">web-recreate</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>重新创建策略是一个虚拟部署，包括关闭版本A，然后在关闭版本A后部署版本B. 此技术意味着服务的停机时间取决于应用程序的关闭和启动持续时间。</p></li></ul><h2 id="滚动更新-rolling-update"><a href="#滚动更新-rolling-update" class="headerlink" title="滚动更新(rolling-update)"></a>滚动更新(rolling-update)</h2><ul><li><p>特点 : 滚动更新通过逐个替换实例来逐步部署新版本的应用，直到所有实例都被替换完成为止.更新过程中新旧服务同时可以访问</p></li><li><p>更新的过程 : 在负载均衡器后面使用版本 A 的实例池，然后部署版本 B 的一个实例，当服务准备好接收流量时(Readiness Probe 正常)，将该实例添加到实例池中，然后从实例池中删除一个版本 A 的实例并关闭</p><p><img src="http://qiniu.caihc.site/k8s/rolling-update.jpg" alt></p></li><li><p><code>yaml</code>(版本A)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">        livenessProbe:</span></span><br><span class="line"><span class="attr">          tcpSocket:</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">          periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">          successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">web-rollingupdate.chc.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>在访问服务的机器上配置hosts:<code>192.168.43.113 web-rollingupdate.chc.com</code>,然后通过<code>web-recreate.chc.com</code>域名访问</p></li><li><p><code>yaml</code>(版本B)使用rolling-update策略更新</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  strategy:</span> <span class="comment"># 声明使用部署策略</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">RollingUpdate</span> <span class="comment"># 使用RollingUpdate策略来更新pod</span></span><br><span class="line"><span class="attr">    rollingUpdate:</span> <span class="comment"># RollingUpdate策略配置</span></span><br><span class="line"><span class="attr">      maxSurge:</span> <span class="number">50</span><span class="string">%</span> <span class="comment"># 一次可以添加50%个Pod</span></span><br><span class="line"><span class="attr">      maxUnavailable:</span> <span class="number">50</span><span class="string">%</span>  <span class="comment"># 滚动更新期间最大50%个Pod不可用</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">        type:</span> <span class="string">web-app2</span> <span class="comment"># 更新内容为:加多一个标签type</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:9-slim</span> <span class="comment"># 更新tomcat版本</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">        livenessProbe:</span></span><br><span class="line"><span class="attr">          tcpSocket:</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">          periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">          successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">web-rollingupdate.chc.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">web-rollingupdate</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>可以使用<code>kuectl rollout pause deploy [deployments] -n [namespaces]</code>命令暂停滚动从而让新旧服务同时存在,来进行测试</p><p>然后使用<code>kuectl rollout resume deploy [deployments] -n [namespaces]</code>恢复滚动操作</p><p>回滚到上个版本: <code>kuectl rollout undo deploy [deployments] -n [namespaces]</code></p></li><li><p><code>rollingUpdate</code>配置说明</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>maxSurge</td><td>一次更新pod的数量可以使用百分比%,也可以使用数量</td></tr><tr><td>maxUnavailable</td><td>滚动更新期间最大不可用Pod数量,可以用百分比%,也可以使用数量</td></tr></tbody></table></li><li><p>资源部署操作<code>kuectl rollout</code></p><p><a href="http://docs.kubernetes.org.cn/643.html" target="_blank" rel="noopener"><code>kuectl rollout文档</code></a></p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><a href="http://docs.kubernetes.org.cn/645.html" target="_blank" rel="noopener"><em>history</em></a></td><td>查看历史版本</td></tr><tr><td><a href="http://docs.kubernetes.org.cn/647.html" target="_blank" rel="noopener"><em>pause</em></a></td><td>暂停资源(可以暂停滚动更新)</td></tr><tr><td><a href="http://docs.kubernetes.org.cn/650.html" target="_blank" rel="noopener"><em>resume</em></a></td><td>恢复暂停资源</td></tr><tr><td><a href="http://docs.kubernetes.org.cn/652.html" target="_blank" rel="noopener"><em>status</em></a></td><td>查看资源状态</td></tr><tr><td><a href="http://docs.kubernetes.org.cn/654.html" target="_blank" rel="noopener"><em>undo</em></a></td><td>回滚版本</td></tr></tbody></table></li></ul><h2 id="蓝绿-blue-green"><a href="#蓝绿-blue-green" class="headerlink" title="蓝绿(blue/green)"></a>蓝绿(blue/green)</h2><ul><li><p>特点 :版本2(<code>绿</code>) 与版本1(<code>蓝</code>)一起部署，在测试新版本满足要求后，然后更新更新 Kubernetes 中扮演负载均衡器角色的 Service 对象，通过替换 label selector 中的版本标签来将流量发送到新版本</p><p><img src="http://qiniu.caihc.site/k8s/%E8%93%9D%E7%BB%BF.jpg" alt></p></li><li><p><code>web-bluegreen.yaml</code>(版本 1)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  strategy:</span> <span class="comment"># 声明使用部署策略</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">RollingUpdate</span> <span class="comment"># 使用RollingUpdate策略来更新pod</span></span><br><span class="line"><span class="attr">    rollingUpdate:</span> <span class="comment"># RollingUpdate策略配置</span></span><br><span class="line"><span class="attr">      maxSurge:</span> <span class="number">50</span><span class="string">%</span> <span class="comment"># 一次可以添加50%个Pod</span></span><br><span class="line"><span class="attr">      maxUnavailable:</span> <span class="number">50</span><span class="string">%</span>  <span class="comment"># 滚动更新期间最大50%个Pod不可用</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line">        <span class="comment"># 这里标签注明app名字和版本号</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">        version:</span> <span class="string">v1.0</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">        livenessProbe:</span></span><br><span class="line"><span class="attr">          tcpSocket:</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">          periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">          successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></li><li><p><code>bluegreen-service.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line">    <span class="comment"># 这里匹配 app 和 version 标签，当要切换流量的时候，我们更新 version 标签的值，比如：v2.0</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">    version:</span> <span class="string">v1.0</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">web-bluegreen.chc.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure></li><li><p><code>web-bluegreen2.yaml</code>(版本2)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-bluegreen-v2</span> <span class="comment"># 新版本的名称</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  strategy:</span> <span class="comment"># 声明使用部署策略</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">RollingUpdate</span> <span class="comment"># 使用RollingUpdate策略来更新pod</span></span><br><span class="line"><span class="attr">    rollingUpdate:</span> <span class="comment"># RollingUpdate策略配置</span></span><br><span class="line"><span class="attr">      maxSurge:</span> <span class="number">50</span><span class="string">%</span> <span class="comment"># 一次可以添加50%个Pod</span></span><br><span class="line"><span class="attr">      maxUnavailable:</span> <span class="number">50</span><span class="string">%</span>  <span class="comment"># 滚动更新期间最大50%个Pod不可用</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">        version:</span> <span class="string">v2.0</span> <span class="comment">#标签的version变为v2.0</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:9-slim</span> <span class="comment"># 升级tomcat</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">        livenessProbe:</span></span><br><span class="line"><span class="attr">          tcpSocket:</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">          periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">          successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></li><li><p><code>bluegreen-service.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line">    <span class="comment"># 这里匹配 app 和 version 标签，当要切换流量的时候，我们更新 version 标签的值</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">    version:</span> <span class="string">v2.0</span> <span class="comment"># 切换流量到v2.0版本</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">web-bluegreen.chc.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">web-bluegreen</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure></li><li><p>蓝/绿部署步骤:</p><ol><li>部署版本1的yaml:<code>kubectl apply -f web-bluegreen.yaml</code></li><li>部署service的yaml: <code>kubectl apply -f bluegreen-service.yaml</code></li><li>部署版本2的yaml : <code>kubectl apply -f web-bluegreen2.yaml</code></li><li>等待版本2的全部部署完成</li><li>切换流量入口从版本1到版本2 (这里就是将service的yaml的version标签改成v2.0): <code>kubectl apply -f bluegreen-service.yaml</code></li><li>关闭版本1的应用 : <code>kubectl delete deployments -n dev web-bluegreen</code></li></ol></li><li><p>优缺点:</p><ol><li>实时部署/回滚</li><li>避免版本问题，因为一次更改是整个应用的改变</li><li>需要两倍的资源</li><li>在发布到生产之前，应该对整个应用进行适当的测试</li></ol></li></ul><h2 id="金丝雀-Canary"><a href="#金丝雀-Canary" class="headerlink" title="金丝雀(Canary)"></a>金丝雀(Canary)</h2><ul><li><p>特点:金丝雀部署是让部分用户访问到新版本应用,在一段时间后如果没有检测到错误，则可以扩展新版本的副本数量并删除旧版本的应用。</p><p><img src="http://qiniu.caihc.site/k8s/%E9%87%91%E4%B8%9D%E9%9B%80.jpg" alt></p></li><li><p>部署方式参照蓝/绿部署的yaml文件</p><ol><li>部署版本1<code>web-bluegreen.yaml</code></li><li>部署版本2<code>web-bluegreen2.yaml</code></li><li>将<code>bluegreen-service.yaml</code>中的<code>version</code>标签去掉</li><li>部署service服务<code>bluegreen-service.yaml</code></li><li>如果版本2的pod没问题,逐步替换版本1为版本2</li></ol></li><li><p>优缺点</p><ol><li>部分用户获取新版本</li><li>方便错误发现和性能监控</li><li>快速回滚</li><li>发布较慢</li><li>流量精准控制很浪费</li></ol></li><li><p>建议:使用服务网格（如 Istio）来构建金丝雀部署,拥有更精准的流量控制</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kubetnetes-pod调度</title>
      <link href="/posts/9713f55f/"/>
      <url>/posts/9713f55f/</url>
      
        <content type="html"><![CDATA[<h1 id="亲和性"><a href="#亲和性" class="headerlink" title="亲和性"></a>亲和性</h1><h2 id="NodeAffinity-node节点亲和"><a href="#NodeAffinity-node节点亲和" class="headerlink" title="NodeAffinity(node节点亲和)"></a><code>NodeAffinity</code>(node节点亲和)</h2><ul><li><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo-node</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-demo-node</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-demo-node</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-demo-node</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">      affinity:</span></span><br><span class="line"><span class="attr">        nodeAffinity:</span></span><br><span class="line"><span class="attr">          requiredDuringSchedulingIgnoredDuringExecution:</span> <span class="comment">#必须达到一下条件</span></span><br><span class="line"><span class="attr">            nodeSelectorTerms:</span> <span class="comment"># 节点选择</span></span><br><span class="line"><span class="attr">            - matchExpressions:</span> <span class="comment"># 搜索条件</span></span><br><span class="line"><span class="attr">              - key:</span> <span class="string">beta.kubernetes.io/arch</span> <span class="comment"># 指点的键beta.kubernetes.io/arch</span></span><br><span class="line"><span class="attr">                operator:</span> <span class="string">In</span> <span class="comment">#运算符In</span></span><br><span class="line"><span class="attr">                values:</span> <span class="comment"># 键的值</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">amd64</span></span><br><span class="line"><span class="attr">          preferredDuringSchedulingIgnoredDuringExecution:</span> <span class="comment">#最好达到的条件</span></span><br><span class="line"><span class="attr">          - weight:</span> <span class="number">1</span> <span class="comment"># 权重</span></span><br><span class="line"><span class="attr">            preference:</span></span><br><span class="line"><span class="attr">              matchExpressions:</span> <span class="comment"># 搜索</span></span><br><span class="line"><span class="attr">              - key:</span> <span class="string">kubernetes.io/hostname</span> <span class="comment">#指定键disktype</span></span><br><span class="line"><span class="attr">                operator:</span> <span class="string">NotIn</span> <span class="comment"># 运算符Notin</span></span><br><span class="line"><span class="attr">                values:</span> <span class="comment"># 键的值</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">vmware-113</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">vmware-112</span></span><br></pre></td></tr></table></figure></li><li><p>如何获取node节点的标签</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes -n [namespace] --show-labels</span><br></pre></td></tr></table></figure></li></ul><h2 id="PodAffinity-Pod亲和性"><a href="#PodAffinity-Pod亲和性" class="headerlink" title="PodAffinity(Pod亲和性)"></a>PodAffinity(Pod亲和性)</h2><ul><li><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo-pod</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-demo-pod</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-demo-pod</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-demo-pod</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">chcgolang/frps</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">7500</span></span><br><span class="line"><span class="attr">      affinity:</span></span><br><span class="line"><span class="attr">        podAffinity:</span></span><br><span class="line"><span class="attr">          requiredDuringSchedulingIgnoredDuringExecution:</span> <span class="comment">#必须达到一下条件</span></span><br><span class="line"><span class="attr">          - labelSelector:</span> <span class="comment"># 便签选择</span></span><br><span class="line"><span class="attr">              matchExpressions:</span> <span class="comment"># 搜索条件</span></span><br><span class="line"><span class="attr">              - key:</span> <span class="string">app</span> <span class="comment"># 键</span></span><br><span class="line"><span class="attr">                operator:</span> <span class="string">In</span> <span class="comment">#匹配条件</span></span><br><span class="line"><span class="attr">                values:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">web-demo</span> <span class="comment">#值</span></span><br><span class="line"><span class="attr">            topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line"><span class="attr">          preferredDuringSchedulingIgnoredDuringExecution:</span> <span class="comment">#最好达到的条件</span></span><br><span class="line"><span class="attr">          - weight:</span> <span class="number">100</span> <span class="comment">#权重</span></span><br><span class="line"><span class="attr">            podAffinityTerm:</span> </span><br><span class="line"><span class="attr">              labelSelector:</span></span><br><span class="line"><span class="attr">                matchExpressions:</span></span><br><span class="line"><span class="attr">                - key:</span> <span class="string">pod-template-hash</span> <span class="comment"># 键</span></span><br><span class="line"><span class="attr">                  operator:</span> <span class="string">In</span> <span class="comment">#条件</span></span><br><span class="line"><span class="attr">                  values:</span></span><br><span class="line"><span class="bullet">                  -</span> <span class="number">5</span><span class="string">db95f77cf</span> <span class="comment">#值</span></span><br><span class="line"><span class="attr">              topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br></pre></td></tr></table></figure></li><li><p>如何查看pod节点标签</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n [namespace] --show-labels</span><br></pre></td></tr></table></figure></li></ul><h2 id="PodAnitAffinity-Pod反亲和性"><a href="#PodAnitAffinity-Pod反亲和性" class="headerlink" title="PodAnitAffinity(Pod反亲和性)"></a>PodAnitAffinity(Pod反亲和性)</h2><ul><li><p>和<code>PodAffinity</code>意思相反,<code>PodAffinity</code>和<code>PodAnitAffinity</code>可以同时存在</p></li><li><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo-podanti</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-demo-podanti</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-demo-podanti</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-demo-podanti</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">chcgolang/frps</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">7500</span></span><br><span class="line"><span class="attr">      affinity:</span></span><br><span class="line"><span class="attr">        podAntiAffinity:</span></span><br><span class="line"><span class="attr">          requiredDuringSchedulingIgnoredDuringExecution:</span> <span class="comment">#必须达到一下条件</span></span><br><span class="line"><span class="attr">          - labelSelector:</span> <span class="comment"># 便签选择</span></span><br><span class="line"><span class="attr">              matchExpressions:</span> <span class="comment"># 搜索条件</span></span><br><span class="line"><span class="attr">              - key:</span> <span class="string">app</span> <span class="comment"># 键</span></span><br><span class="line"><span class="attr">                operator:</span> <span class="string">In</span> <span class="comment">#匹配条件</span></span><br><span class="line"><span class="attr">                values:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">web-demo</span> <span class="comment">#值</span></span><br><span class="line"><span class="attr">            topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line"><span class="attr">        podAffinity:</span></span><br><span class="line"><span class="attr">          preferredDuringSchedulingIgnoredDuringExecution:</span> <span class="comment">#最好达到的条件</span></span><br><span class="line"><span class="attr">          - weight:</span> <span class="number">100</span> <span class="comment">#权重</span></span><br><span class="line"><span class="attr">            podAffinityTerm:</span> </span><br><span class="line"><span class="attr">              labelSelector:</span></span><br><span class="line"><span class="attr">                matchExpressions:</span></span><br><span class="line"><span class="attr">                - key:</span> <span class="string">app</span> <span class="comment"># 键</span></span><br><span class="line"><span class="attr">                  operator:</span> <span class="string">In</span> <span class="comment">#条件</span></span><br><span class="line"><span class="attr">                  values:</span></span><br><span class="line"><span class="bullet">                  -</span> <span class="string">web-demo-node</span> <span class="comment">#值</span></span><br><span class="line"><span class="attr">              topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br></pre></td></tr></table></figure></li><li><p>如何查看pod节点标签</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n [namespace] --show-labels</span><br></pre></td></tr></table></figure></li></ul><h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><p>​    <code>requiredDuringSchedulingIgnoredDuringExecution</code>:一定要达到的条件    </p><p>​    <code>preferredDuringSchedulingIgnoredDuringExecution</code>:达到上面条件的基础上,最好也达到这个要求    </p><ul><li><p>键值运算关系</p><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>In</td><td>label的值在某个列表中</td></tr><tr><td>Notin</td><td>label的值不在某个列表中</td></tr><tr><td>Gt</td><td>label的值大于某个值</td></tr><tr><td>Lt</td><td>label的值小于某个值</td></tr><tr><td>Exists</td><td>某个label存在</td></tr><tr><td>DesNotExist</td><td>某个label不存在</td></tr></tbody></table></li></ul><h1 id="污点-Taint-和容忍-Tolerations"><a href="#污点-Taint-和容忍-Tolerations" class="headerlink" title="污点(Taint)和容忍(Tolerations)"></a>污点(Taint)和容忍(Tolerations)</h1><h2 id="污点-Taint"><a href="#污点-Taint" class="headerlink" title="污点(Taint)"></a>污点(Taint)</h2><p>Taint 和 toleration 相互配合，可以用来避免 pod 被分配到不合适的节点上。每个节点上都可以应用一个或多个taint ，这表示对于那些不能容忍这些 taint 的 pod，是不会被该节点接受的。如果将 toleration 应用于 pod上，则表示这些 pod 可以（但不要求）被调度到具有匹配 taint 的节点上</p><h3 id="污点设置-查看和去除"><a href="#污点设置-查看和去除" class="headerlink" title="污点设置,查看和去除"></a>污点设置,查看和去除</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置污点</span></span><br><span class="line">kubectl taint nodes [nodeName] [key]=[value]:[effect]</span><br><span class="line"><span class="comment"># 节点说明中，查找 Taints 字段</span></span><br><span class="line">kubectl describe pod pod-name</span><br><span class="line"><span class="comment"># 查看节点的污点信息</span></span><br><span class="line">kubectl describe nodes [nodeName] |grep -E <span class="string">'(Taints)'</span></span><br><span class="line"><span class="comment"># 去除污点</span></span><br><span class="line">kubectl taint nodes [nodeName] [key]:[effect]-</span><br></pre></td></tr></table></figure><ul><li><p><code>effect</code>的选项</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>NoSchedule</td><td>表示 k8s 将不会将 Pod 调度到具有该污点的 Node 上</td></tr><tr><td>PreferNoSchedule</td><td>表示 k8s 将尽量避免将 Pod 调度到具有该污点的 Node 上</td></tr><tr><td>NoExecute</td><td>表示 k8s 将不会将 Pod 调度到具有该污点的 Node 上，同时会将 Node 上已经存在的 Pod 驱逐出去</td></tr></tbody></table></li></ul><h2 id="容忍-Tolerations"><a href="#容忍-Tolerations" class="headerlink" title="容忍(Tolerations)"></a>容忍(Tolerations)</h2><p>设置了容忍的 Pod 将可以容忍污点的存在，可以被调度到存在污点的 Node 上</p><ul><li><p>添加污点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint nodes vmware-112 cpu=err:NoExecute</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>yaml(<code>pod.spec.tolerations</code>)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo-label</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line">    <span class="comment"># 匹配的标签</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line">      <span class="comment"># 匹配的key-value</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line">      <span class="comment"># 创建标签的名字 </span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line">        <span class="comment"># 定义的标签key-value</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      nodeSelector:</span></span><br><span class="line"><span class="attr">        disktype:</span> <span class="string">ssd</span> <span class="comment"># 选择node标签为disktype: ssd的机器</span></span><br><span class="line"><span class="attr">      tolerations:</span> <span class="comment"># 容忍的污点设置</span></span><br><span class="line"><span class="attr">      - key:</span> <span class="string">cpu</span> <span class="comment"># 污点的key</span></span><br><span class="line"><span class="attr">        operator:</span> <span class="string">Equal</span> </span><br><span class="line"><span class="attr">        value:</span> <span class="string">err</span> <span class="comment"># 污点的value</span></span><br><span class="line"><span class="attr">        effect:</span> <span class="string">NoExecute</span> <span class="comment"># 污点的effect</span></span><br><span class="line"><span class="attr">        tolerationSeconds:</span> <span class="number">3600</span> <span class="comment">#当 Pod 需要被驱逐时可以在 Pod 上继续保留运行的时间</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line">    <span class="comment"># service选择带有app: web-demo标签的pod</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">web-dev.chclabel.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure></li><li><p>注意点</p><ol><li>其中<code>key, vaule, effect</code>要与 Node 上设置的 taint 保持一致</li><li><code>operator</code> 的值为 Exists 将会忽略 value 值</li><li><code>tolerationSeconds</code> 用于描述当 Pod 需要被驱逐时可以在 Pod 上继续保留运行的时间</li></ol></li><li><p>当不指定 key 值时，表示容忍所有的污点 key：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="attr">- operator:</span> <span class="string">Exists</span></span><br></pre></td></tr></table></figure></li><li><p>当不指定 effect 值时，表示容忍所有的污点作用</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tolerations:</span></span><br><span class="line"><span class="attr">- key:</span> <span class="string">key</span></span><br><span class="line"><span class="attr">  operator:</span> <span class="string">Exists</span></span><br></pre></td></tr></table></figure></li><li><p>有多个 Master 存在时，防止资源浪费，可以如下设置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint nodes Node-Name node-role.kubernetes.io/master=:PreferNoSchedule</span><br></pre></td></tr></table></figure><p>配置的意思:尽可能不要在master节点部署pod</p><p>也就是当worker节点资源不足时,就可以在master节点部署pod</p></li><li><p>污点的应用场景</p><ol><li>当某个worker节点需要停止下来时,可以使用污点将所有的pod驱离</li><li>某个节点的机器性能弱时,可以使用污点尽量不让pod部署进来</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-健康检查</title>
      <link href="/posts/51de97ce/"/>
      <url>/posts/51de97ce/</url>
      
        <content type="html"><![CDATA[<h2 id="livenessProbe"><a href="#livenessProbe" class="headerlink" title="livenessProbe"></a>livenessProbe</h2><h3 id="exec-命令行"><a href="#exec-命令行" class="headerlink" title="exec(命令行)"></a>exec(命令行)</h3><ul><li><p><code>livenessProbe</code>命令行方式检测:<code>web-dev-cmd.yaml</code>,在容器中执行一个命令 推出返回0 算成功。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">chcgolang/frps</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">7500</span></span><br><span class="line"><span class="attr">        livenessProbe:</span> <span class="comment"># 容器存活检查探针</span></span><br><span class="line"><span class="attr">          exec:</span>        <span class="comment"># 通过执行shell命令来检查服务是否正常 </span></span><br><span class="line"><span class="attr">            command:</span>   <span class="comment">#或者command["/bin/sh","-c","ps -ef|grep frps.ini|grep -v grep"]</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/bin/sh</span>  <span class="comment"># 使用sh脚本</span></span><br><span class="line"><span class="bullet">            -</span> <span class="bullet">-c</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">ps</span> <span class="bullet">-ef|grep</span> <span class="string">frps.ini|grep</span> <span class="bullet">-v</span> <span class="string">grep</span> <span class="comment"># 检测frps进程</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">10</span>  <span class="comment"># 表明第一次检测在容器启动后多长时间后开始(秒)</span></span><br><span class="line"><span class="attr">          periodSeconds:</span> <span class="number">10</span> <span class="comment"># 检查间隔时间 (秒)</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">2</span> <span class="comment">#检查失败次数，超了这个次数直接根据重启策略进行操作</span></span><br><span class="line"><span class="attr">          successThreshold:</span> <span class="number">1</span> <span class="comment">#检查失败之后最小成功连续次数，默认 1，活跃度必须为 1</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span> <span class="comment"># 超时秒数，默认 1s，最小值为 1s</span></span><br></pre></td></tr></table></figure></li><li><p>执行检测的顺序</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep frps.ini|grep -v grep</span><br><span class="line"><span class="built_in">echo</span> $?  <span class="comment">#结果为0则成功,结果为1失败</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="http-http请求"><a href="#http-http请求" class="headerlink" title="http(http请求)"></a>http(http请求)</h3><ul><li><p>通过发送http的get请求检查服务是否正常，返回<code>200-399</code>状态码则表明容器健康</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">httpd</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">        livenessProbe:</span> <span class="comment"># 开启健康检测</span></span><br><span class="line"><span class="attr">          httpGet:</span> <span class="comment">#http的get请求</span></span><br><span class="line"><span class="attr">            path:</span> <span class="string">/index.html</span> <span class="comment"># 访问地址</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">80</span> <span class="comment"># 服务端口</span></span><br><span class="line"><span class="attr">            scheme:</span> <span class="string">HTTP</span> <span class="comment">#请求方式HTTP/HTTPS</span></span><br><span class="line"><span class="attr">            httpHeaders:</span></span><br><span class="line"><span class="attr">            - name:</span> <span class="string">X-Custom-Header</span></span><br><span class="line"><span class="attr">              value:</span> <span class="string">Awesome</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">5</span> <span class="comment"># 表明第一次检测在容器启动后多长时间后开始(秒)</span></span><br><span class="line"><span class="attr">          periodSeconds:</span> <span class="number">5</span> <span class="comment"># 检查间隔时间 (秒)</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">1</span> <span class="comment">#检查失败次数，超了这个次数直接根据重启策略进行操作</span></span><br><span class="line"><span class="attr">          successThreshold:</span> <span class="number">1</span> <span class="comment">#检查失败之后最小成功连续次数，默认 1，活跃度必须为 1</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span> <span class="comment"># 超时秒数，默认 1s，最小值为 1s</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="TCP-Socket"><a href="#TCP-Socket" class="headerlink" title="TCP Socket"></a>TCP Socket</h3><ul><li><p>通过tcp链接到指定端口来测试容器是否健康</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">        image:</span> <span class="string">chcgolang/goproxy</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">        livenessProbe:</span></span><br><span class="line"><span class="attr">          tcpSocket:</span> <span class="comment"># tcpSocket的方式进行健康检测</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span> <span class="comment"># tcp端口号</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">          periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">          successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">        readinessProbe:</span> <span class="comment"># 判断容器是否完成(Ready状态)，可以接收请求</span></span><br><span class="line"><span class="attr">          tcpSocket:</span></span><br><span class="line"><span class="attr">            port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">          initialDelaySeconds:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">          periodSeconds:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">          failureThreshold:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">          successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">          timeoutSeconds:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="readinessProbe和livenessProbe的区别"><a href="#readinessProbe和livenessProbe的区别" class="headerlink" title="readinessProbe和livenessProbe的区别"></a>readinessProbe和livenessProbe的区别</h3><ul><li><p><code>livenessProbe</code></p><p>用于判断容器是否存活(Running状态)，如果LivenessProbe探针探测到容器不健康，则kubelet将杀掉该容器，并根据容器的重启策略做相应的处理</p><p>用与判断服务是否存活,然后进行重启策略的相关操作</p></li><li><p><code>readinessProbe</code></p><p>用于判断容器是否启动完成（ready状态），可以接收请求。如果ReadinessProbe探针检测到失败，则Pod的状态被修改</p><p>用于判断服务是否可以对外提供服务</p></li></ul><h3 id="Pod重启策略基本说明和状态描述"><a href="#Pod重启策略基本说明和状态描述" class="headerlink" title="Pod重启策略基本说明和状态描述"></a>Pod重启策略基本说明和状态描述</h3><ul><li><p>Pod的重启策略包括：Always、OnFailure和Never，默认值为Always。</p><p>根据<code>RestartPolicy</code>的设置来进行相应的操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Always：当容器失效时，由kubelet自动重启该容器。</span><br><span class="line">OnFailure：当容器终止运行且退出码不为0时，由kubelet自动重启该容器。</span><br><span class="line">Never：不论容器运行状态如何，kubelet都不会重启该容器</span><br></pre></td></tr></table></figure></li><li><p>Pod的状态描述</p><table><thead><tr><th>状态值</th><th>描述</th></tr></thead><tbody><tr><td>Pending</td><td>API Server已经创建该Pod，但在Pod内还有一个或多个容器的镜像没有创建，包括正在下载镜像的过程。</td></tr><tr><td>Runnung</td><td>Pod内所有容器均已创建，且至少有一个容器处于运行状态、正在启动状态或正在重启状态。</td></tr><tr><td>Succeeded</td><td>Pod内所有容器均成功执行后退出，且不会再重启。</td></tr><tr><td>Failed</td><td>Pod内所有容器均已退出，但至少有一个容器退出为失败状态。</td></tr><tr><td>Unknown</td><td>由于某种原因无法获取该Pod的状态，可能由于网络通信不畅导致。</td></tr></tbody></table></li></ul><h3 id="相关配置说明"><a href="#相关配置说明" class="headerlink" title="相关配置说明"></a>相关配置说明</h3><ul><li><p>探针</p><table><thead><tr><th>探针参数</th><th>说明</th></tr></thead><tbody><tr><td><code>initialDelaySeconds</code></td><td>表明第一次检测在容器启动后多长时间后开始(秒)</td></tr><tr><td><code>periodSeconds</code></td><td>检查间隔时间 (秒),默认为10秒。最小值为1</td></tr><tr><td><code>failureThreshold</code></td><td>检查失败次数，超了这个次数将被标记为未准备好,默认为3.最小值为1</td></tr><tr><td><code>successThreshold</code></td><td>检查失败之后最小成功连续次数，默认 1，活跃度必须为 1</td></tr><tr><td><code>timeoutSeconds</code></td><td>超时秒数，默认 1s，最小值为 1s</td></tr></tbody></table></li><li><p>http</p><table><thead><tr><th>Http Get</th><th>说明</th></tr></thead><tbody><tr><td><code>host</code></td><td>要连接的主机名，默认为pod IP。您可能希望在httpHeaders中设置“主机”</td></tr><tr><td><code>scheme</code></td><td>用于连接主机（HTTP或HTTPS）的方案。默认为HTTP</td></tr><tr><td><code>path</code></td><td>HTTP服务器上的访问路径</td></tr><tr><td><code>httpHeaders</code></td><td>要在请求中设置的自定义标头。HTTP允许重复标头</td></tr><tr><td><code>port</code></td><td>容器上要访问的端口的名称或编号。数字必须在1到65535的范围内</td></tr></tbody></table></li></ul><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><ul><li><p>容器不停的重启,启动不起来</p><p>可以使用<code>command</code>的<code>ls</code>等方式不让容器重启,然后使用exec进入容器当中查看启动状况</p></li><li><p><code>readinessProbe</code>和<code>livenessProbe</code>的执行顺序</p><p>先<code>readinessProbe</code>后<code>livenessProbe</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-资源管理</title>
      <link href="/posts/cbb52542/"/>
      <url>/posts/cbb52542/</url>
      
        <content type="html"><![CDATA[<h1 id="资源对象"><a href="#资源对象" class="headerlink" title="资源对象"></a>资源对象</h1><h2 id="Namespace-命名空间"><a href="#Namespace-命名空间" class="headerlink" title="Namespace(命名空间)"></a>Namespace(命名空间)</h2><ul><li><p>隔离</p><ol><li>资源对象的隔离:<code>Service</code>,<code>Deployment</code>,<code>pod</code></li><li>资源配额的隔离:<code>cpu</code>,<code>Memory</code></li></ol></li><li><p><code>yaml</code>配置文件创建namespace:(<code>namespace-dev.yaml</code>)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="comment"># namespace名字</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><p><code>kubectl create -f namespace-dev.yaml</code></p></li><li><p>创建在指定命名空间下的pod</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">web-dev.chc.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="隔离特点"><a href="#隔离特点" class="headerlink" title="隔离特点"></a>隔离特点</h3><ul><li>Namespace的隔离仅仅是名字的隔离,而非物理上的隔离</li></ul><h3 id="划分方式"><a href="#划分方式" class="headerlink" title="划分方式"></a>划分方式</h3><ol><li>按环境划分:<code>dev</code>,<code>test</code></li><li>按团队划分</li><li>自定义多级划分</li></ol><h2 id="Resources-资源管理"><a href="#Resources-资源管理" class="headerlink" title="Resources(资源管理)"></a>Resources(资源管理)</h2><ul><li><p>资源管理内容:<code>cpu</code>,<code>gpu</code>,内存,持久化存储</p></li><li><p>资源单位</p><p><code>memory</code>:Ti, Gi, Mi, Ki</p><p><code>cpu</code>:cpu的测量单位是cpus，允许分数值。你可以使用前缀m来表示mili（千分之一）。例如100mcpu就是100 milicpu，等价于0.1CPU。</p></li></ul><ol><li><p>Requests</p><ul><li>设置各容器需要的最小资源</li></ul></li><li><p>Limits</p><ul><li>用于限制运行时容器占用的资源，用来限制容器的最大CPU、内存的使用率</li></ul></li></ol><ul><li><p><code>yaml</code>使用<code>Resources</code>案例:<code>web-resources-dev.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="comment"># 使用resources</span></span><br><span class="line"><span class="attr">        resources:</span></span><br><span class="line"><span class="attr">          requests:</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">100</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">100</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">200</span><span class="string">m</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">web-dev.chc.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><p>执行命令<code>kubectl apply -f web-resources-dev.yaml</code></p></li><li><p>注意点:</p><ol><li><code>requests</code>:配置大于服务器当前可用配置会导致服务一直处于<code>pending</code>状态</li></ol></li></ul><h2 id="LimitRange"><a href="#LimitRange" class="headerlink" title="LimitRange"></a>LimitRange</h2><p><code>LimitRange</code>(简称<code>limits</code>)基于<code>namespace</code>的资源管理，包括<code>pod</code>和<code>container</code>的最小、最大和<code>default</code>、<code>defaultrequests</code>等。</p><p>一旦创建<code>limits</code>，以后创建资源时，K8S将该limits资源限制条件默认/强制给pod，创建后发现不符合规则，将暂停创建<code>pod</code>。</p><p>在创建资源时，用户可以为pod自定义资源管理限制，在创建时会去检查和匹配limits值，发现不匹配将在创建时报错。创建后，该pod的资源使用遵守自定义规则，而不会遵守<code>namespace</code>的<code>limits</code>限制。</p><ul><li><p><code>limitRange.yaml</code>的配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">LimitRange</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">test-limits</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  limits:</span></span><br><span class="line"><span class="attr">  - max:</span></span><br><span class="line">    <span class="comment"># 设置最大cpu为4核</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">4000</span><span class="string">m</span></span><br><span class="line">      <span class="comment"># 最大内存2g</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">2</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">    min:</span></span><br><span class="line">      <span class="comment"># 最小cpu为0.1核</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line">      <span class="comment"># 最小内存100M</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">100</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">    maxLimitRequestRatio:</span> <span class="comment">#Limit和Request的比值最大配置</span></span><br><span class="line">      <span class="comment"># cpu的Limit和Request的比例不能大于3</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">3</span></span><br><span class="line">      <span class="comment"># 内存的Limit和Request的最大比例不能大于2</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">2</span></span><br><span class="line">    <span class="comment"># 以上配置为pod的资源配置</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">  - default:</span></span><br><span class="line">      <span class="comment"># 默认Limit的cpu为0.3核</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">300</span><span class="string">m</span></span><br><span class="line">      <span class="comment"># 默认Limit内存为200M</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">200</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">    defaultRequest:</span></span><br><span class="line">      <span class="comment"># 默认Request的cpu</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">200</span><span class="string">m</span></span><br><span class="line">      <span class="comment"># 默认Request的内存</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">100</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">    max:</span></span><br><span class="line">      <span class="comment"># Container的最大cpu</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">2000</span><span class="string">m</span></span><br><span class="line">      <span class="comment"># Container的最大内存</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">1</span><span class="string">Gi</span></span><br><span class="line"><span class="attr">    min:</span></span><br><span class="line">      <span class="comment"># Container的最小cpu</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line">      <span class="comment"># Container的最小cpu</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">100</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">    maxLimitRequestRatio:</span> <span class="comment">#Limit和Request的比值最大配置</span></span><br><span class="line"><span class="attr">      cpu:</span> <span class="number">5</span></span><br><span class="line"><span class="attr">      memory:</span> <span class="number">4</span></span><br><span class="line">    <span class="comment"># 以上资源配置为Container的配置</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">Container</span></span><br></pre></td></tr></table></figure></li><li><p>使用<code>limitRange.yaml</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个namespace</span></span><br><span class="line">kubectl create ns <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 使用配置</span></span><br><span class="line">kubectl create -f limitRange.yaml -n <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 查看namespace的limitRange的配置信息</span></span><br><span class="line">Kubectl describe limits -n <span class="built_in">test</span></span><br></pre></td></tr></table></figure></li><li><p>各值的情况限制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">每容器（type： container）</span><br><span class="line">    max&gt;=default&gt;=defaultRequest&gt;min</span><br><span class="line">每pod（type： pod）</span><br><span class="line">    max&gt;=min</span><br><span class="line">整个</span><br><span class="line">    容器的max*容器数&lt;=pod的max</span><br><span class="line">    容器的min*容器数&lt;=pod的min</span><br></pre></td></tr></table></figure></li><li><p>使用建议</p><ol><li><p>只使用limits的pod或者container中的一种，尽量不使用同时使用，特别在pod中有多容器需求的情况下。</p></li><li><p>尽量使用max，尽量不同时使用max和min</p></li><li><p>由于limits会针对该namespace下的所有新建的pods，所以在该namespace下应该运行哪些资源需求相同的业务</p></li><li><p>在复杂的limits配置下，不要在创建资源时使用自定义配置。</p></li></ol></li></ul><h2 id="ResourceQuotas"><a href="#ResourceQuotas" class="headerlink" title="ResourceQuotas"></a>ResourceQuotas</h2><p>Resource Quotas（资源配额，简称quota）是对namespace进行资源配额，限制资源使用的一种策略。 K8S是一个多用户架构，当多用户或者团队共享一个K8S系统时，SA使用quota防止用户（基于namespace的）的资源抢占，定义好资源分配策略。</p><p>Quota应用在Namespace上，默认情况下，没有Resource Quota的，需要另外创建Quota，并且每Namespace最多只能有一个Quota对象。</p><ul><li><p><code>resourceQuotas.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ResourceQuota</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">resource-quota</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  hard:</span></span><br><span class="line">    <span class="comment"># namespace下允许存在的非终止状态的pod数量</span></span><br><span class="line"><span class="attr">    pods:</span> <span class="number">4</span></span><br><span class="line">    <span class="comment"># CPU需求总量不能超过该值</span></span><br><span class="line"><span class="attr">    cpu:</span> <span class="number">4000</span><span class="string">m</span></span><br><span class="line">    <span class="comment"># 内存需求总量不能超过该值</span></span><br><span class="line"><span class="attr">    memory:</span> <span class="number">8</span><span class="string">Gi</span></span><br><span class="line">    <span class="comment"># namespace的CPU需求总量不能超过该值</span></span><br><span class="line">    <span class="string">requests.cpu:</span> <span class="number">2000</span><span class="string">m</span></span><br><span class="line">    <span class="comment"># namespace的内存需求总量不能超过该值</span></span><br><span class="line">    <span class="string">requests.memory:</span> <span class="number">4</span><span class="string">Gi</span></span><br><span class="line">    <span class="comment"># namespace的CPU限额总量不能超过该值</span></span><br><span class="line">    <span class="string">limits.cpu:</span> <span class="number">4000</span><span class="string">m</span></span><br><span class="line">    <span class="comment"># namespace的内存限额总量不能超过该值</span></span><br><span class="line">    <span class="string">limits.memory:</span> <span class="number">8</span><span class="string">Gi</span></span><br><span class="line">    <span class="comment"># namespace下允许存在的configmap的数量</span></span><br><span class="line"><span class="attr">    configmaps:</span> <span class="number">10</span></span><br><span class="line">    <span class="comment"># namespace下允许存在的PVC的数量</span></span><br><span class="line"><span class="attr">    persistentvolumeclaims:</span> <span class="number">4</span></span><br><span class="line">    <span class="comment"># namespace下允许存在的replication controllers的数量</span></span><br><span class="line"><span class="attr">    replicationcontrollers:</span> <span class="number">20</span></span><br><span class="line">    <span class="comment"># namespace下允许存在的secret的数量</span></span><br><span class="line"><span class="attr">    secrets:</span> <span class="number">10</span></span><br><span class="line">    <span class="comment"># namespace下允许存在的service的数量</span></span><br><span class="line"><span class="attr">    services:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure></li><li><p>使用配置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f resourceQuotas.yaml -n <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 查看quota配置和使用情况</span></span><br><span class="line">kubectl get quota -n <span class="built_in">test</span></span><br><span class="line">kubectl desctibe quota resource-quota -n <span class="built_in">test</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Eviction-Pod驱逐"><a href="#Eviction-Pod驱逐" class="headerlink" title="Eviction (Pod驱逐)"></a>Eviction (Pod驱逐)</h2><h3 id="常见的驱逐策略配置"><a href="#常见的驱逐策略配置" class="headerlink" title="常见的驱逐策略配置"></a>常见的驱逐策略配置</h3><ul><li><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--eviction-soft=memory.available&lt;1.2Gi</span><br><span class="line">--eviction-soft-grace-period=memory.available=1m30s</span><br></pre></td></tr></table></figure><p>当内存持续1分30秒小于1.2G则会触发pod驱逐</p></li><li><p><code>--eviction-hard=memory.available&lt;100Mi,nodefs.availble&lt;1Gi,nodefs.inodesFree&lt;5%</code></p><p>当内存小于100M或者磁盘小于1G或者inodesFree小于5%则触发驱逐策略</p></li></ul><h3 id="驱逐策略"><a href="#驱逐策略" class="headerlink" title="驱逐策略"></a>驱逐策略</h3><ul><li><p>磁盘紧缺</p><ol><li>删除死掉的pod,容器</li><li>删除没用的镜像</li><li>按优先级,资源占用情况驱逐pod(优先级-&gt;资源占用)</li></ol></li><li><p>内存紧缺</p><ol><li>驱逐不可靠的pod</li><li>驱逐基本可靠的pod</li><li>驱逐可靠的pod</li></ol></li></ul><h3 id="服务可靠性判断"><a href="#服务可靠性判断" class="headerlink" title="服务可靠性判断"></a>服务可靠性判断</h3><table><thead><tr><th>Requests==Limits</th><th>可靠</th></tr></thead><tbody><tr><td>不设置(不建议)</td><td>不可靠</td></tr><tr><td>Limits &gt; Requests</td><td>基本可靠</td></tr></tbody></table><h1 id="Label-标签"><a href="#Label-标签" class="headerlink" title="Label(标签)"></a>Label(标签)</h1><p>Label是Kubernetes系统中的一个核心概念。<br>Label以key/value键值对的形式附加到各种对象上，如Pod、Service、RC、Node等。<br>Label定义了这些对象的可识别属性，用来对它们进行管理和选择。Label可以在创建时附加到对象上，也可以在对象创建后通过API进行管理。</p><ul><li><p><code>web-label.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#deploy</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo-label</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line">    <span class="comment"># 匹配的标签</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line">      <span class="comment"># 匹配的key-value</span></span><br><span class="line"><span class="attr">      app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">  template:</span></span><br><span class="line"><span class="attr">    metadata:</span></span><br><span class="line">      <span class="comment"># 创建标签的名字 </span></span><br><span class="line"><span class="attr">      labels:</span></span><br><span class="line">        <span class="comment"># 定义的标签key-value</span></span><br><span class="line"><span class="attr">        app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">    spec:</span></span><br><span class="line"><span class="attr">      nodeSelector:</span></span><br><span class="line"><span class="attr">        disktype:</span> <span class="string">ssd</span> <span class="comment"># 选择node标签为disktype: ssd的机器</span></span><br><span class="line"><span class="attr">      containers:</span></span><br><span class="line"><span class="attr">      - name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">tomcat:8-slim</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="attr">        - containerPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">        resources:</span>  <span class="comment"># 使用resources</span></span><br><span class="line"><span class="attr">          requests:</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">100</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="attr">          limits:</span></span><br><span class="line"><span class="attr">            memory:</span> <span class="number">110</span><span class="string">Mi</span></span><br><span class="line"><span class="attr">            cpu:</span> <span class="number">200</span><span class="string">m</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line">    <span class="comment"># service选择带有app: web-demo标签的pod</span></span><br><span class="line"><span class="attr">    app:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#ingress</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  rules:</span></span><br><span class="line"><span class="attr">  - host:</span> <span class="string">web-dev.chclabel.com</span></span><br><span class="line"><span class="attr">    http:</span></span><br><span class="line"><span class="attr">      paths:</span></span><br><span class="line"><span class="attr">      - path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">        backend:</span></span><br><span class="line"><span class="attr">          serviceName:</span> <span class="string">web-demo</span></span><br><span class="line"><span class="attr">          servicePort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>使用配置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  kubectl apply -f web-label.yaml</span><br><span class="line">  <span class="comment"># 给node打标签</span></span><br><span class="line">  kubectl label node [nodename] disktype=ssd</span><br><span class="line">  <span class="comment"># 查node的标签</span></span><br><span class="line">  kubectl get nodes --show-labels</span><br><span class="line">  <span class="comment"># 查看pod部署位置</span></span><br><span class="line">  kubectl get pods -n dev -o wide</span><br><span class="line">  <span class="comment"># 删除node的标签</span></span><br><span class="line">kubectl label nodes [nodename] disktype-</span><br><span class="line">  <span class="comment"># 修改node的标签</span></span><br><span class="line">  $ kubectl label nodes [nodename] disktype=hdd --overwrite</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>kubeadm安装kubernetes教程1.15.1</title>
      <link href="/posts/6ec0dc31/"/>
      <url>/posts/6ec0dc31/</url>
      
        <content type="html"><![CDATA[<h1 id="节点说明"><a href="#节点说明" class="headerlink" title="节点说明"></a>节点说明</h1><table><thead><tr><th align="left">系统类型</th><th align="left">IP地址</th><th align="left">节点角色</th><th align="left">Hostname</th></tr></thead><tbody><tr><td align="left">centos-7.4</td><td align="left">192.168.43.111</td><td align="left">master</td><td align="left">vmware-111</td></tr><tr><td align="left">centos-7.4</td><td align="left">192.168.43.112</td><td align="left">worker</td><td align="left">vmware-112</td></tr><tr><td align="left">centos-7.4</td><td align="left">192.168.43.113</td><td align="left">master</td><td align="left">vmware-113</td></tr></tbody></table><ul><li>因为服务器有限,所以这里设置master也承担工作负载</li></ul><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><h2 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h2><h3 id="主机名配置"><a href="#主机名配置" class="headerlink" title="主机名配置"></a>主机名配置</h3><ul><li><p>主机名必须每个节点都不一样，并且保证所有点之间可以通过hostname互相访问</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看主机名</span></span><br><span class="line">$ hostname</span><br><span class="line"><span class="comment"># 修改主机名</span></span><br><span class="line">$ hostnamectl <span class="built_in">set</span>-hostname &lt;your_hostname&gt;</span><br><span class="line"><span class="comment"># 配置host，使所有节点之间可以通过hostname互相访问</span></span><br><span class="line">$ vi /etc/hosts</span><br><span class="line"><span class="comment"># &lt;node-ip&gt; &lt;node-hostname&gt;</span></span><br></pre></td></tr></table></figure><ol><li><p>配置<code>hosts</code>文件(全部主机)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/hosts</span><br><span class="line">192.168.43.111 vmware-111</span><br><span class="line">192.168.43.112 vmware-112</span><br><span class="line">192.168.43.113 vmware-113</span><br></pre></td></tr></table></figure></li></ol></li></ul><ol start="2"><li><p>配置各个主机的<code>hostname</code>(全部主机)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 192.168.43.111</span></span><br><span class="line">$ hostnamectl <span class="built_in">set</span>-hostname vmware-111</span><br><span class="line"></span><br><span class="line"><span class="comment"># 192.168.43.112</span></span><br><span class="line">$ hostnamectl <span class="built_in">set</span>-hostname vmware-112</span><br><span class="line"></span><br><span class="line"><span class="comment"># 192.168.43.113</span></span><br><span class="line">$ hostnamectl <span class="built_in">set</span>-hostname vmware-113</span><br></pre></td></tr></table></figure></li></ol><h3 id="安装依赖包-全部节点"><a href="#安装依赖包-全部节点" class="headerlink" title="安装依赖包(全部节点)"></a>安装依赖包(全部节点)</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新yum</span></span><br><span class="line">$ yum update -y</span><br><span class="line"><span class="comment"># 安装依赖包</span></span><br><span class="line">$ yum install -y conntrack ipvsadm ipset jq sysstat curl iptables libseccomp</span><br></pre></td></tr></table></figure><h3 id="功能设置-全部节点"><a href="#功能设置-全部节点" class="headerlink" title="功能设置(全部节点)"></a>功能设置(全部节点)</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭防火墙,如果不想关闭防火墙可以看下方的集群所需端口列表</span></span><br><span class="line">$ systemctl stop firewalld &amp;&amp; systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"><span class="comment"># 关闭swap</span></span><br><span class="line">$ swapoff -a</span><br><span class="line">$ sed -i <span class="string">'/swap/s/^\(.*\)$/#\1/g'</span> /etc/fstab</span><br><span class="line"><span class="comment"># 关闭selinux</span></span><br><span class="line">$ setenforce 0</span><br><span class="line"><span class="comment"># 关闭dnsmasq(否则可能导致docker容器无法解析域名)</span></span><br><span class="line">$ service dnsmasq stop &amp;&amp; systemctl <span class="built_in">disable</span> dnsmasq</span><br></pre></td></tr></table></figure><ul><li>集群所需端口:<a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/" target="_blank" rel="noopener">查询地址</a></li></ul><h3 id="系统参数设置-全部节点"><a href="#系统参数设置-全部节点" class="headerlink" title="系统参数设置(全部节点)"></a>系统参数设置(全部节点)</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 制作配置文件</span></span><br><span class="line">$ cat &gt; /etc/sysctl.d/kubernetes.conf &lt;&lt;EOF</span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line">vm.swappiness=0</span><br><span class="line">vm.overcommit_memory=1</span><br><span class="line">vm.panic_on_oom=0</span><br><span class="line">fs.inotify.max_user_watches=89100</span><br><span class="line">EOF</span><br><span class="line"><span class="comment"># 生效文件</span></span><br><span class="line">$ sysctl -p /etc/sysctl.d/kubernetes.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果net.bridge.bridge-nf-call-iptables报错，加载br_netfilter模块</span></span><br><span class="line">$ modprobe br_netfilter</span><br><span class="line">$ sysctl -p /etc/sysctl.d/kubernetes.conf</span><br></pre></td></tr></table></figure><h3 id="安装docker-全部节点"><a href="#安装docker-全部节点" class="headerlink" title="安装docker(全部节点)"></a>安装docker(全部节点)</h3><ul><li><p>自行找教程</p></li><li><p>docker配置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在/etc/docker/daemon.json加入</span></span><br><span class="line"><span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>]</span><br><span class="line"><span class="comment"># 启动docker服务</span></span><br><span class="line">service docker restart</span><br></pre></td></tr></table></figure></li></ul><h2 id="创建目录-全部节点"><a href="#创建目录-全部节点" class="headerlink" title="创建目录(全部节点)"></a>创建目录(全部节点)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/keepalived</span><br><span class="line">mkdir -p /opt/kubernetes</span><br><span class="line">mkdir -p /etc/kubernetes</span><br></pre></td></tr></table></figure><h3 id="安装必要工具-全部节点"><a href="#安装必要工具-全部节点" class="headerlink" title="安装必要工具(全部节点)"></a>安装必要工具(全部节点)</h3><h4 id="工具说明"><a href="#工具说明" class="headerlink" title="工具说明"></a>工具说明</h4><ul><li><strong>kubeadm:</strong>  部署集群用的命令</li><li><strong>kubelet:</strong> 在集群中每台机器上都要运行的组件，负责管理pod、容器的生命周期</li><li><strong>kubectl:</strong> 集群管理工具（可选，只要在控制集群的节点上安装即可）</li></ul><h4 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置yum源</span></span><br><span class="line">$ cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</span><br><span class="line">       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装工具</span></span><br><span class="line"><span class="comment"># 找到要安装的版本号</span></span><br><span class="line">$ yum list kubeadm --showduplicates | sort -r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装指定版本（这里用的是1.15.1）</span></span><br><span class="line">$ yum install -y kubeadm-1.15.1-0 kubelet-1.15.1-0 kubectl-1.15.1-0 --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">$ systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动kubelet</span></span><br><span class="line">$ systemctl <span class="built_in">enable</span> kubelet &amp;&amp; systemctl start kubelet</span><br></pre></td></tr></table></figure><h2 id="准备配置文件-任意选一个节点-192-168-43-111"><a href="#准备配置文件-任意选一个节点-192-168-43-111" class="headerlink" title="准备配置文件(任意选一个节点:192.168.43.111)"></a>准备配置文件(任意选一个节点:192.168.43.111)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /opt/kubernetes &amp;&amp; git <span class="built_in">clone</span> https://github.com/chcGolang/k8s-kubeadm</span><br><span class="line"><span class="comment"># 看看git内容</span></span><br><span class="line">$ ls -l k8s-kubeadm</span><br><span class="line">addons/</span><br><span class="line">configs/</span><br><span class="line">scripts/</span><br><span class="line">init.sh</span><br><span class="line">global-configs.properties</span><br></pre></td></tr></table></figure><h3 id="文件说明"><a href="#文件说明" class="headerlink" title="文件说明"></a>文件说明</h3><ul><li><strong>addons</strong></li></ul><blockquote><p>kubernetes的插件，比如calico和dashboard。</p></blockquote><ul><li><strong>configs</strong></li></ul><blockquote><p>包含了部署集群过程中用到的各种配置文件。</p></blockquote><ul><li><strong>scripts</strong></li></ul><blockquote><p>包含部署集群过程中用到的脚本，如keepalive检查脚本。</p></blockquote><ul><li><strong>global-configs.properties</strong></li></ul><blockquote><p>全局配置，包含各种易变的配置内容。</p></blockquote><ul><li><strong>init.sh</strong></li></ul><blockquote><p>初始化脚本，配置好global-config之后，会自动生成所有配置文件。</p></blockquote><h3 id="生成配置"><a href="#生成配置" class="headerlink" title="生成配置"></a>生成配置</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd到之前下载的git代码目录</span></span><br><span class="line">$ <span class="built_in">cd</span> k8s-kubeadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑属性配置（根据文件注释中的说明填写好每个key-value）</span></span><br><span class="line">$ vi global-config.properties</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成配置文件，确保执行过程没有异常信息</span></span><br><span class="line">$ ./init.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看生成的配置文件，确保脚本执行成功</span></span><br><span class="line">$ find target/ -<span class="built_in">type</span> f</span><br></pre></td></tr></table></figure><blockquote><p><strong>执行init.sh常见问题：</strong></p><ol><li>Syntax error: “(“ unexpected</li></ol><ul><li>bash版本过低，运行：bash -version查看版本，如果小于4需要升级</li><li>不要使用 sh init.sh的方式运行（sh和bash可能不一样哦）</li></ul><ol start="2"><li>global-config.properties文件填写错误，需要重新生成<br>再执行一次./init.sh即可，不需要手动删除target</li></ol></blockquote><h1 id="集群安装"><a href="#集群安装" class="headerlink" title="集群安装"></a>集群安装</h1><h2 id="安装keepalived-选择两个以上的Master节点"><a href="#安装keepalived-选择两个以上的Master节点" class="headerlink" title="安装keepalived(选择两个以上的Master节点)"></a>安装keepalived(选择两个以上的Master节点)</h2><ol><li><p><strong>创建配置文件</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  192.168.43.113(主)</span></span><br><span class="line">cat&gt;/opt/keepalived/keepalived.conf&lt;&lt;EOF </span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP  <span class="comment">## 主节点为MASTER，备份节点为BACKUP</span></span><br><span class="line">    interface ens33 <span class="comment">## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span></span><br><span class="line">    virtual_router_id 111  <span class="comment">## 虚拟路由ID号（主备节点一定要相同）</span></span><br><span class="line">    mcast_src_ip 192.168.43.113 <span class="comment">## 本机ip地址</span></span><br><span class="line">    priority 100  <span class="comment">##优先级配置（0-254的值）</span></span><br><span class="line">    nopreempt</span><br><span class="line">    advert_int 1  <span class="comment">## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span></span><br><span class="line">authentication &#123;  <span class="comment">## 认证匹配</span></span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass rabbitmq</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.43.101  <span class="comment">## 虚拟ip，可以指定多个</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  192.168.43.111(备)</span></span><br><span class="line">cat&gt;/opt/keepalived/keepalived.conf&lt;&lt;EOF </span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP  <span class="comment">## 主节点为MASTER，备份节点为BACKUP</span></span><br><span class="line">    interface ens33 <span class="comment">## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span></span><br><span class="line">    virtual_router_id 111  <span class="comment">## 虚拟路由ID号（主备节点一定要相同）</span></span><br><span class="line">    mcast_src_ip 192.168.43.111 <span class="comment">## 本机ip地址</span></span><br><span class="line">    priority 98  <span class="comment">##优先级配置（0-254的值）</span></span><br><span class="line">    nopreempt</span><br><span class="line">    advert_int 1  <span class="comment">## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span></span><br><span class="line">authentication &#123;  <span class="comment">## 认证匹配</span></span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass rabbitmq</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.43.101  <span class="comment">## 虚拟ip，可以指定多个</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p><strong>启动<code>keepalived</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --net=host \</span><br><span class="line">--privileged \</span><br><span class="line">--name keepalived \</span><br><span class="line">--restart=unless-stopped \</span><br><span class="line">-v /opt/keepalived/keepalived.conf:/container/service/keepalived/assets/keepalived.conf \</span><br><span class="line">osixia/keepalived --copy-service</span><br></pre></td></tr></table></figure></li><li><p><strong>查看ip</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure></li></ol><h2 id="部署第一Master节点-192-168-43-113"><a href="#部署第一Master节点-192-168-43-113" class="headerlink" title="部署第一Master节点(192.168.43.113)"></a>部署第一Master节点(192.168.43.113)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 准备配置文件</span></span><br><span class="line"><span class="comment"># 在192.168.43.111拷贝配置文件到192.168.43.113</span></span><br><span class="line">$ scp target/configs/kubeadm-config.yaml root@192.168.43.113:/opt/kubernetes/</span><br><span class="line"><span class="comment"># ssh到192.168.43.113，执行kubeadm初始化系统（注意保存最后打印的加入集群的命令）</span></span><br><span class="line">$ kubeadm init --config=kubeadm-config.yaml --experimental-upload-certs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果出现:Error writing Crisocket information for the control-plane node: timed out waiting for the condition</span></span><br><span class="line"><span class="comment"># 重启kubeadm</span></span><br><span class="line">kubeadm reset</span><br><span class="line"><span class="comment"># 在执行init命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># copy kubectl配置（上一步会有提示）</span></span><br><span class="line">$ mkdir -p ~/.kube</span><br><span class="line">$ cp -i /etc/kubernetes/admin.conf ~/.kube/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试一下kubectl</span></span><br><span class="line">$ kubectl get pods --all-namespaces</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看10-kubeadm.conf配置文件的位置</span></span><br><span class="line">$ systemctl status kubelet</span><br><span class="line"><span class="comment"># 设置kubelet的cgroupdriver为systemd第一Master节点(192.168.43.113)的,其他不用</span></span><br><span class="line">$ vi /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf</span><br><span class="line"><span class="comment"># 加入--cgroup-driver=systemd</span></span><br><span class="line">Environment=<span class="string">"KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml --cgroup-driver=systemd"</span></span><br><span class="line"><span class="comment">#或者修改/kubelet/config.yaml配置文件第</span></span><br><span class="line">$ vi /var/lib/kubelet/config.yaml</span><br><span class="line"> cgroupDriver: cgroupfs 改成 cgroupDriver: systemd</span><br><span class="line">$ systemctl restart kubelet</span><br><span class="line"></span><br><span class="line"><span class="comment"># **备份init打印的join命令**</span></span><br><span class="line">You can now join any number of the control-plane node running the following <span class="built_in">command</span> on each as root:</span><br><span class="line"><span class="comment"># master节点用以下命令加入集群：</span></span><br><span class="line">kubeadm join 192.168.43.101:6443 --token jlk7g0.kh4d6pxo261li90n \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:0ca7858e22de721bbdf385ffeba34868b7328545de1ef221a05b5b3c029d647e \</span><br><span class="line">    --control-plane --certificate-key b29d615dcc4ddc0606067d06bf5bfba5681c80616373465fa0c362594c29927b</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"><span class="comment"># 工作节点用以下命令加入集群：</span></span><br><span class="line">kubeadm join 192.168.43.101:6443 --token jlk7g0.kh4d6pxo261li90n \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:0ca7858e22de721bbdf385ffeba34868b7328545de1ef221a05b5b3c029d647e</span><br></pre></td></tr></table></figure><h2 id="部署网络插件-calico-192-168-43-113"><a href="#部署网络插件-calico-192-168-43-113" class="headerlink" title="部署网络插件 - calico (192.168.43.113)"></a>部署网络插件 - calico (192.168.43.113)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录(192.168.43.113)</span></span><br><span class="line">$ mkdir -p /etc/kubernetes/addons</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传calico配置到配置好kubectl的节点(192.168.43.111)</span></span><br><span class="line">$ scp target/addons/calico* root@192.168.43.113:/etc/kubernetes/addons/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看需要的image</span></span><br><span class="line">$ cat /etc/kubernetes/addons/calico.yaml |grep image</span><br><span class="line"><span class="comment"># 然后使用docker pull命令下载下来</span></span><br><span class="line">$ docker pull ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署calico (192.168.43.113)</span></span><br><span class="line">$ kubectl apply -f /etc/kubernetes/addons/calico-rbac-kdd.yaml</span><br><span class="line">$ kubectl apply -f /etc/kubernetes/addons/calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看状态 (192.168.43.113)</span></span><br><span class="line">$ kubectl get pods -n kube-system</span><br></pre></td></tr></table></figure><h2 id="加入其它master节点"><a href="#加入其它master节点" class="headerlink" title="加入其它master节点"></a>加入其它master节点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用之前保存的join命令加入集群(192.168.43.112)</span></span><br><span class="line">kubeadm join 192.168.43.101:6443 --token jlk7g0.kh4d6pxo261li90n \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:0ca7858e22de721bbdf385ffeba34868b7328545de1ef221a05b5b3c029d647e \</span><br><span class="line">    --control-plane --certificate-key b29d615dcc4ddc0606067d06bf5bfba5681c80616373465fa0c362594c29927b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 耐心等待一会，并观察日志</span></span><br><span class="line">$ journalctl -f</span><br><span class="line"><span class="comment"># 查看集群状态</span></span><br><span class="line"><span class="comment"># 1.查看节点</span></span><br><span class="line">$ kubectl get nodes</span><br><span class="line"><span class="comment"># 2.查看pods</span></span><br><span class="line">$ kubectl get pods --all-namespaces</span><br></pre></td></tr></table></figure><h2 id="加入worker节点"><a href="#加入worker节点" class="headerlink" title="加入worker节点"></a>加入worker节点</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用之前保存的join命令加入集群</span></span><br><span class="line">$ kubeadm join ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 耐心等待一会，并观察日志</span></span><br><span class="line">$ journalctl -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看节点</span></span><br><span class="line">$ kubectl get nodes</span><br></pre></td></tr></table></figure><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><ul><li><p>让master节点也承载工作负荷(生产环境不推荐使用)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint nodes --all node-role.kubernetes.io/master-</span><br><span class="line"><span class="comment"># 这个错误可以忽略</span></span><br><span class="line">error: taint “node-role.kubernetes.io/master:” not found</span><br></pre></td></tr></table></figure></li><li><p>禁止master部署pod</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint nodes k8s node-role.kubernetes.io/master=<span class="literal">true</span>:NoSchedule</span><br></pre></td></tr></table></figure></li></ul><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><ul><li><p>查看问题方法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl status kubelet</span><br><span class="line">journalctl -f</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>skipping: failed to &quot;StartContainer&quot; for &quot;coredns&quot; with CrashLoopBackOff: &quot;B</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行命令</span></span><br><span class="line">kubectl -n kube-system get deployment coredns -o yaml | \</span><br><span class="line">sed <span class="string">'s/allowPrivilegeEscalation: false/allowPrivilegeEscalation: true/g'</span> | \</span><br><span class="line">kubectl apply -f -</span><br></pre></td></tr></table></figure></li></ul><h1 id="集群可用性测试"><a href="#集群可用性测试" class="headerlink" title="集群可用性测试"></a>集群可用性测试</h1><h2 id="1-创建nginx-ds"><a href="#1-创建nginx-ds" class="headerlink" title="1. 创建nginx ds"></a>1. 创建nginx ds</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 写入配置</span></span><br><span class="line">$ cat &gt; nginx-ds.yml &lt;&lt;EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-ds</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx-ds</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: nginx-ds</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 80</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: DaemonSet</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-ds</span><br><span class="line">  labels:</span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">spec:</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx-ds</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: my-nginx</span><br><span class="line">        image: nginx:1.7.9</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建ds</span></span><br><span class="line">$ kubectl create -f nginx-ds.yml</span><br></pre></td></tr></table></figure><h2 id="2-检查各种ip连通性"><a href="#2-检查各种ip连通性" class="headerlink" title="2. 检查各种ip连通性"></a>2. 检查各种ip连通性</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查各 Node 上的 Pod IP 连通性</span></span><br><span class="line">$ kubectl get pods  -o wide</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在每个节点上ping pod ip</span></span><br><span class="line">$ ping &lt;pod-ip&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查service可达性</span></span><br><span class="line">$ kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes   ClusterIP   10.96.0.1     &lt;none&gt;        443/TCP        4h5m</span><br><span class="line">nginx-ds     NodePort    10.101.25.8   &lt;none&gt;        80:32146/TCP   8m30s</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在每个节点上访问服务</span></span><br><span class="line">$ curl &lt;service-ip&gt;:&lt;port&gt;</span><br><span class="line"><span class="comment">#  curl  10.101.25.8:80</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在每个节点检查node-port可用性</span></span><br><span class="line">$ curl &lt;node-ip&gt;:&lt;port&gt;</span><br><span class="line"><span class="comment">#  curl  192.168.43.111:32146</span></span><br></pre></td></tr></table></figure><h2 id="3-检查dns可用性"><a href="#3-检查dns可用性" class="headerlink" title="3. 检查dns可用性"></a>3. 检查dns可用性</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个nginx pod</span></span><br><span class="line">$ cat &gt; pod-nginx.yaml &lt;&lt;EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx</span><br><span class="line">    image: nginx:1.7.9</span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建pod</span></span><br><span class="line">$ kubectl create -f pod-nginx.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入pod，查看dns</span></span><br><span class="line">$ kubectl <span class="built_in">exec</span>  nginx -i -t -- /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看dns配置</span></span><br><span class="line">root@nginx:/<span class="comment"># cat /etc/resolv.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看名字是否可以正确解析</span></span><br><span class="line">root@nginx:/<span class="comment"># ping nginx-ds</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql数据库备份</title>
      <link href="/posts/760d7cba/"/>
      <url>/posts/760d7cba/</url>
      
        <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><ol><li>数据库备份有逻辑备份和物理备份<ul><li>逻辑备份的结果为sql语句,适合所有的存储引擎</li><li>物理备份是对数据库的拷贝,对于内存表只备份结构</li></ul></li></ol><h1 id="逻辑备份"><a href="#逻辑备份" class="headerlink" title="逻辑备份"></a>逻辑备份</h1><h2 id="mysqldump"><a href="#mysqldump" class="headerlink" title="mysqldump"></a>mysqldump</h2><ol><li><p>常用语法</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份指定表</span></span><br><span class="line">mysqldump [OPTIONS] database [table1 table2]</span><br><span class="line"><span class="comment"># 备份指定的数据库</span></span><br><span class="line">mysqldump [OPTIONS]  <span class="comment">--database [OPTIONS] [DB1 DB2]</span></span><br><span class="line"><span class="comment"># 备份全部的数据库</span></span><br><span class="line">mysqldump [OPTIONS]  <span class="comment">--all-database [OPTIONS]</span></span><br></pre></td></tr></table></figure></li><li><p>mysqldump的常用命令</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>-u,–user=name</td><td>数据库用户名</td></tr><tr><td>-p,–password</td><td>数据库密码</td></tr><tr><td>–single-transaction</td><td>使用事务的方式备份,使得备份时数据库的一致性,只能应用于InnoDB存储引擎</td></tr><tr><td>-x,–lock-all-tables</td><td>使用锁表的方式确保数据库的一致性,应用于没有事务的存储引擎</td></tr><tr><td>-R,–routines</td><td>备份的时候包括存储过程</td></tr><tr><td>–triggers</td><td>备份的时候包括触发器</td></tr><tr><td>-E,–events</td><td>备份的时候包括调度事件</td></tr><tr><td>–hex-blob</td><td>解决部分数据在文本格式下不可见的问题</td></tr><tr><td>–tab</td><td>指定备份文件存储的位置</td></tr><tr><td>-w,–where=[‘过滤条件’]</td><td>导出指定条件的数据<br>==只支持单表导出==</td></tr><tr><td>–master-data=[1/2]</td><td>选项赋值为2，那么CHANGE MASTER TO 语句会被写成一个SQL comment（注释），从而只提供信息;<br>选项赋值为1，那么语句不会被写成注释并且在dump被载入时生效。(==默认值为1==)</td></tr></tbody></table></li><li><p>使用例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump --master-data=2 --single-transaction  --routines --triggers --events -u$&#123;USER&#125; -p$&#123;PASSWD&#125; -P$&#123;HostPort&#125; $&#123;database&#125;  &gt; $&#123;DATADIR&#125;/$&#123;Environment&#125;-$&#123;database&#125;.sql</span><br></pre></td></tr></table></figure></li><li><p>备份脚本</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">###############Basic parameters##########################</span></span><br><span class="line">DAY=`date +%Y%m%d`</span><br><span class="line">Environment=$(/sbin/ifconfig | grep <span class="string">"inet addr"</span> | head -1 |grep -v <span class="string">"127.0.0.1"</span> | awk <span class="string">'&#123;print $2;&#125;'</span> | awk -F<span class="string">':'</span> <span class="string">'&#123;print $2;&#125;'</span>)</span><br><span class="line">USER=<span class="string">"backup"</span></span><br><span class="line">PASSWD=<span class="string">"123456"</span></span><br><span class="line">HostPort=<span class="string">"3306"</span></span><br><span class="line"><span class="comment"># 数据库数据存储位置</span></span><br><span class="line">MYSQLBASE=<span class="string">"/home/mysql/"</span></span><br><span class="line"><span class="comment"># 备份的位置</span></span><br><span class="line">DATADIR=<span class="string">"/home/db_backup/<span class="variable">$&#123;DAY&#125;</span>"</span></span><br><span class="line"><span class="comment"># 数据库程序位置</span></span><br><span class="line">MYSQL=`/usr/bin/<span class="built_in">which</span> mysql`</span><br><span class="line"><span class="comment"># 备份程序的位置</span></span><br><span class="line">MYSQLDUMP=`/usr/bin/<span class="built_in">which</span> mysqldump`</span><br><span class="line">mkdir -p <span class="variable">$&#123;DATADIR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">Dump</span></span>()&#123;</span><br><span class="line"> <span class="variable">$&#123;MYSQLDUMP&#125;</span> --master-data=2 --single-transaction  --routines --triggers --events -u<span class="variable">$&#123;USER&#125;</span> -p<span class="variable">$&#123;PASSWD&#125;</span> -P<span class="variable">$&#123;HostPort&#125;</span> <span class="variable">$&#123;database&#125;</span>  &gt; <span class="variable">$&#123;DATADIR&#125;</span>/<span class="variable">$&#123;Environment&#125;</span>-<span class="variable">$&#123;database&#125;</span>.sql</span><br><span class="line"> <span class="built_in">cd</span> <span class="variable">$&#123;DATADIR&#125;</span></span><br><span class="line"> gzip <span class="variable">$&#123;Environment&#125;</span>-<span class="variable">$&#123;database&#125;</span>.sql</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># not in则为排除不需要备份的库</span></span><br><span class="line"><span class="keyword">for</span> db <span class="keyword">in</span> `<span class="built_in">echo</span> <span class="string">"SELECT schema_name FROM information_schema.schemata where schema_name not in ('information_schema','sys','performance_schema')"</span> | <span class="variable">$&#123;MYSQL&#125;</span> -u<span class="variable">$&#123;USER&#125;</span> -p<span class="variable">$&#123;PASSWD&#125;</span> --skip-column-names`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   database=<span class="variable">$&#123;db&#125;</span></span><br><span class="line">   Dump</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>恢复数据到数据库</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 方法1</span><br><span class="line">mysql -u -p [dbname] &lt; backup.sql</span><br><span class="line"># 方法2</span><br><span class="line">mysql&gt; source /tmp/backup.sql</span><br></pre></td></tr></table></figure></li><li><p>实时备份binlog日志</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">mkdir /backup/binlog</span><br><span class="line"></span><br><span class="line">cat backup_binlog.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#指定mysqlbinlog的位置</span></span><br><span class="line">BACKUP_BIN=/usr/<span class="built_in">local</span>/mysql/bin/mysqlbinlog</span><br><span class="line"><span class="comment">#指定将远程binlog备份到本地的位置</span></span><br><span class="line">LOCAL_BACKUP_DIR=/backup/binlog/</span><br><span class="line"><span class="comment">#指定备份binlog时的日志</span></span><br><span class="line">BACKUP_LOG=/backup/binlog/backup.log</span><br><span class="line"><span class="comment">#指定要备份哪台binlog的ip </span></span><br><span class="line">REMOTE_HOST=192.168.1.248</span><br><span class="line">REMOTE_PORT=3306</span><br><span class="line">REMOTE_USER=repl</span><br><span class="line">REMOTE_PASS=repl</span><br><span class="line">FIRST_BINLOG=mysql-bin.000001</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#time to wait before reconnecting after failure</span></span><br><span class="line">SLEEP_SECONDS=10</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##create local_backup_dir if necessary</span></span><br><span class="line">mkdir -p <span class="variable">$&#123;LOCAL_BACKUP_DIR&#125;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;LOCAL_BACKUP_DIR&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 运行while循环，连接断开后等待指定时间，重新连接</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ `ls -A <span class="string">"<span class="variable">$&#123;LOCAL_BACKUP_DIR&#125;</span>"</span> |wc -l` -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    LAST_FILE=<span class="variable">$&#123;FIRST_BINLOG&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">LAST_FILE=`ls -l <span class="variable">$&#123;LOCAL_BACKUP_DIR&#125;</span> | grep -v backup.log |tail -n 1 |awk <span class="string">'&#123;print $9&#125;'</span>`</span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"><span class="comment">#$&#123;BACKUP_BIN&#125; --raw --read-from-remote-server --stop-never --host=$&#123;REMOTE_HOST&#125; --port=$&#123;REMOTE_PORT&#125; --user=$&#123;REMOTE_USER&#125; --password=$&#123;REMOTE_PASS&#125; $&#123;LAST_FILE&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/mysql/bin/mysqlbinlog  --raw --<span class="built_in">read</span>-from-remote-server --stop-never --host=<span class="variable">$&#123;REMOTE_HOST&#125;</span> --port=<span class="variable">$&#123;REMOTE_PORT&#125;</span> --user=<span class="variable">$&#123;REMOTE_USER&#125;</span> --password=<span class="variable">$&#123;REMOTE_PASS&#125;</span> <span class="variable">$&#123;LAST_FILE&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"`date +"</span>%Y/%m/%d %H:%M:%S<span class="string">"` mysqlbinlog停止，返回代码：$?"</span> | tee -a <span class="variable">$&#123;BACKUP_LOG&#125;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;SLEEP_SECONDS&#125;</span>秒后再次连接并继续备份"</span> | tee -a <span class="variable">$&#123;BACKUP_LOG&#125;</span>  </span><br><span class="line">sleep <span class="variable">$&#123;SLEEP_SECONDS&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">后台运行该备份脚本</span><br><span class="line">nohup sh  backup_binlog.sh &amp;</span><br></pre></td></tr></table></figure></li></ol><h1 id="物理备份"><a href="#物理备份" class="headerlink" title="物理备份"></a>物理备份</h1><h2 id="xtrabackup"><a href="#xtrabackup" class="headerlink" title="xtrabackup"></a>xtrabackup</h2><ol><li><p>介绍</p><ul><li>用于在线备份innodb存储引擎表</li><li>备份过程中,不会影响表的读写操作</li><li>只会备份表数据,不会备份表结构</li><li>innobackupex是对xtrabackup的封装并提供MyISAM表的备份功能(但是会锁表)</li></ul></li><li><p>安装xtrabackup</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hub.docker.com/r/perconalab/percona-xtrabackup</span><br></pre></td></tr></table></figure></li><li><p>利用innobackupex进行全备</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">innobackupex --user=root --password=<span class="built_in">pwd</span> --paraller=2 /home/db_backup/</span><br></pre></td></tr></table></figure></li><li><p>利用innobackupex进行全备恢复</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">innobackupex --apply-log /path/to/BACKUP-DIR</span><br></pre></td></tr></table></figure></li><li><p>利用innobackupex进行增量备份</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">innobackupex --user=root --password=<span class="built_in">pwd</span> --paraller=2 /backups</span><br><span class="line"></span><br><span class="line">innobackupex --user=root --password=<span class="built_in">pwd</span> \</span><br><span class="line">--incremental /home/db_backup/ \</span><br><span class="line">--incremental-basedir=/home/db_backup/back-dir</span><br><span class="line"></span><br><span class="line">innobackupex --user=root --password=<span class="built_in">pwd</span> \</span><br><span class="line">--incremental /home/db_backup/ \</span><br><span class="line">--incremental-basedir=[上一次增量备份的目录]</span><br></pre></td></tr></table></figure></li><li><p>利用innobackupex进行增量恢复</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">innobackupex --apply-log --redo-only 全备目录</span><br><span class="line"></span><br><span class="line">innobackupex --apply-log --redo-only 全备目录 \</span><br><span class="line">--incremental-dir=第一次增量备份目录</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mysql数据库设计规范</title>
      <link href="/posts/100de5f8/"/>
      <url>/posts/100de5f8/</url>
      
        <content type="html"><![CDATA[<h1 id="一-数据库设计规范"><a href="#一-数据库设计规范" class="headerlink" title="一. 数据库设计规范"></a>一. 数据库设计规范</h1><h2 id="1-数据库命名规范"><a href="#1-数据库命名规范" class="headerlink" title="1. 数据库命名规范"></a>1. 数据库命名规范</h2><table><thead><tr><th>规范</th><th>原因</th></tr></thead><tbody><tr><td>1. 所有数据库对象名称必须使用小写字母并用下划线分隔</td><td>Mysql是对大小写敏感的</td></tr><tr><td>2. 所有数据库对象名称禁止使用Mysql保留关键字</td><td>对SQL查询造成影响,<a href="https://dev.mysql.com/doc/refman/5.7/en/keywords.html" target="_blank" rel="noopener">关键字查询地址</a></td></tr><tr><td>3. 数据库对象的命名要能做到见名识义,并且最好不要超过32个字符</td><td>易于开发和维护</td></tr><tr><td>4. 临时库表必须以tmp_为前缀并以日期为后缀</td><td>易于区分临时库表和建立时间</td></tr><tr><td>5. 备份库表必须与bak_为前缀并以日期为后缀</td><td>易于区分备份库表和建立时间</td></tr><tr><td>6. 所有存储相同数据的列名和列类型必须一致</td><td>易于数据库性能,例如:逻辑外键</td></tr></tbody></table><h2 id="2-数据库基本设计规范"><a href="#2-数据库基本设计规范" class="headerlink" title="2. 数据库基本设计规范"></a>2. 数据库基本设计规范</h2><table><thead><tr><th>规范</th><th>原因</th></tr></thead><tbody><tr><td>1. 所有表必须使用InnoDB存储引擎</td><td>1. 支持事务,行级锁,更好的恢复性,高并发下性能更好 <br> 2. Mysql5.5之前的默认存储引擎是Myisam,5.6的默认引擎是InnoDB</td></tr><tr><td>2. 数据库和表的字符集统一使用UTF8</td><td>1. 兼容性好 <br> 2. 避免字符集转换产生的乱码 <br> 3. Utf8字符集汉字占用3个字节,ASCII码占用1个字节</td></tr><tr><td>3. 所有表和字段都需要添加注释</td><td>1. 使用comment从句添加表和列的备注 <br> 2. 易于数据字典的维护</td></tr><tr><td>4. 尽量控制单表数据量的大小,建议控制在500万行以内</td><td>1. 500万不是Mysql数据的限制,限制取决于存储设置和文件系统<br> 2. 易于备份恢复,性能<br> 3.可以用历史数据归档,分库分表等手段来控制数据量的大小</td></tr><tr><td>5. 谨慎使用Mysql分区表</td><td>1. 分区表在物理上表现为多文件,在逻辑上表现为一表<br> 2. 谨慎选择分区键,跨分区查询效率可能更低<br> 3. 建议采用物理分表的方式管理大数据</td></tr><tr><td>6. 尽量做到冷热数据分离,减小表的宽度</td><td>1. 减小磁盘IO,保证热数据的内存缓存命中率<br> 2. 利用更有效的利用缓存,避免读入无用的冷数据<br> 3. 经常一起使用的列放到一个表中</td></tr><tr><td>7. 禁止在表中建立预留字段</td><td>1. 预留字段的命名很难做到见名识义<br> 2. 预留字段无法确认存储的数据类型,所以无法选择合适的类型<br> 3. 对预留字段类型的修改,会对表进行锁定</td></tr><tr><td>8. 禁止在数据库中存储图片,文件等二进制数据</td><td>对数据库IO性能的影响</td></tr><tr><td>9. 禁止在线上做数据库压力测试</td><td>对正常的业务产生影响和产生垃圾数据</td></tr><tr><td>10. 禁止从开发环境,测试环境直连生成环境数据库</td><td>某些错误操作会影响生产环境的数据</td></tr></tbody></table><h2 id="3-索引设计规范"><a href="#3-索引设计规范" class="headerlink" title="3. 索引设计规范"></a>3. 索引设计规范</h2><table><thead><tr><th>规范</th><th>原因</th></tr></thead><tbody><tr><td>1. 限制每张表上的索引数量,建议单张表索引不超过5个</td><td>索引可以提高效率同样可以降低效率(提高查询,降低插入和更新)</td></tr><tr><td>2. 禁止给表中的每一列都建立单独的索引</td><td>设计良好的联合索引比每一列上的单独索引效率要高出很多</td></tr><tr><td>3. 避免冗余的索引</td><td>如：primary key(id)，index(id)，unique index(id)</td></tr><tr><td>4. 避免重复的索引</td><td>index(a,b,c)，index(a,b)，index(a)</td></tr><tr><td>5. 对于频繁的查询优先考虑使用覆盖索引</td><td>1. 覆盖索引：就是包含了所有查询字段(where,select,ordery by,group by包含的字段)的索引<br> 2. 避免Innodb表进行索引的二次查询<br> 3. 可以把随机IO变成顺序IO加快查询效率</td></tr><tr><td>6. 尽量避免使用外键约束</td><td>1. 不建议使用外键约束（foreign key），但一定要在表与表之间的关联键上建立索引<br> 2. 外键可用于保证数据的参照完整性，但建议在业务端实现<br> 3. 外键约束会影响父表和子表的写操作从而降低性能</td></tr></tbody></table><h3 id="常见索引的建议"><a href="#常见索引的建议" class="headerlink" title="常见索引的建议"></a>常见索引的建议</h3><ol><li>建议SELECT,UPDATE,DELETE语句的WHERE从句中的列</li><li>多表JOIN的关联列</li><li>包含在ORDER BY,GROUP BY,DISTINCT中的字段</li></ol><h3 id="索引列的顺序的选择"><a href="#索引列的顺序的选择" class="headerlink" title="索引列的顺序的选择"></a>索引列的顺序的选择</h3><table><thead><tr><th>规范</th><th>原因</th></tr></thead><tbody><tr><td>1. 区分度最高的列放在联合索引的最左侧</td><td>区分度=列中不同值的数量/列的总行数</td></tr><tr><td>2. 尽量把字段长度小的列放在联合索引的最左侧</td><td>字段长度越小，一页能存储的数据量越大，IO性能也就越好</td></tr><tr><td>3. 使用最频繁的列放到联合索引的左侧</td><td>以比较少的建立一些索引</td></tr></tbody></table><h2 id="4-主键的设计-暂时未知完美的解决方案"><a href="#4-主键的设计-暂时未知完美的解决方案" class="headerlink" title="4. 主键的设计(暂时未知完美的解决方案)"></a>4. 主键的设计(暂时未知完美的解决方案)</h2><ol><li>InnoDB是按照主键索引顺序来组织表的,所以每个InnoDB表必须有一个主键</li><li>不使用更新频繁的列作为主键,不使用多列主键</li><li>不使用多列主键。不使用UUID、MD5、字符串列作为主键。</li><li>最好选择值的顺序是连续增长的列作为主键</li></ol><h2 id="5-数据库字段设计规范"><a href="#5-数据库字段设计规范" class="headerlink" title="5. 数据库字段设计规范"></a>5. 数据库字段设计规范</h2><table><thead><tr><th>规范</th><th>原因</th></tr></thead><tbody><tr><td>1. 优先选择符合存储需要的最小的数据类型</td><td>1. 列的字段越大，建立索引时所需要的空间也就越大差<br> 2. 将字符串转换成数字类型存储<br> 3. VARCHAR(N)的N代表的是字符数,而不是字节数<br> 4. 使用UTF8存储汉字Varchar(255)=765个字节</td></tr><tr><td>2. 避免使用TEXT,BLOB数据类型</td><td>1. Mysql内存临时表不支持TEXT、BLOB这样的大数据类型<br> 2. TEXT或BLOB类型只能使用前缀索引<br> 3. 如果一定要使用，建议把BLOB或是TEXT列分离到单独的扩展表中，查询时一定不要使用select * 而只需要取出必要的列，不需要TEXT列的数据时不要对该列进行查询</td></tr><tr><td>3. 避免使用ENUM类型</td><td>1. 修改ENUM值需要使用ALTER语句<br> 2. ENUM类型的ORDER BY操作效率低，需要额外操作<br> 3. 禁止使用数值作为ENUM的枚举值</td></tr><tr><td>4. 尽可能把所有列定义为NOT NULL</td><td>1. 索引列需要额外的空间来保存<br> 2. 进行比较和计算时要对NULL值做特别的处理</td></tr><tr><td>5. 使用TIMESTAMP或DATETIME类型存储时间</td><td>可以用日期函数进行计算和比较</td></tr><tr><td>6. 同财务相关的金额类数据必须使用decimal类型</td><td>在计算时不会丢失精度</td></tr></tbody></table><h2 id="6-数据库SQL开发规范"><a href="#6-数据库SQL开发规范" class="headerlink" title="6. 数据库SQL开发规范"></a>6. 数据库SQL开发规范</h2><table><thead><tr><th>规范</th><th>原因</th></tr></thead><tbody><tr><td>1. 建议使用预编译语句进行数据库操作</td><td>预编译语句可以重复使用这些计划，减少SQL编译所需要的时间</td></tr><tr><td>2. 避免数据类型的隐式转换</td><td>隐式转换会导致索引失效.</td></tr><tr><td>3. 充分利用表上已经存在的索引</td><td>1. 避免使用双%号的查询条件。如a like %123%，（如果无前置%,只有后置%，是可以用到列上的索引的）<br> 2. 一个SQL只能利用到复合索引中的一列进行范围查询.如：有 a,b,c列的联合索引，在查询条件中有a列的范围查询，则在b,c列上的索引将不会被用到，在定义联合索引时，如果a列要用到范围查找的话，就要把a列放到联合索引的右侧。<br> 3. 使用left join或 not exists来优化not in操作,因为not in 也通常会使用索引失效</td></tr><tr><td>4. 数据库设计时，应该要对以后扩展进行考虑</td><td></td></tr><tr><td>5. 程序连接不同的数据库使用不同的账号，禁止跨库查询</td><td>1. 为数据库迁移和分库分表留出余地<br> 2. 降低业务耦合度<br> 3. 避免权限过大而产生的安全风险</td></tr><tr><td>6. 禁止使用SELECT * 必须使用SELECT &lt;字段列表&gt; 查询</td><td>1. 消耗更多的CPU和IO以网络带宽资源<br> 2. 无法使用覆盖索引<br> 3. 可减少表结构变更带来的影响</td></tr><tr><td>7. 禁止使用不含字段列表的INSERT语句</td><td>如：insert into values (a,b,c);应使用insert into t(c1,c2,c3) values (a,b,c);</td></tr><tr><td>8. 避免使用子查询，可以把子查询优化为join操作</td><td>1. 通常子查询在in子句中，且子查询中为简单SQL(不包含union、group by、order by、limit从句)时，才可以把子查询转化为关联查询进行优化<br> 2. 子查询的结果集无法使用索引<br> 3. 特别是对于返回结果集比较大的子查询，其对查询性能的影响也就越大<br> 4. 由于子查询会产生大量的临时表也没有索引，所以会消耗过多的CPU和IO资源，产生大量的慢查询</td></tr><tr><td>9. 避免使用JOIN关联太多的表</td><td>1. 关联缓存，缓存的大小可以由join_buffer_size参数进行设置<br> 2. Mysql最多允许关联61个表，建议不超过5个</td></tr><tr><td>10. 减少同数据库的交互次数</td><td>1. 数据库更适合处理批量操作<br> 2. 合并多个相同的操作到一起，可以提高处理效率</td></tr><tr><td>11. 对应同一列进行or判断时，使用in代替or</td><td>in的值不要超过500个in操作可以更有效的利用索引，or大多数情况下很少能利用到索引。</td></tr><tr><td>12. 禁止使用order by rand 进行随机排序</td><td>会消耗大量的CPU和IO及内存资源</td></tr><tr><td>13. WHERE从句中禁止对列进行函数转换和计算</td><td>对列进行函数转换或计算时会导致无法使用索引,例如:不推荐:where date(create_time)=’20190101’. 推荐:where create_time &gt;= ‘20190101’ and create_time &lt; ‘20190102’</td></tr><tr><td>14. 在明显不会有重复值时使用UNION ALL而不是UNION</td><td>UNION ALL不会再对结果集进行去重操作,UNION会把两个结果集的所有数据放到临时表中后再进行去重操作</td></tr><tr><td>15. 拆分复杂的大SQL为多个小SQL</td><td>大SQL：逻辑上比较复杂，需要占用大量CPU进行计算的SQL<br> 一个SQL只能使用一个CPU进行计算</td></tr></tbody></table><h2 id="7-数据库操作行为规范"><a href="#7-数据库操作行为规范" class="headerlink" title="7. 数据库操作行为规范"></a>7. 数据库操作行为规范</h2><table><thead><tr><th>规范</th><th>原因</th></tr></thead><tbody><tr><td>1. 超100万行的批量写（UPDATE、DELETE、INSERT）操作，要分批多次进行操作</td><td>1. binlog日志为row格式时会产生大量的日志<br> 2. 大批量操作可能会造成严重的主从延迟<br> 3. 产生大事务操作,从而导致大量的阻塞</td></tr><tr><td>2. 对于大表使用pt-online-schema-change修改表结构</td><td>1. 避免大表修改产生的主从延迟<br> 2. 避免在对表字段进行修改时进行锁表</td></tr><tr><td>3. 禁止为程序使用的账号赋予super权限</td><td>当达到最大连接数限制时，还运行1个有super权限的用户连接super权限只能留给DBA处理问题的账号使用</td></tr><tr><td>4. 对于程序连接数据库账号，遵循权限最小原则</td><td>程序使用数据库账号只能在一个DB下使用，不准跨库<br> 程序使用的账号原则上不准有drop权限</td></tr></tbody></table><h2 id="8-逻辑设计"><a href="#8-逻辑设计" class="headerlink" title="8. 逻辑设计"></a>8. 逻辑设计</h2><h3 id="宽表模式"><a href="#宽表模式" class="headerlink" title="宽表模式"></a>宽表模式</h3><ul><li><p>将对象的所有属性存储在一个表里</p></li><li><p>存在的问题</p><ol><li>数据冗余：相同的数据在一个表中出现多次</li><li>数据更新异常：修改一行中某列的值时，用同时要修改多行数据，如：用户角色，职位等</li><li>数据插入异常：部分数据由于缺失主键信息而无法写入表中</li><li>数据删除异常： 删除某一数据时不得不删除另一个数据，如：删除类型</li></ol></li><li><p>应用场景</p><ol><li>适合存储的数据报表应用</li></ol></li></ul><h3 id="数据库设计范式"><a href="#数据库设计范式" class="headerlink" title="数据库设计范式"></a>数据库设计范式</h3><ul><li><p>第一范式：表中的所有字段都是不可再分的</p></li><li><p>第二范式：要求记录有惟一标识，即实体的惟一性，即不存在部分依赖</p></li><li><p>第三范式：表中的非主键列之间不能相互依赖</p></li></ul><h3 id="数据库反范式设计"><a href="#数据库反范式设计" class="headerlink" title="数据库反范式设计"></a>数据库反范式设计</h3><ul><li>反范式跟范式所要求的正好相反，在反范式的设计模式，我们可以允许适当的数据的冗余，用这个冗余去取操作数据时间的缩短。本质就是用空间来换取时间，把数据冗余在多个表中，当查询时可以减少或者是避免表之间的关联；</li></ul>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Msql故障处理和优化</title>
      <link href="/posts/20161927/"/>
      <url>/posts/20161927/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库访问故障处理"><a href="#数据库访问故障处理" class="headerlink" title="数据库访问故障处理"></a>数据库访问故障处理</h1><h3 id="Access-denied-for-user-‘root’-’xxx-xxx-xxx-xxx’-using-password-YES"><a href="#Access-denied-for-user-‘root’-’xxx-xxx-xxx-xxx’-using-password-YES" class="headerlink" title="Access denied for user ‘root’@’xxx.xxx.xxx.xxx’ (using password: YES)"></a><strong>Access denied for user ‘root’@’xxx.xxx.xxx.xxx’ (using password: YES)</strong></h3><ol><li><p>密码不正确</p></li><li><p>未对IP进行授权,<code>%</code>不包含<code>localhost</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> 账户名@<span class="string">'%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'账户密码'</span>;</span><br></pre></td></tr></table></figure></li><li><p>网络是否畅通</p></li></ol><h3 id="ERROR-1153-08S01-at-line-38-Got-a-packet-bigger-than-‘max-allowed-packet’-bytes"><a href="#ERROR-1153-08S01-at-line-38-Got-a-packet-bigger-than-‘max-allowed-packet’-bytes" class="headerlink" title="ERROR 1153 (08S01) at line 38: Got a packet bigger than ‘max_allowed_packet’ bytes"></a><strong>ERROR 1153 (08S01) at line 38: Got a packet bigger than ‘max_allowed_packet’ bytes</strong></h3><ul><li><p>问题原因:<code>Mysql</code>接收数据包问题</p></li><li><p>解决方法:</p><ol><li><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vi /etc/my.cnf</span><br><span class="line"><span class="comment"># 在最后添加一行：</span></span><br><span class="line">max_allowed_packet=16M</span><br></pre></td></tr></table></figure></li><li><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql命令行执行命令</span></span><br><span class="line"><span class="comment"># 单位是字节,这里设置位置16M</span></span><br><span class="line"><span class="keyword">SET</span> PERSIST max_allowed_packet=<span class="number">16</span>*<span class="number">1024</span>*<span class="number">1024</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><h1 id="Sql优化"><a href="#Sql优化" class="headerlink" title="Sql优化"></a>Sql优化</h1><h2 id="Sql改写优化"><a href="#Sql改写优化" class="headerlink" title="Sql改写优化"></a>Sql改写优化</h2><ul><li>使用<code>outer join</code>代替<code>not in</code></li><li>使用<code>CTE</code>代替子查询 (版本要求:<code>Mysql8.0</code>)</li><li>拆分复杂的大<code>SQL</code>为多个简单的小<code>SQL</code></li></ul><h2 id="分页查询优化案例"><a href="#分页查询优化案例" class="headerlink" title="分页查询优化案例"></a>分页查询优化案例</h2><h3 id="方案1"><a href="#方案1" class="headerlink" title="方案1"></a>方案1</h3><ul><li><p>未优化前 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> customer_id,title,<span class="keyword">content</span> <span class="keyword">FROM</span> <span class="string">'product_comment'</span></span><br><span class="line"><span class="keyword">WHERE</span> audit_status =<span class="number">1</span> <span class="keyword">AND</span> product_id = <span class="number">199726</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">5</span></span><br></pre></td></tr></table></figure></li><li><p>优化版的 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> t.customer_id,t.title,t.content <span class="keyword">FROM</span> </span><br><span class="line">(</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="string">'comment_id'</span></span><br><span class="line">    <span class="keyword">FROM</span> product_comment</span><br><span class="line">    <span class="keyword">WHERE</span> product_id=<span class="number">199727</span> <span class="keyword">AND</span> audit_status=l <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">15</span> </span><br><span class="line">) a <span class="keyword">JOIN</span> product_comment t </span><br><span class="line">    <span class="keyword">ON</span> a.comment_id = t.comment_id:</span><br></pre></td></tr></table></figure></li></ul><h2 id="分区间统计"><a href="#分区间统计" class="headerlink" title="分区间统计"></a>分区间统计</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">IFNULL</span>(total_money,<span class="number">0</span>) &gt;= <span class="number">1000</span> <span class="keyword">THEN</span> a.customer_id <span class="keyword">END</span>) <span class="keyword">AS</span> <span class="string">'大于1000'</span></span><br><span class="line">,<span class="keyword">COUNT</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">IFNULL</span>(total_money,<span class="number">0</span>) &gt;= <span class="number">800</span> <span class="keyword">THEN</span> a.customer_id <span class="keyword">END</span>) <span class="keyword">AS</span> <span class="string">'800-1000'</span></span><br><span class="line">,<span class="keyword">COUNT</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">IFNULL</span>(total_money,<span class="number">0</span>) &gt;= <span class="number">500</span> <span class="keyword">THEN</span> a.customer_id <span class="keyword">END</span>) <span class="keyword">AS</span> <span class="string">'500-800'</span></span><br><span class="line">,<span class="keyword">COUNT</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">IFNULL</span>(total_money,<span class="number">0</span>) &lt; <span class="number">500</span> <span class="keyword">THEN</span> a.customer_id <span class="keyword">END</span>) <span class="keyword">AS</span> <span class="string">'小于500'</span></span><br><span class="line"><span class="keyword">FROM</span> mc_userdb.customer_login a</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span></span><br><span class="line">(<span class="keyword">SELECT</span> customer_id,<span class="keyword">SUM</span>(order_money) <span class="keyword">AS</span> total_money <span class="keyword">FROM</span> mc_orderdb.order_master <span class="keyword">GROUP</span> <span class="keyword">BY</span> customer_id) b</span><br><span class="line"><span class="keyword">ON</span> a.customer_id=b.customer_id</span><br></pre></td></tr></table></figure><h1 id="SQL执行计划"><a href="#SQL执行计划" class="headerlink" title="SQL执行计划"></a>SQL执行计划</h1><ul><li>如何查看sql的执行计划</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN</span><br><span class="line">[SQL语句]</span><br><span class="line"></span><br><span class="line"># 例如:</span><br><span class="line">EXPLAIN</span><br><span class="line">SELECT * FROM &apos;user_info&apos; WHERE user_id=2</span><br></pre></td></tr></table></figure><h2 id="执行计划返回的结果解析"><a href="#执行计划返回的结果解析" class="headerlink" title="执行计划返回的结果解析"></a>执行计划返回的结果解析</h2><h3 id="id列"><a href="#id列" class="headerlink" title="id列"></a>id列</h3><ul><li>id列中的数据为一组数字,表示执行SELECT语句的顺序</li><li>id值相同时,执行顺序由上至下</li><li>id值越大优先级越高,越先被执行</li></ul><h3 id="select-type"><a href="#select-type" class="headerlink" title="select_type"></a>select_type</h3><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>SIMPLE</td><td>不包含子查询或是UNION操作的查询</td></tr><tr><td>PRIMARY</td><td>查询中如果包含任何子查询,那么最外层的查询则标记为PRIMARY</td></tr><tr><td>SUBQUERY</td><td>SELECT列表中的子查询</td></tr><tr><td>DEPENDENT SUBQUERY</td><td>依赖外部结果的子查询</td></tr><tr><td>UNION RESULT</td><td>UNION产生的结果集</td></tr><tr><td>DERIVED</td><td>出现在FROM字句中的子查询</td></tr><tr><td>UNION</td><td>UNION操作的第二个或是之后的查询的值为union</td></tr><tr><td>DERIVED</td><td>出现在FROM字句中的子查询</td></tr></tbody></table><h3 id="table"><a href="#table" class="headerlink" title="table"></a>table</h3><ul><li>输出数据行所在的表的名称</li><li>&lt;unionM,N&gt;由ID为M,N查询union产生的结果集</li><li><derivedn>/<subqueryn>由id为N的查询产生的结果</subqueryn></derivedn></li></ul><h3 id="type"><a href="#type" class="headerlink" title="type"></a>type</h3><table><thead><tr><th>值(性能由高到低)</th><th>含义</th></tr></thead><tbody><tr><td>system</td><td>这是const联接类型的一个特例,当查询的表只有一行时使用</td></tr><tr><td>const</td><td>表中有且只有一个匹配的行时使用,如对主键或是唯一索引的查询,这是效率最高的联接方式</td></tr><tr><td>eq_ref</td><td>唯一索引或主键查找,对于每个索引建,表中只有一条记录与之匹配</td></tr><tr><td>ref</td><td>非唯一索引查找,返回匹配某个单独值的所有行</td></tr><tr><td>ref_or_null</td><td>类似ref类型的查询,但是附加了对NULL值列的查询</td></tr><tr><td>index_merge</td><td>该联接类型表示使用了索引合并优化方法</td></tr><tr><td>range</td><td>索引范围扫描,常见于between,&gt;,&lt;这里的查询条件</td></tr><tr><td>index</td><td>FULL index Scan全索引扫描,同ALL的区别是,遍历的是索引树</td></tr><tr><td>ALL</td><td>FULL TABLE Scan 全表扫描,这是效率最差的联接方式</td></tr></tbody></table><h3 id="extra"><a href="#extra" class="headerlink" title="extra"></a>extra</h3><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>Distinct</td><td>优化distinct操作,在找到第一匹配的元组后即停止找同样值的动作</td></tr><tr><td>Not exists</td><td>使用not exists来优化查询</td></tr><tr><td>Using filesort</td><td>使用额外操作进行排序,通常会出现在order by或group by查询中</td></tr><tr><td>Using index</td><td>使用了覆盖索引进行查询</td></tr><tr><td>Using temporary</td><td>mysql需要使用临时表来处理查询,常见于排序,子查询和分组查询</td></tr><tr><td>Using where</td><td>需要在mysql服务器层使用where条件来过滤数据</td></tr><tr><td>select tables optimized away</td><td>直接通过索引来获得数据,不用访问表</td></tr></tbody></table><h3 id="possible-keys"><a href="#possible-keys" class="headerlink" title="possible_keys"></a>possible_keys</h3><ul><li>指出mysql能使用那些索引来优化查询</li><li>查询列所涉及到的列上的索引都会被列出但不一定被使用</li></ul><h3 id="key"><a href="#key" class="headerlink" title="key"></a>key</h3><ul><li>查询优化器优化查询实际所使用的索引</li><li>如果没有可用的索引,则显示为Null</li><li>如果查询使用了覆盖索引,则该索引仅出现在key列中</li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><table><thead><tr><th>值</th><th>含义</th></tr></thead><tbody><tr><td>possible_keys</td><td>1. 指出mysql能使用那些索引来优化查询 2. 查询列所涉及到的列上的索引都会被列出但不一定被使用</td></tr><tr><td>ref</td><td>表示那些列或常量被用查找索引列上的值</td></tr><tr><td>key_len</td><td>1. 表示索引字段的最大可能长度 2. key_len的长度由字段定义计算而来,并非数据的实际长度</td></tr><tr><td>partitions</td><td>1. 对于分区表,显示查询的分区Id 2. 对于非分区表,显示为NULL</td></tr><tr><td>rows</td><td>表示mysql通过索引统计信息,估算的所需读取的行数 rows值的大小是个统计抽样结果,并不十分准确</td></tr><tr><td>filtered</td><td>表示返回结果的行数占需读取行数的百分比 值越大越好 依赖统计信息的</td></tr></tbody></table><h2 id="执行计划的限制"><a href="#执行计划的限制" class="headerlink" title="执行计划的限制"></a>执行计划的限制</h2><ul><li>无法展示存储过程,触发器,udf对查询的影响</li><li>无法使用explain对存储过程进行分析</li><li>早期版本的mysql只支持select语句进行分析</li></ul><h2 id="mysql捕获有问题的sql-慢查询日志"><a href="#mysql捕获有问题的sql-慢查询日志" class="headerlink" title="mysql捕获有问题的sql (慢查询日志)"></a>mysql捕获有问题的sql (慢查询日志)</h2><ol><li>启动mysql慢查日志</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置日志存储位置</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> slow_query_log_file = /sql_log/show_log.log;</span><br><span class="line"><span class="comment"># 记录未使用索引的sql日志 </span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> log_queries_not_using_indexes = <span class="keyword">on</span>;</span><br><span class="line"><span class="comment"># 抓取执行超过多少时间的sql(秒)</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> long_query_time = <span class="number">0.001</span>;</span><br><span class="line"><span class="comment"># 启动慢查询日志</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> low_query_log = <span class="keyword">on</span>;</span><br></pre></td></tr></table></figure><ol><li>分析慢查询日志</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldumpslow [日志位置/日志名称]</span><br><span class="line"><span class="comment"># mysqldumpslow slow-mysql.log</span></span><br></pre></td></tr></table></figure><h1 id="阻塞"><a href="#阻塞" class="headerlink" title="阻塞"></a>阻塞</h1><ul><li>由于不同锁之间的兼容关系,造成一个事务需要等待另一个事务释放其所占用的资源现象</li><li>阻塞查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> p2.<span class="string">`host`</span>                                                    Blockedhost, </span><br><span class="line">       p2.<span class="string">`user`</span>                                                    BlockedUser, </span><br><span class="line">       r.trx_id                                                     BlockedTrxId </span><br><span class="line">       , </span><br><span class="line">       r.trx_mysql_thread_id </span><br><span class="line">       BlockedThreadId, </span><br><span class="line">       <span class="keyword">Timestampdiff</span>(<span class="keyword">second</span>, r.trx_wait_started, <span class="keyword">CURRENT_TIMESTAMP</span>) WaitTime, </span><br><span class="line">       r.trx_query                                                  BlockedQuery </span><br><span class="line">       , </span><br><span class="line">       l.lock_table </span><br><span class="line">       BlockedTable, </span><br><span class="line">       m.<span class="string">`lock_mode`</span> </span><br><span class="line">       BlockedLockMode, </span><br><span class="line">       m.<span class="string">`lock_type`</span> </span><br><span class="line">       BlockedLockType, </span><br><span class="line">       m.<span class="string">`lock_index`</span> </span><br><span class="line">       BlockedLockIndex, </span><br><span class="line">       m.<span class="string">`lock_space`</span> </span><br><span class="line">       BlockedLockSpace, </span><br><span class="line">       m.lock_page </span><br><span class="line">       BlockedLockPage, </span><br><span class="line">       m.lock_rec </span><br><span class="line">       BlockedLockRec, </span><br><span class="line">       m.lock_data </span><br><span class="line">       BlockedLockData, </span><br><span class="line">       p.<span class="string">`host`</span> </span><br><span class="line">       blocking_host, </span><br><span class="line">       p.<span class="string">`user`</span> </span><br><span class="line">       blocking_user, </span><br><span class="line">       b.trx_id </span><br><span class="line">       BlockingTrxid, </span><br><span class="line">       b.trx_mysql_thread_id </span><br><span class="line">       BlockingThreadId, </span><br><span class="line">       b.trx_query </span><br><span class="line">       BlockingQuery, </span><br><span class="line">       l.<span class="string">`lock_mode`</span> </span><br><span class="line">       BlockingLockMode, </span><br><span class="line">       l.<span class="string">`lock_type`</span> </span><br><span class="line">       BlockingLockType, </span><br><span class="line">       l.<span class="string">`lock_index`</span> </span><br><span class="line">       BlockingLockIndex, </span><br><span class="line">       l.<span class="string">`lock_space`</span> </span><br><span class="line">       BlockingLockSpace, </span><br><span class="line">       l.lock_page </span><br><span class="line">       BlockingLockPage, </span><br><span class="line">       l.lock_rec </span><br><span class="line">       BlockingLockRec, </span><br><span class="line">       l.lock_data </span><br><span class="line">       BlockingLockData, </span><br><span class="line">       <span class="keyword">IF</span> (p.command = <span class="string">'Sleep'</span>, <span class="keyword">Concat</span>(p.time, <span class="string">' seconds'</span>), <span class="number">0</span>)      idel_in_trx </span><br><span class="line"><span class="keyword">FROM</span>   information_schema.innodb_lock_waits w </span><br><span class="line">       <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema.innodb_trx b </span><br><span class="line">               <span class="keyword">ON</span> b.trx_id = w.blocking_trx_id </span><br><span class="line">       <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema.innodb_trx r </span><br><span class="line">               <span class="keyword">ON</span> r.trx_id = w.requesting_trx_id </span><br><span class="line">       <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema.innodb_locks l </span><br><span class="line">               <span class="keyword">ON</span> w.blocking_lock_id = l.lock_id </span><br><span class="line">                  <span class="keyword">AND</span> l.<span class="string">`lock_trx_id`</span> = b.<span class="string">`trx_id`</span> </span><br><span class="line">       <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema.innodb_locks m </span><br><span class="line">               <span class="keyword">ON</span> m.<span class="string">`lock_id`</span> = w.<span class="string">`requested_lock_id`</span> </span><br><span class="line">                  <span class="keyword">AND</span> m.<span class="string">`lock_trx_id`</span> = r.<span class="string">`trx_id`</span> </span><br><span class="line">       <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema. <span class="keyword">processlist</span> p </span><br><span class="line">               <span class="keyword">ON</span> p.id = b.trx_mysql_thread_id </span><br><span class="line">       <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema. <span class="keyword">processlist</span> p2 </span><br><span class="line">               <span class="keyword">ON</span> p2.id = r.trx_mysql_thread_id </span><br><span class="line"><span class="keyword">ORDER</span>  <span class="keyword">BY</span> waittime <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><ul><li>阻塞查询语义版</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>    </span><br><span class="line">p2.<span class="string">`HOST`</span> <span class="keyword">AS</span> <span class="string">'被阻塞方host'</span>,</span><br><span class="line">p2.<span class="string">`USER`</span> <span class="keyword">AS</span> <span class="string">'被阻塞方用户'</span>,</span><br><span class="line">r.trx_id <span class="keyword">AS</span> <span class="string">'被阻塞方事务id'</span>,    </span><br><span class="line">        r.trx_mysql_thread_id <span class="keyword">AS</span> <span class="string">'被阻塞方线程号'</span>,    </span><br><span class="line">        <span class="keyword">TIMESTAMPDIFF</span>(    </span><br><span class="line">            <span class="keyword">SECOND</span>,    </span><br><span class="line">            r.trx_wait_started,    </span><br><span class="line">            <span class="keyword">CURRENT_TIMESTAMP</span>    </span><br><span class="line">        ) <span class="keyword">AS</span> <span class="string">'等待时间'</span>,    </span><br><span class="line">        r.trx_query <span class="keyword">AS</span> <span class="string">'被阻塞的查询'</span>,    </span><br><span class="line">        l.lock_table <span class="keyword">AS</span> <span class="string">'阻塞方锁住的表'</span>,  </span><br><span class="line">        m.<span class="string">`lock_mode`</span> <span class="keyword">AS</span> <span class="string">'被阻塞方的锁模式'</span>,</span><br><span class="line">        m.<span class="string">`lock_type`</span> <span class="keyword">AS</span> <span class="string">'被阻塞方的锁类型(表锁还是行锁)'</span>,</span><br><span class="line">        m.<span class="string">`lock_index`</span> <span class="keyword">AS</span> <span class="string">'被阻塞方锁住的索引'</span>,</span><br><span class="line">        m.<span class="string">`lock_space`</span> <span class="keyword">AS</span> <span class="string">'被阻塞方锁对象的space_id'</span>,</span><br><span class="line">        m.lock_page <span class="keyword">AS</span> <span class="string">'被阻塞方事务锁定页的数量'</span>,</span><br><span class="line">        m.lock_rec <span class="keyword">AS</span> <span class="string">'被阻塞方事务锁定行的数量'</span>,</span><br><span class="line">        m.lock_data <span class="keyword">AS</span> <span class="string">'被阻塞方事务锁定记录的主键值'</span>, </span><br><span class="line">        p.<span class="string">`HOST`</span> <span class="keyword">AS</span> <span class="string">'阻塞方主机'</span>, </span><br><span class="line">        p.<span class="string">`USER`</span> <span class="string">'阻塞方用户'</span>,</span><br><span class="line">        b.trx_id <span class="keyword">AS</span> <span class="string">'阻塞方事务id'</span>,    </span><br><span class="line">        b.trx_mysql_thread_id <span class="keyword">AS</span> <span class="string">'阻塞方线程号'</span>,</span><br><span class="line">        b.trx_query <span class="keyword">AS</span> <span class="string">'阻塞方查询'</span>,</span><br><span class="line">        l.<span class="string">`lock_mode`</span> <span class="keyword">AS</span> <span class="string">'阻塞方的锁模式'</span>,</span><br><span class="line">        l.<span class="string">`lock_type`</span> <span class="keyword">AS</span> <span class="string">'阻塞方的锁类型(表锁还是行锁)'</span>,</span><br><span class="line">        l.<span class="string">`lock_index`</span> <span class="keyword">AS</span> <span class="string">'阻塞方锁住的索引'</span>,</span><br><span class="line">        l.<span class="string">`lock_space`</span> <span class="keyword">AS</span> <span class="string">'阻塞方锁对象的space_id'</span>,</span><br><span class="line">        l.lock_page <span class="keyword">AS</span> <span class="string">'阻塞方事务锁定页的数量'</span>,</span><br><span class="line">        l.lock_rec <span class="keyword">AS</span> <span class="string">'阻塞方事务锁定行的数量'</span>,</span><br><span class="line">        l.lock_data <span class="keyword">AS</span> <span class="string">'阻塞方事务锁定记录的主键值'</span>,         </span><br><span class="line">       <span class="keyword">IF</span> (p.COMMAND = <span class="string">'Sleep'</span>, <span class="keyword">CONCAT</span>(p.TIME,<span class="string">' seconds'</span>), <span class="number">0</span>) <span class="keyword">AS</span> <span class="string">'阻塞方事务空闲的时间'</span>             </span><br><span class="line">    <span class="keyword">FROM</span>    </span><br><span class="line">        information_schema.INNODB_LOCK_WAITS w    </span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema.INNODB_TRX b <span class="keyword">ON</span> b.trx_id = w.blocking_trx_id    </span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema.INNODB_TRX r <span class="keyword">ON</span> r.trx_id = w.requesting_trx_id    </span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema.INNODB_LOCKS l <span class="keyword">ON</span> w.blocking_lock_id = l.lock_id  <span class="keyword">AND</span> l.<span class="string">`lock_trx_id`</span>=b.<span class="string">`trx_id`</span></span><br><span class="line">      <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema.INNODB_LOCKS m <span class="keyword">ON</span> m.<span class="string">`lock_id`</span>=w.<span class="string">`requested_lock_id`</span> <span class="keyword">AND</span> m.<span class="string">`lock_trx_id`</span>=r.<span class="string">`trx_id`</span></span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema. <span class="keyword">PROCESSLIST</span> p <span class="keyword">ON</span> p.ID = b.trx_mysql_thread_id   </span><br><span class="line"> <span class="keyword">INNER</span> <span class="keyword">JOIN</span> information_schema. <span class="keyword">PROCESSLIST</span> p2 <span class="keyword">ON</span> p2.ID = r.trx_mysql_thread_id </span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span>    </span><br><span class="line">        <span class="string">'等待时间'</span> <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><ul><li>如果只有语句出现<code>[Err] 3167 - The ‘INFORMATION_SCHEMA.GLOBAL_STATUS’ feature is disabled; see the documentation for ‘show_compatibility_56’</code></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> show_compatibility_56=<span class="keyword">on</span>; </span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%show_compatibility_56%'</span>;</span><br><span class="line">+<span class="comment">-----------------------+-------+</span></span><br><span class="line">| Variable_name         | Value |</span><br><span class="line">+<span class="comment">-----------------------+-------+</span></span><br><span class="line">| show_compatibility_56 | ON    |</span><br><span class="line">+<span class="comment">-----------------------+-------+</span></span><br></pre></td></tr></table></figure><h1 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h1><ul><li>并行执行的多个事务相互占有了对方所需要的资源</li><li>方法1:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 1.查询是否锁表</span><br><span class="line">show OPEN TABLES where In_use &gt; 0;</span><br><span class="line"></span><br><span class="line"># 2.查询进程（如果您有SUPER权限，您可以看到所有线程。否则，您只能看到您自己的线程）</span><br><span class="line">show processlist</span><br><span class="line"></span><br><span class="line"># 3.杀死进程id（就是上面命令的id列）</span><br><span class="line">kill id</span><br></pre></td></tr></table></figure><ul><li>方法2:</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.查看下在锁的事务 </span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> INFORMATION_SCHEMA.INNODB_TRX;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.杀死进程id（就是上面命令的trx_mysql_thread_id列）</span></span><br><span class="line"><span class="keyword">kill</span> 线程<span class="keyword">ID</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 例子：</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查出死锁进程：SHOW PROCESSLIST</span></span><br><span class="line"><span class="comment"># 杀掉进程          KILL 420821;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#其它关于查看死锁的命令：</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1：查看当前的事务</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> INFORMATION_SCHEMA.INNODB_TRX;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2：查看当前锁定的事务</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> INFORMATION_SCHEMA.INNODB_LOCKS;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3：查看当前等锁的事务</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> INFORMATION_SCHEMA.INNODB_LOCK_WAITS;</span><br></pre></td></tr></table></figure><ul><li><p>方法3:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将死锁写入到错误日志中</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> <span class="keyword">innodb</span>-print_all-deadlocks=<span class="keyword">on</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="死锁监控"><a href="#死锁监控" class="headerlink" title="死锁监控"></a>死锁监控</h2><ul><li>使用pt工具</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt-deadlock-logger u=[用户名],p=[密码],h=127.0.0.1 --create-dest-table --dest u=[用户名],p=[密码],h=127.0.0.1,D=crn,t=deadlock</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mysql基本运维知识总结</title>
      <link href="/posts/b60c2e78/"/>
      <url>/posts/b60c2e78/</url>
      
        <content type="html"><![CDATA[<h1 id="Mysql参数查询"><a href="#Mysql参数查询" class="headerlink" title="Mysql参数查询"></a>Mysql参数查询</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方法1. select @@[参数名]</span><br><span class="line">方法2. show variables like [参数名]%</span><br></pre></td></tr></table></figure><h1 id="Mysql版本的问题"><a href="#Mysql版本的问题" class="headerlink" title="Mysql版本的问题"></a>Mysql版本的问题</h1><h2 id="Mysql的发行版有哪些"><a href="#Mysql的发行版有哪些" class="headerlink" title="Mysql的发行版有哪些"></a>Mysql的发行版有哪些</h2><ul><li>Mysql官方版本(社区版,企业版)</li><li>Percona Mysql<ol><li>与mysql官方版本兼容</li><li>具有mysql企业版的功能</li><li>性能比社区版的好</li><li>版本会比mysql官方版落后</li></ol></li><li>MariaDB<ol><li>不完全兼容mysql官方版本</li></ol></li></ul><h2 id="各个发行版本之间的区别"><a href="#各个发行版本之间的区别" class="headerlink" title="各个发行版本之间的区别"></a>各个发行版本之间的区别</h2><h3 id="服务器特性"><a href="#服务器特性" class="headerlink" title="服务器特性"></a>服务器特性</h3><table><thead><tr><th>特性</th><th>Mysql</th><th>Percona Mysql</th><th>MariaDB</th></tr></thead><tbody><tr><td>是否开源</td><td>开源</td><td>开源</td><td>开源</td></tr><tr><td>是否支持分区表</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>使用的引擎</td><td>InnoDB</td><td>XtraDB</td><td>XtraDB</td></tr><tr><td>运维监控工具</td><td>企业版提供,社区版不提供</td><td>Percon Monitor工具</td><td>Monyog</td></tr></tbody></table><h3 id="高可用特性"><a href="#高可用特性" class="headerlink" title="高可用特性"></a>高可用特性</h3><table><thead><tr><th>Mysql</th><th>Percona Mysql</th><th>MariaDB</th></tr></thead><tbody><tr><td>基于日志点复制</td><td>基于日志点复制</td><td>基于日志点复制</td></tr><tr><td>基于Gtid复制</td><td>基于Gtid复制</td><td>基于Gtid复制,但Gtid同Mysql不兼容</td></tr><tr><td>MGR</td><td>MGR &amp; PXC</td><td>Galera Cluster</td></tr><tr><td>Mysql Router</td><td>Proxy SQL</td><td>MaxScale</td></tr></tbody></table><h3 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h3><table><thead><tr><th>Mysql</th><th>Percona Mysql</th><th>MariaDB</th></tr></thead><tbody><tr><td>企业版防火墙</td><td>ProxySQL FireWall</td><td>MaxScale FireWall</td></tr><tr><td>企业版用户审计</td><td>审计日志</td><td>审计日志</td></tr><tr><td>用户密码生命周期</td><td>用户密码生命周期</td><td>-</td></tr><tr><td>sha256_passwordcaching_sha2_password</td><td>sha256_passwordcaching_sha2_password</td><td>ed25519sha256_password</td></tr></tbody></table><h3 id="开发及管理"><a href="#开发及管理" class="headerlink" title="开发及管理"></a>开发及管理</h3><table><thead><tr><th>Mysql</th><th>Percona Mysql</th><th>MariaDB</th></tr></thead><tbody><tr><td>窗口函数(8.0)</td><td>窗口函数(8.0)</td><td>窗口函数(10.2)</td></tr><tr><td>-</td><td>-</td><td>支持基于日志回滚</td></tr><tr><td>-</td><td>-</td><td>支持记在表中记录修改</td></tr><tr><td>Super read_only</td><td>Super read_only</td><td>-</td></tr></tbody></table><h2 id="Mysql8-0版本的新特性"><a href="#Mysql8-0版本的新特性" class="headerlink" title="Mysql8.0版本的新特性"></a>Mysql8.0版本的新特性</h2><h3 id="服务器功能"><a href="#服务器功能" class="headerlink" title="服务器功能"></a>服务器功能</h3><ul><li>所有元数据使用InnoDB引擎存储,无frm文件</li><li>系统表采用InnoDB存储并采用独立表空间</li><li>支持定义资源管理资源组(目前仅支持CPU(2019-01-22))</li><li>支持不可见索引和降序索引,支持直方图优化</li><li>支持窗口函数</li><li>支持在线修改全局参数持久化</li></ul><h3 id="用户及安全"><a href="#用户及安全" class="headerlink" title="用户及安全"></a>用户及安全</h3><ul><li>默认使用caching_sha2_password认证插件</li><li>新增支持定义角色(role)</li><li>新增密码历史记录功能,限制重复使用密码</li></ul><h3 id="InnoDB功能"><a href="#InnoDB功能" class="headerlink" title="InnoDB功能"></a>InnoDB功能</h3><ul><li>InnoDB DDL语句支持原子操作</li><li>支持在线修改UNDO表空间</li><li>新增管理视图用于监控InnoDB表状态</li><li>新增innodb_dedicated_server配置项</li></ul><h1 id="Mysql升级的问题"><a href="#Mysql升级的问题" class="headerlink" title="Mysql升级的问题"></a>Mysql升级的问题</h1><h2 id="升级前需要考虑的问题"><a href="#升级前需要考虑的问题" class="headerlink" title="升级前需要考虑的问题"></a>升级前需要考虑的问题</h2><ol><li>升级可以给业务带来的益处</li><li>升级可能对业务带来的影响</li><li>数据库升级方案的制定</li><li>升级失败的回滚方案</li></ol><h3 id="1-升级可以给业务带来的益处"><a href="#1-升级可以给业务带来的益处" class="headerlink" title="1. 升级可以给业务带来的益处"></a>1. 升级可以给业务带来的益处</h3><ul><li>是否可以解决业务上某一方面的痛点</li><li>是否可以解决运维上某一方面的痛点</li></ul><h3 id="2-升级可能对业务带来的影响"><a href="#2-升级可能对业务带来的影响" class="headerlink" title="2. 升级可能对业务带来的影响"></a>2. 升级可能对业务带来的影响</h3><ul><li>对原业务程序的支持是否有影响</li><li>对原业务程序的性能是否有影响</li></ul><h3 id="3-数据库升级方案的制定"><a href="#3-数据库升级方案的制定" class="headerlink" title="3. 数据库升级方案的制定"></a>3. 数据库升级方案的制定</h3><ul><li>评估受影响的业务系统</li><li>升级的详细步骤</li><li>升级后的数据库环境检查</li><li>升级后的业务检查</li></ul><h3 id="4-升级失败的回滚方案"><a href="#4-升级失败的回滚方案" class="headerlink" title="4. 升级失败的回滚方案"></a>4. 升级失败的回滚方案</h3><ul><li>升级失败回滚的步骤</li><li>回滚后的数据库环境检查</li><li>回滚后的业务检查</li></ul><h1 id="Mysql用户管理的问题"><a href="#Mysql用户管理的问题" class="headerlink" title="Mysql用户管理的问题"></a>Mysql用户管理的问题</h1><h2 id="Mysql数据库账户定义"><a href="#Mysql数据库账户定义" class="headerlink" title="Mysql数据库账户定义"></a>Mysql数据库账户定义</h2><ul><li>用户名@可访问控制列表<ol><li>可访问控制列表 <ul><li>%: 代表可以从所有外部主机访问</li><li>192.168.1.%: 表示可以从192.168.1 网段访问</li><li>localhost: DB服务器本地访问</li></ul></li></ol></li><li>使用<code>Create User</code>命令建立用户 (<code>\h Create User</code>查看帮助)</li></ul><h2 id="Mysql常用的用户权限"><a href="#Mysql常用的用户权限" class="headerlink" title="Mysql常用的用户权限"></a>Mysql常用的用户权限</h2><ul><li><p>Admin</p><ol><li>Create User : 建立新的用户的权限</li><li>Grant option : 为其他用户授权的权限</li><li>Super : 管理服务器的权限</li></ol></li><li><p>DDL</p><ol><li>Create : 新建数据库,表的权限</li><li>Alter : 修改表结构的权限</li><li>Drop : 删除数据库和表的权限</li><li>Index : 建立和删除索引的权限</li></ol></li><li><p>DML</p><ol><li>Select : 查询表中数据的权限</li><li>Insert : 向表中插入数据的权限</li><li>Update : 更新表中数据的权限</li><li>delete : 删除表中数据的权限</li><li>Execute : 执行存储过程的权限</li></ol></li></ul><h2 id="如何为用户授权"><a href="#如何为用户授权" class="headerlink" title="如何为用户授权"></a>如何为用户授权</h2><ul><li>遵循最小权限原则</li><li>使用Grant命令对用户授权<ol><li>授权:<code>grant Select,insert,update,delete on [数据库名].[表名(*全部表)] to user@ip;</code></li><li>收回:<code>revoke delete on [数据库名].[表名(*全部表)] from user@ip;</code></li></ol></li></ul><h2 id="如何保证数据账户的安全"><a href="#如何保证数据账户的安全" class="headerlink" title="如何保证数据账户的安全"></a>如何保证数据账户的安全</h2><ul><li>数据库用户管理流程规范<ol><li>最小权限原则</li><li>密码强度策略</li><li>密码过期原则</li><li>限制历史密码重用原则</li></ol></li></ul><h2 id="迁移数据库账户"><a href="#迁移数据库账户" class="headerlink" title="迁移数据库账户"></a>迁移数据库账户</h2><ul><li>导出用户建立及授权语句<ol><li><code>pt-show-grants u=root,p=123456,h=localhost</code></li></ol></li></ul><h2 id="用户管理问题"><a href="#用户管理问题" class="headerlink" title="用户管理问题"></a>用户管理问题</h2><p><strong>问题1: Access denied for user ‘root’@’xxx.xxx.xxx.xxx’ (using password: YES)</strong></p><p>问题原因:账户无法外网访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to 账户名@&apos;%&apos; identified by &apos;账户密码&apos;;</span><br></pre></td></tr></table></figure><h1 id="Mysql服务器配置的问题"><a href="#Mysql服务器配置的问题" class="headerlink" title="Mysql服务器配置的问题"></a>Mysql服务器配置的问题</h1><h2 id="SQL-MODE"><a href="#SQL-MODE" class="headerlink" title="SQL_MODE"></a>SQL_MODE</h2><ul><li>配置Mysql处理Sql的方式</li><li>set [session/global/persist] sql_mode=’xxxxx’</li><li>[mysqld] sql_mode=xxxx</li><li>查看当前sql_mode的设置:<code>show variables like &#39;sql_mode&#39;</code></li></ul><h3 id="常用的sql-Mode"><a href="#常用的sql-Mode" class="headerlink" title="常用的sql Mode"></a>常用的sql Mode</h3><table><thead><tr><th>SQL_MODE</th><th>说明</th></tr></thead><tbody><tr><td>ONLY_FULL_GROUP_BY</td><td>对于Group By聚合操作,如果出现在Select中的列,Having或者Order By子句的非聚合列,没有在Group By中出现,那么这个sql语法检查报错</td></tr><tr><td>ANSI_QUOTES</td><td>禁止用双引号来引用字符串</td></tr><tr><td>REAL_AS_FLOAT</td><td>Real作为float的同义词</td></tr><tr><td>PIPES_AS_CONCAT</td><td>将 `</td></tr><tr><td>STRICT_TRANS_TABLES / STRICT_ALL_TABLES</td><td>在事务存储引擎 / 所有存储引擎上启用严格模式出现,那么这个sql语法检查报错</td></tr><tr><td>ERROR_FOR_DIVISION_BY_ZERO</td><td>不允许0作为除数</td></tr><tr><td>NO_AUTO_CREATE_USER</td><td>在用户不存在时不允许grant语句自动建立应用</td></tr><tr><td>NO_ZERO_IN_DATE / NO_ZERO_DATE</td><td>日期数据内 / 日期数据不能含0</td></tr><tr><td>NO_ENGINE_SUBSTITUTION</td><td>当指定的存储引擎不可用时报错</td></tr></tbody></table><h2 id="Mysql常见的性能参数"><a href="#Mysql常见的性能参数" class="headerlink" title="Mysql常见的性能参数"></a>Mysql常见的性能参数</h2><h3 id="服务器配置参数"><a href="#服务器配置参数" class="headerlink" title="服务器配置参数"></a>服务器配置参数</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>max_connections</td><td>设置Mysql允许访问的最大连接数量</td></tr><tr><td>interactive_timeout</td><td>设置交互连接的timeout时间</td></tr><tr><td>wait_timeout</td><td>设置非交互连接的timeout时间</td></tr><tr><td>max_allowed_packet</td><td>控制mysql可以接收的数据包的大小</td></tr><tr><td>sync_binlog</td><td>表示每写多少次缓冲会向磁盘同步一次binlog</td></tr><tr><td>sort_buffer_size</td><td>设置每个会话使用的排序缓冲区的大小</td></tr><tr><td>join_bugger_size</td><td>设置每个会话使用的连接缓冲的大小</td></tr><tr><td>read_buffer_size</td><td>指定了当对一个MYISAM进行表扫描时所分配的读缓存池的大小</td></tr><tr><td>read_rnd_buffer_size</td><td>设置控制索引缓冲区的大小</td></tr><tr><td>binlog_cache_size</td><td>设置每个会话用于缓存未提交的事务缓存大小</td></tr></tbody></table><h3 id="存储引擎参数"><a href="#存储引擎参数" class="headerlink" title="存储引擎参数"></a>存储引擎参数</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>innodb_flush_log_at_trx_commit</td><td>0:每秒进行一次重做日志的磁盘刷新操作,1:每次事务提交都会刷新事务日志到磁盘中,2:每次事务提交写入系统缓存每秒向磁盘刷新一次  (默认为1)</td></tr><tr><td>innodb_buffer_pool_size</td><td>设置Innodb缓存池的大小,应为系统可用内存的75%</td></tr><tr><td>innodb_buffer_pool_instances</td><td>InnoDB缓冲池的实例个数,每个实例的大小(建议不要超过8个)</td></tr><tr><td>innodb_file_per_table</td><td>设置每个表独立使用一个表空间(建议启动)</td></tr></tbody></table><h1 id="Mysql日志类问题"><a href="#Mysql日志类问题" class="headerlink" title="Mysql日志类问题"></a>Mysql日志类问题</h1><h2 id="Mysq常用的日志类型"><a href="#Mysq常用的日志类型" class="headerlink" title="Mysq常用的日志类型"></a>Mysq常用的日志类型</h2><table><thead><tr><th>日志名称</th><th>作用</th></tr></thead><tbody><tr><td>错误日志(error_log)</td><td>记录mysql在启动,运行或停止时出现的问题</td></tr><tr><td>常规日志(general_log)</td><td>记录所有发向mysql的请求</td></tr><tr><td>慢查日志(slow_query_log)</td><td>记录符合条件的查询</td></tr><tr><td>二进制日志(binary_log)</td><td>记录全部有效的数据修改日志</td></tr><tr><td>中继日志(relay_log)</td><td>用于主从复制,临时存储从主库同步的二进制日志</td></tr></tbody></table><h2 id="错误日志-error-log"><a href="#错误日志-error-log" class="headerlink" title="错误日志(error_log)"></a>错误日志(error_log)</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>分析排除Mysql运行错误</li><li>记录未经授权的访问</li></ul><h3 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h3><ul><li><p>配置和查询参数的方法</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 配置</span><br><span class="line">set persist [参数名称]=[内容];</span><br><span class="line"># 例</span><br><span class="line">set persist log_timestamps=&apos;SYSTEM&apos;;</span><br><span class="line"></span><br><span class="line"># 查看</span><br><span class="line">select @@[参数];</span><br><span class="line">#例</span><br><span class="line">select @@log_timestamps</span><br></pre></td></tr></table></figure></li><li><p>配置日志文件的位置:log_error</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 例:</span><br><span class="line">log_error = $mysql/sql_log/mysql-error.log\</span><br><span class="line"></span><br><span class="line"># 查看日志文件位置</span><br><span class="line">select @@log_error;</span><br></pre></td></tr></table></figure></li><li><p>配置日志记录信息的级别</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 配置日志级别</span><br><span class="line">log_error_verbosity= [1,2,3]</span><br><span class="line"></span><br><span class="line"># 查看日志级别</span><br><span class="line">select @@log_error_verbosity;</span><br></pre></td></tr></table></figure><table><thead><tr><th>verbosity</th><th>作用</th></tr></thead><tbody><tr><td>1</td><td>Error messages</td></tr><tr><td>2</td><td>Eeeor and warning messages</td></tr><tr><td>3</td><td>Error,warning and note messages</td></tr></tbody></table></li><li><p>配置日志时间使用系统时间</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log_timestamps=&apos;SYSTEM&apos;</span><br><span class="line"># 查看日志时间</span><br><span class="line">select @@log_timestamps;</span><br></pre></td></tr></table></figure></li><li><p>Msql日志服务组件配置(Mysql8.0以上)</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">log_error_services=[日志服务组件;日志服务组件]</span><br><span class="line"></span><br><span class="line"># 查看日志服务组件</span><br><span class="line">select @@log_error_services;</span><br></pre></td></tr></table></figure><table><thead><tr><th>组件名称</th><th>作用</th></tr></thead><tbody><tr><td>log_filter_internal</td><td>默认的日志过滤组件,依赖log_error_verbosity</td></tr><tr><td>log_sink_internal</td><td>默认的日志输出组件,依赖log_error</td></tr><tr><td>log_sink_json</td><td>将错误日志输出到json文件</td></tr><tr><td>log_sink_syseventlog</td><td>将错误日志输出到系统日志文件</td></tr></tbody></table></li></ul><h2 id="常规日志-general-log"><a href="#常规日志-general-log" class="headerlink" title="常规日志(general_log)"></a>常规日志(general_log)</h2><h3 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h3><ul><li>分析客户端发送到Msql的实际请求</li></ul><h3 id="配置参数-1"><a href="#配置参数-1" class="headerlink" title="配置参数"></a>配置参数</h3><ul><li><p>配置和查询参数的方法</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 配置</span><br><span class="line">set global [参数名称]=[内容];</span><br><span class="line"># 例</span><br><span class="line">set global general_log=&apos;ON&apos;;</span><br><span class="line"></span><br><span class="line"># 查看</span><br><span class="line">select @@[参数];</span><br><span class="line">#例</span><br><span class="line">select @@log_timestamps</span><br></pre></td></tr></table></figure></li><li><p>日志开启和关闭(默认关闭)</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">general_log=[ON|OFF]</span><br></pre></td></tr></table></figure></li><li><p>指定日志文件地址</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">general_log_file= $mysql/sql_log/general.log</span><br></pre></td></tr></table></figure></li><li><p>日志存储的方式</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># FILE:存储到文件,TABLE:存储到数据库表中(mysql库的general_log表中)</span><br><span class="line">log_output=[FILE|TABLE|NONE]</span><br></pre></td></tr></table></figure></li></ul><h2 id="慢查日志-slow-query-log"><a href="#慢查日志-slow-query-log" class="headerlink" title="慢查日志(slow_query_log)"></a>慢查日志(slow_query_log)</h2><h3 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h3><ul><li>将执行成功并符合条件的查询记录到日志中</li><li>找的需要优化的sql</li></ul><h3 id="配置参数-2"><a href="#配置参数-2" class="headerlink" title="配置参数"></a>配置参数</h3><ul><li><p>配置和查询参数的方法</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 配置</span><br><span class="line">set global [参数名称]=[内容];</span><br><span class="line"># 例</span><br><span class="line">set global slow_query_log=&apos;ON&apos;;</span><br><span class="line"></span><br><span class="line"># 查看</span><br><span class="line">select @@[参数];</span><br><span class="line">#例</span><br><span class="line">select @@slow_query_log</span><br></pre></td></tr></table></figure></li><li><p>日志开启和关闭(默认关闭)</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slow_query_log=[ON|OFF]</span><br></pre></td></tr></table></figure></li><li><p>日志存储位置</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slow_query_log_file=$mysql/sql_log/showlog.log</span><br></pre></td></tr></table></figure></li><li><p>查询超时时间</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 单位(秒)</span><br><span class="line">long_query_time=0.001</span><br></pre></td></tr></table></figure></li><li><p>是否将没使用索引的sql记录下来(默认关闭)</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log_queries_not_using_indexes=[ON|OFF]</span><br></pre></td></tr></table></figure></li><li><p>是否记录管理数据库管理命令(默认关闭)</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log_slow_admin_statements=[ON|OFF]</span><br></pre></td></tr></table></figure></li></ul><h2 id="二进制日志-binary-log"><a href="#二进制日志-binary-log" class="headerlink" title="二进制日志(binary_log)"></a>二进制日志(binary_log)</h2><h3 id="作用-3"><a href="#作用-3" class="headerlink" title="作用"></a>作用</h3><ul><li>记录所有对数据库中数据的修改</li><li>基于时间点的备份和恢复</li><li>主从复制</li></ul><h3 id="配置参数-3"><a href="#配置参数-3" class="headerlink" title="配置参数"></a>配置参数</h3><ul><li><p>开启设置日志</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">log-bin = [base_name]</span><br></pre></td></tr></table></figure></li><li><p>日志格式(默认ROW)</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binlog_format=[ROW|STATEMENT|MIXED]</span><br></pre></td></tr></table></figure></li><li><p>日志格式记录的方式(默认FULL)</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binlog_row_image=[FULL|MINIMAL|NOBLOB]</span><br></pre></td></tr></table></figure></li><li><p>日志加入实际提交的sql(默认OFF)</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binlog_rows_query_log_events=[ON|OFF]</span><br></pre></td></tr></table></figure></li><li><p>日志清理</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 定时清理,单位(天)</span><br><span class="line">exprie_logs_days= days</span><br><span class="line"></span><br><span class="line"># 指定清理(从000到009删除)</span><br><span class="line">PURGE BINARY LOGS TO &apos;mysql-bin.010&apos;</span><br><span class="line"></span><br><span class="line"># 将指定时间之前的删除</span><br><span class="line">PURGE BINARY LOGS BEFORE &apos;2018-O9-02 13:22:21&apos;</span><br></pre></td></tr></table></figure></li></ul><h3 id="查看配置信息命令"><a href="#查看配置信息命令" class="headerlink" title="查看配置信息命令"></a>查看配置信息命令</h3><table><thead><tr><th>sql语句</th><th>作用</th></tr></thead><tbody><tr><td><code>show variables like &#39;log_bin&#39;;</code></td><td>查询binlog日志是否开启</td></tr><tr><td><code>show variables like &#39;binlog_format&#39;;</code></td><td>查看日志格式</td></tr><tr><td><code>show master logs;</code></td><td>查看所有 Binlog 的日志列表</td></tr><tr><td><code>show master status;</code></td><td>查看最后一个 Binlog 日志的编号名称，及最后一个事件结束的位置（pos）</td></tr><tr><td><code>flush logs;</code></td><td>刷新 Binlog，此刻开始产生一个新编号的 Binlog 日志文件</td></tr><tr><td><code>reset master;</code></td><td>清空所有的 Binlog 日志</td></tr><tr><td><code>show binlog events;</code></td><td>查看第一个 Binlog 日志</td></tr><tr><td><code>show binlog events in ‘binlog.000030’;</code></td><td>查看指定的 Binlog日志</td></tr><tr><td><code>show binlog events in ‘binlog.000030’ from 931;</code></td><td>从指定的位置开始，查看指定的 Binlog 日志</td></tr><tr><td><code>show binlog events in ‘binlog.000030’ from 931 limit 2;</code></td><td>从指定的位置开始，查看指定的Binlog日志，限制查询的条数</td></tr><tr><td><code>show binlog events in ‘binlog.000030’ from 931 limit 1, 2;</code></td><td>从指定的位置开始，带有偏移，查看指定的 Binlog 日志，限制查询的条数</td></tr></tbody></table><h3 id="binlog日志格式"><a href="#binlog日志格式" class="headerlink" title="binlog日志格式"></a>binlog日志格式</h3><ul><li><p>Row的日志</p><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/mysql%2Ff.png" width="500" hegiht="313" align="center"></li><li><p>statement模式</p><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/mysql%2Fg.png" width="500" hegiht="313" align="center"></li><li><p>mixed模式</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 普通操作使用statement,同步会出现问题的操作选择row格式</span><br></pre></td></tr></table></figure></li></ul><h3 id="Binlog-的-Event-类型"><a href="#Binlog-的-Event-类型" class="headerlink" title="Binlog 的 Event 类型"></a>Binlog 的 Event 类型</h3><table><thead><tr><th>Event Type</th><th>事件</th><th>重要程度</th></tr></thead><tbody><tr><td>QUERY_EVENT</td><td>与数据无关的操作， begin、drop table、truncate table 等</td><td>了解即可</td></tr><tr><td>XID_EVENT</td><td>标记事务提交</td><td>了解即可</td></tr><tr><td>TABLE_MAP_EVENT</td><td>记录下一个操作所对应的表信息，存储了数据库名和表名</td><td>非常重要</td></tr><tr><td>WRITE_ROWS_EVENT</td><td>插入数据，即 insert 操作</td><td>非常重要</td></tr><tr><td>UPDATE_ROWS_EVENT</td><td>更新数据，即 update 操作</td><td>非常重要</td></tr><tr><td>DELETE_ROWS_EVENT</td><td>删除数据，即 delete 操作</td><td>非常重要</td></tr></tbody></table><h1 id="Mysql存储引擎的问题"><a href="#Mysql存储引擎的问题" class="headerlink" title="Mysql存储引擎的问题"></a>Mysql存储引擎的问题</h1><h2 id="Mysql常用的存储引擎"><a href="#Mysql常用的存储引擎" class="headerlink" title="Mysql常用的存储引擎"></a>Mysql常用的存储引擎</h2><table><thead><tr><th>引擎名称</th><th>事务</th><th>说明</th></tr></thead><tbody><tr><td>MYISAM</td><td>N</td><td>Mysql5.6之前的默认引擎,最常用的非事务型存储引擎</td></tr><tr><td>CSV</td><td>N</td><td>以CSV格式存储的非事务型存储引擎</td></tr><tr><td>Archive</td><td>N</td><td>只允许查询和新增数据而不允许修改的非事务型存储引擎</td></tr><tr><td>Memory</td><td>N</td><td>是一种易失性非事务型存储引擎</td></tr><tr><td>InnoDB</td><td>Y</td><td>最常用的事务型存储引擎</td></tr><tr><td>NDB</td><td>Y</td><td>Mysql集群所使用的内存型事务存储引擎</td></tr></tbody></table><h2 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h2><ol><li>事务型存储引擎支持ACID</li><li>数据按主键聚集存储</li><li>支持行级锁及MVCC</li><li>支持Btree和自适应Hash索引</li><li>支持全文和空间索引</li></ol><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li>Innodb不支持在线修改表结构的场景<table><thead><tr><th>操作</th><th>语法</th></tr></thead><tbody><tr><td>加全文索引</td><td>CREATE FULLTEXT INDEX name ON table(column);</td></tr><tr><td>加空间索引</td><td>ALTER TABLE geom ADD SPATIAL INDEX(g)</td></tr><tr><td>删除主键</td><td>ALTER TABKE tbl_name DROP PRIMARY KEY</td></tr><tr><td>增加自增列</td><td>ALTER TABLE t add column id int auto_increment not null primary key</td></tr><tr><td>修改列类型</td><td>ALTER TABLE tbl_name CHANGE c1 c1 NEW_TYPE</td></tr><tr><td>改表字符集</td><td>ALTER TABLE tbl_name CHARACTER SET = charset_name</td></tr></tbody></table></li></ul><h1 id="事务和并发控制"><a href="#事务和并发控制" class="headerlink" title="事务和并发控制"></a>事务和并发控制</h1><h2 id="并发所带来的问题"><a href="#并发所带来的问题" class="headerlink" title="并发所带来的问题"></a>并发所带来的问题</h2><ul><li><p>脏读</p><p>一个事务读取了另一个事务未提交的数据</p></li><li><p>不可重复读</p><p>一个事务前后两次读取的同一数据不一致</p></li><li><p>幻读</p><p>指一个事务两次查询的结果集记录数不一致</p></li></ul><h2 id="事务的隔离性"><a href="#事务的隔离性" class="headerlink" title="事务的隔离性"></a>事务的隔离性</h2><p><strong>Innodb的隔离级别</strong></p><table><thead><tr><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th><th>隔离性</th><th>并发性</th></tr></thead><tbody><tr><td>顺序读(<code>SERIALIZABLE</code>)</td><td>N</td><td>N</td><td>N</td><td>最高</td><td>最低</td></tr><tr><td>可重复读(<code>REPEATABLE READ</code>) <strong>默认</strong></td><td>N</td><td>N</td><td>N</td><td></td><td></td></tr><tr><td>读以提交(<code>READ COMMITTED</code>)</td><td>N</td><td>Y</td><td>Y</td><td></td><td></td></tr><tr><td>读未提交(<code>READ UNCONNITTRED</code>)</td><td>Y</td><td>Y</td><td>Y</td><td>最低</td><td>最高</td></tr></tbody></table><p><strong>设置事务隔离级别</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line"><span class="keyword">SET</span> [PERSIST|<span class="keyword">GLOBAL</span>|<span class="keyword">SESSION</span>] <span class="keyword">TRANSACTION</span> <span class="keyword">ISOLATION</span> <span class="keyword">LEVEL</span></span><br><span class="line">  &#123;</span><br><span class="line">       REPEATABLE <span class="keyword">READ</span></span><br><span class="line">     | <span class="keyword">READ</span> COMMITTED</span><br><span class="line">     | <span class="keyword">READ</span> UNCOMMITTED</span><br><span class="line">     | <span class="keyword">SERIALIZABLE</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li><code>PERSIST</code>:对所有新的连接生效,而且重启不会失效</li><li><code>GLOBAL</code>:对所有新的连接生效,重启会失效</li><li><code>SESSION</code>(开发人员使用):只对当前连接生效</li></ul><p><strong>innodb中的锁</strong></p><ul><li>查询需要对资源加共享锁(S)</li><li>数据修改需要对资源加排它锁(x)</li></ul><table><thead><tr><th></th><th>排它锁</th><th>共享锁</th></tr></thead><tbody><tr><td>排它锁</td><td>不兼容</td><td>不兼容</td></tr><tr><td>共享锁</td><td>不兼容</td><td>兼容</td></tr></tbody></table><h1 id="Mysql备份和恢复类的问题"><a href="#Mysql备份和恢复类的问题" class="headerlink" title="Mysql备份和恢复类的问题"></a>Mysql备份和恢复类的问题</h1><h2 id="常用的备份工具"><a href="#常用的备份工具" class="headerlink" title="常用的备份工具"></a>常用的备份工具</h2><table><thead><tr><th>名称</th><th>特点</th></tr></thead><tbody><tr><td>mysqldump</td><td>最常用的逻辑备份工具,支持全量备份及条件备份</td></tr><tr><td>mysqlpump</td><td>多线程逻辑备份工具,mysqldump的增强版本</td></tr><tr><td>xtrabackup</td><td>InnoDB在线物理备份工具,支持多线程和增量备份</td></tr></tbody></table><h2 id="mysqldump"><a href="#mysqldump" class="headerlink" title="mysqldump"></a>mysqldump</h2><ul><li>优点<ol><li>备份结构为可读的sql文件,可用于跨平台跨版本恢复数据</li><li>备份文件的尺寸小于物理备份,便于长时间存储</li><li>Mysql发行版自带工具,无需安装第三方软件</li></ol></li><li>缺点<ol><li>只能单线程执行备份恢复任务,备份恢复速度较慢</li><li>为完成一致性备份需要对备份表加锁,容易造成阻塞</li><li>会对InnoDB Buffer Pool造成污染</li></ol></li></ul><h2 id="mysqlpump"><a href="#mysqlpump" class="headerlink" title="mysqlpump"></a>mysqlpump</h2><ul><li>优点<ol><li>语法同mysqldump高度兼容,学习成本低</li><li>支持基于库和表的并行备份,可以提高逻辑备份的性能</li><li>支持使用ZLIB和LZ4算法对备份进行压缩</li></ol></li><li>缺点<ol><li>基于表进行并行备份,对于大表来说性能较差</li><li>5.7.11之前版本不支持一致性并行备份</li><li>会对InnoDB Buffer Pool造成污染</li></ol></li></ul><h2 id="xtrabackup"><a href="#xtrabackup" class="headerlink" title="xtrabackup"></a>xtrabackup</h2><ul><li>优点<ol><li>支持InnoDB存储引擎的在线热备份,对innodb缓冲没有影响</li><li>支持并行对数据库的全备和增量备份.</li><li>备份和恢复效率比逻辑备份高</li></ol></li><li>缺点<ul><li>做单表恢复时比较复杂</li><li>完整的数据文件拷贝,故备份文件比逻辑备份大</li><li>对跨平台和数据库版本的备份恢复支持度不如逻辑备份</li></ul></li></ul><h1 id="Mysql优化和异常处理"><a href="#Mysql优化和异常处理" class="headerlink" title="Mysql优化和异常处理"></a>Mysql优化和异常处理</h1><h2 id="数据库服务器负载过大的原因"><a href="#数据库服务器负载过大的原因" class="headerlink" title="数据库服务器负载过大的原因"></a>数据库服务器负载过大的原因</h2><ol><li>服务器磁盘IO超负荷</li><li>存在大量阻塞线程</li><li>存在大量并发慢查询</li><li>存在其他占用CPU的服务</li><li>服务器硬件资源原因</li></ol><h3 id="排查方法"><a href="#排查方法" class="headerlink" title="排查方法"></a>排查方法</h3><p><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%B4%9F%E8%BD%BD%E8%BF%87%E5%A4%A7%E7%9A%84%E6%9F%A5%E8%AF%A2%E6%96%B9%E6%B3%95.PNG" alt="image"></p><h2 id="慢查询造成的磁盘IO爆表的原因"><a href="#慢查询造成的磁盘IO爆表的原因" class="headerlink" title="慢查询造成的磁盘IO爆表的原因"></a>慢查询造成的磁盘IO爆表的原因</h2><ol><li>Mysql输出大量日志</li><li>Mysql正在进行大批量写</li><li>慢查询产生了大量的磁盘临时表</li></ol><h3 id="慢查询产生了大量的磁盘临时表排查"><a href="#慢查询产生了大量的磁盘临时表排查" class="headerlink" title="慢查询产生了大量的磁盘临时表排查"></a>慢查询产生了大量的磁盘临时表排查</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep /tmp mysql_2018_0908_15.txt</span><br></pre></td></tr></table></figure><h3 id="慢查询产生了大量的磁盘临时表解决方式"><a href="#慢查询产生了大量的磁盘临时表解决方式" class="headerlink" title="慢查询产生了大量的磁盘临时表解决方式"></a>慢查询产生了大量的磁盘临时表解决方式</h3><ul><li>优化慢查询,减少使用磁盘临时表</li></ul>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang反射reflect解析</title>
      <link href="/posts/2f2b16bc/"/>
      <url>/posts/2f2b16bc/</url>
      
        <content type="html"><![CDATA[<h1 id="反射基本函数"><a href="#反射基本函数" class="headerlink" title="反射基本函数"></a>反射基本函数</h1><p> <code>reflect.Type</code> 主要提供关于类型相关的信息，所以它和 _type 关联比较紧密；</p><p> <code>reflect.Value</code> 则结合 <code>_type</code>和 <code>data</code>两者，因此可以获取甚至改变类型的值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TypeOf</span><span class="params">(i <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">Type</span> // 返回<span class="title">i</span>的对象类型</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">ValueOf</span><span class="params">(i <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">Value</span> // 返回<span class="title">i</span>的<span class="title">Value</span><span class="params">(如果要对i进行修改的话传入变量地址)</span>    </span></span><br><span class="line"><span class="function"><span class="title">reflect</span>.<span class="title">Indirect</span><span class="params">(v value)</span> // 返回<span class="title">v</span>获取了该指针指向的值</span></span><br><span class="line"><span class="function"><span class="title">reflect</span>.<span class="title">New</span><span class="params">(typ Type)</span> // 返回一个新的<span class="title">type</span>类型的对象。</span></span><br></pre></td></tr></table></figure><h2 id="TypeOf"><a href="#TypeOf" class="headerlink" title="TypeOf"></a>TypeOf</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TypeOf</span><span class="params">(i <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">Type</span></span> &#123;</span><br><span class="line">  <span class="comment">// 将i转成emptyInterface</span></span><br><span class="line">eface := *(*emptyInterface)(unsafe.Pointer(&amp;i))</span><br><span class="line">  <span class="comment">// emptyInterface的*rtype实现了Type的接口</span></span><br><span class="line"><span class="keyword">return</span> toType(eface.typ)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> emptyInterface <span class="keyword">struct</span> &#123;</span><br><span class="line">  <span class="comment">// *rtype实现了Type的接口</span></span><br><span class="line">typ  *rtype</span><br><span class="line">word unsafe.Pointer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://qiniu.caihc.site/go/reflectgo-reflect-01.PNG" alt></p><ul><li>将先将 <code>i</code> 转换成 <code>*emptyInterface</code> 类型,然後在返回<code>typ</code>字段,<code>rtype</code>实现了<code>Type</code>接口</li></ul><h2 id="ValueOf"><a href="#ValueOf" class="headerlink" title="ValueOf"></a>ValueOf</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValueOf</span><span class="params">(i <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">Value</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> i == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> Value&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">escapes(i)</span><br><span class="line"><span class="keyword">return</span> unpackEface(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拆解rtype</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">unpackEface</span><span class="params">(i <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">Value</span></span> &#123;</span><br><span class="line">  <span class="comment">// 将i转成emptyInterface</span></span><br><span class="line">e := (*emptyInterface)(unsafe.Pointer(&amp;i))</span><br><span class="line">t := e.typ</span><br><span class="line"><span class="keyword">if</span> t == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> Value&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">f := flag(t.Kind())</span><br><span class="line"><span class="keyword">if</span> ifaceIndir(t) &#123;</span><br><span class="line">f |= flagIndir</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> Value&#123;t, e.word, f&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将先将 <code>i</code> 转换成 <code>*emptyInterface</code> 类型， 再将它的 <code>typ</code>字段和 <code>word</code> 字段以及一个标志位字段组装成一个 <code>Value</code> 结构体，而这就是 <code>ValueOf</code>函数的返回值，它包含类型结构体指针、真实数据的地址、标志位。</li></ul><h1 id="Type"><a href="#Type" class="headerlink" title="Type"></a>Type</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Type <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// 所有的类型都可以调用下面这些函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 此类型的变量对齐后所占用的字节数</span></span><br><span class="line">Align() <span class="keyword">int</span></span><br><span class="line"><span class="comment">// 如果是 struct 的字段，对齐后占用的字节数</span></span><br><span class="line">FieldAlign() <span class="keyword">int</span></span><br><span class="line"><span class="comment">// 返回类型方法集里的第 `i` (传入的参数)个方法</span></span><br><span class="line">Method(<span class="keyword">int</span>) Method</span><br><span class="line">    <span class="comment">// 通过名称获取方法</span></span><br><span class="line">MethodByName(<span class="keyword">string</span>) (Method, <span class="keyword">bool</span>)</span><br><span class="line"><span class="comment">// 获取类型方法集里导出的方法个数</span></span><br><span class="line">NumMethod() <span class="keyword">int</span></span><br><span class="line"><span class="comment">// 类型名称</span></span><br><span class="line">Name() <span class="keyword">string</span></span><br><span class="line"><span class="comment">// 返回类型所在的路径，如：encoding/base64</span></span><br><span class="line">PkgPath() <span class="keyword">string</span></span><br><span class="line"><span class="comment">// 返回类型的大小，和 unsafe.Sizeof 功能类似</span></span><br><span class="line">Size() <span class="keyword">uintptr</span></span><br><span class="line"><span class="comment">// 返回类型的大小，和 unsafe.Sizeof 功能类似</span></span><br><span class="line">String() <span class="keyword">string</span></span><br><span class="line"><span class="comment">// 返回类型的类型值</span></span><br><span class="line">Kind() Kind</span><br><span class="line"><span class="comment">// 类型是否实现了接口 u</span></span><br><span class="line">Implements(u Type) <span class="keyword">bool</span></span><br><span class="line"><span class="comment">// 是否可以赋值给 u</span></span><br><span class="line">AssignableTo(u Type) <span class="keyword">bool</span></span><br><span class="line"><span class="comment">// 是否可以类型转换成 u</span></span><br><span class="line">ConvertibleTo(u Type) <span class="keyword">bool</span></span><br><span class="line"><span class="comment">// 类型是否可以比较</span></span><br><span class="line">Comparable() <span class="keyword">bool</span></span><br><span class="line"><span class="comment">// 类型所占据的位数</span></span><br><span class="line">Bits() <span class="keyword">int</span></span><br><span class="line"><span class="comment">// 返回通道的方向，只能是 chan 类型调用</span></span><br><span class="line">ChanDir() ChanDir</span><br><span class="line"><span class="comment">// 返回类型是否是可变参数，只能是 func 类型调用 </span></span><br><span class="line"><span class="comment">// 比如 t 是类型 func(x int, y ... float64)</span></span><br><span class="line"><span class="comment">// 那么 t.IsVariadic() == true</span></span><br><span class="line">IsVariadic() <span class="keyword">bool</span></span><br><span class="line"><span class="comment">// 返回内部子元素类型，只能由类型 Array, Chan, Map, Ptr, or Slice 调用</span></span><br><span class="line">Elem() Type</span><br><span class="line">    <span class="comment">// 返回结构体类型的第 i 个字段，只能是结构体类型调用</span></span><br><span class="line">    <span class="comment">// 如果 i 超过了总字段数，就会 panic</span></span><br><span class="line">Field(i <span class="keyword">int</span>) StructField</span><br><span class="line"><span class="comment">// 返回嵌套的结构体的字段</span></span><br><span class="line">FieldByIndex(index []<span class="keyword">int</span>) StructField</span><br><span class="line"><span class="comment">// 通过字段名称获取字段</span></span><br><span class="line">FieldByName(name <span class="keyword">string</span>) (StructField, <span class="keyword">bool</span>)</span><br><span class="line"><span class="comment">// 返回名称符合 func 函数的字段</span></span><br><span class="line">FieldByNameFunc(match <span class="function"><span class="keyword">func</span><span class="params">(<span class="keyword">string</span>)</span> <span class="title">bool</span>) <span class="params">(StructField, <span class="keyword">bool</span>)</span></span></span><br><span class="line"><span class="function">// 获取函数类型的第 <span class="title">i</span> 个参数的类型</span></span><br><span class="line"><span class="function"><span class="title">In</span><span class="params">(i <span class="keyword">int</span>)</span> <span class="title">Type</span></span></span><br><span class="line"><span class="function">// 返回 <span class="title">map</span> 的 <span class="title">key</span> 类型，只能由类型 <span class="title">map</span> 调用</span></span><br><span class="line"><span class="function"><span class="title">Key</span><span class="params">()</span> <span class="title">Type</span></span></span><br><span class="line"><span class="function">// 返回 <span class="title">Array</span> 的长度，只能由类型 <span class="title">Array</span> 调用</span></span><br><span class="line"><span class="function"><span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function">    // 返回类型字段的数量，只能由类型 <span class="title">Struct</span> 调用</span></span><br><span class="line"><span class="function"><span class="title">NumField</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function">// 返回函数类型的输入参数个数</span></span><br><span class="line"><span class="function"><span class="title">NumIn</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function">// 返回函数类型的返回值个数</span></span><br><span class="line"><span class="function"><span class="title">NumOut</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function">// 返回函数类型的第 <span class="title">i</span> 个值的类型</span></span><br><span class="line"><span class="function"><span class="title">Out</span><span class="params">(i <span class="keyword">int</span>)</span> <span class="title">Type</span></span></span><br><span class="line"><span class="function">// 返回类型结构体的相同部分</span></span><br><span class="line"><span class="function"><span class="title">common</span><span class="params">()</span> *<span class="title">rtype</span></span></span><br><span class="line"><span class="function">    // 返回类型结构体的不同部分</span></span><br><span class="line"><span class="function"><span class="title">uncommon</span><span class="params">()</span> *<span class="title">uncommonType</span></span></span><br><span class="line"><span class="function">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><p>使用示例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"reflect"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> FooIF <span class="keyword">interface</span> &#123;</span><br><span class="line">DoSomething()</span><br><span class="line">DoSomethingWithArg(a <span class="keyword">string</span>)</span><br><span class="line">DoSomethingWithUnCertenArg(a ... <span class="keyword">string</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Foo <span class="keyword">struct</span> &#123;</span><br><span class="line">A <span class="keyword">int</span></span><br><span class="line">B <span class="keyword">string</span></span><br><span class="line">C <span class="keyword">struct</span> &#123;</span><br><span class="line">C1 <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(f *Foo)</span> <span class="title">DoSomething</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(f.A, f.B)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(f *Foo)</span> <span class="title">DoSomethingWithArg</span><span class="params">(a <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(f.A, f.B, a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(f *Foo)</span> <span class="title">DoSomethingWithUnCertenArg</span><span class="params">(a ... <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">fmt.Println(f.A, f.B, a[<span class="number">0</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(f *Foo)</span> <span class="title">returnOneResult</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> simpleObj Foo</span><br><span class="line"><span class="keyword">var</span> pointer2obj = &amp;simpleObj</span><br><span class="line"><span class="keyword">var</span> simpleIntArray = [<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"><span class="keyword">var</span> simpleMap = <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">"a"</span>: <span class="string">"b"</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> simpleChan = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">var</span> x <span class="keyword">uint64</span></span><br><span class="line"><span class="keyword">var</span> y <span class="keyword">uint32</span></span><br><span class="line"></span><br><span class="line">varType := reflect.TypeOf(simpleObj)</span><br><span class="line">varPointerType := reflect.TypeOf(pointer2obj)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对齐之后要多少容量</span></span><br><span class="line">fmt.Println(<span class="string">"Align: "</span>, varType.Align())</span><br><span class="line"><span class="comment">// 作为结构体的`field`要对其之后要多少容量</span></span><br><span class="line">fmt.Println(<span class="string">"FieldAlign: "</span>, varType.FieldAlign())</span><br><span class="line"><span class="comment">// 类型名称</span></span><br><span class="line">fmt.Println(<span class="string">"Name: "</span>, varType.Name())</span><br><span class="line"><span class="comment">// 绝对引入路径</span></span><br><span class="line">fmt.Println(<span class="string">"PkgPath: "</span>, varType.PkgPath())</span><br><span class="line"><span class="comment">// 实际上用了多少内存</span></span><br><span class="line">fmt.Println(<span class="string">"Size: "</span>, varType.Size())</span><br><span class="line"><span class="comment">// 类型的类型值</span></span><br><span class="line">fmt.Println(<span class="string">"Kind: "</span>, varType.Kind())</span><br><span class="line"><span class="comment">// 有多少函数(指针对象能获取全部函数,非指针的只能获取非指针函数)</span></span><br><span class="line">fmt.Println(<span class="string">"NumMethod: "</span>, varPointerType.NumMethod())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过名字获取一个函数</span></span><br><span class="line">m, success := varPointerType.MethodByName(<span class="string">"DoSomethingWithArg"</span>)</span><br><span class="line"><span class="keyword">if</span> success &#123; <span class="comment">// 调用该方法</span></span><br><span class="line">m.Func.Call([]reflect.Value&#123;</span><br><span class="line">reflect.ValueOf(pointer2obj),</span><br><span class="line">reflect.ValueOf(<span class="string">"sad"</span>),</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过索引获取函数</span></span><br><span class="line">m = varPointerType.Method(<span class="number">1</span>)</span><br><span class="line">m.Func.Call([]reflect.Value&#123; <span class="comment">// 调用该方法</span></span><br><span class="line">reflect.ValueOf(pointer2obj),</span><br><span class="line">reflect.ValueOf(<span class="string">"sad2"</span>),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否实现了某个接口</span></span><br><span class="line">fmt.Println(<span class="string">"Implements:"</span>, varPointerType.Implements(reflect.TypeOf((*FooIF)(<span class="literal">nil</span>)).Elem()))</span><br><span class="line"><span class="comment">//  看看指针多少bit</span></span><br><span class="line">fmt.Println(<span class="string">"Bits: "</span>, reflect.TypeOf(x).Bits())</span><br><span class="line"><span class="comment">// 查看array, chan, map, ptr, slice的元素类型</span></span><br><span class="line">fmt.Println(<span class="string">"Elem: "</span>, reflect.TypeOf(simpleIntArray).Elem().Kind())</span><br><span class="line"><span class="comment">// 查看Array长度</span></span><br><span class="line">fmt.Println(<span class="string">"Len: "</span>, reflect.TypeOf(simpleIntArray).Len())</span><br><span class="line"><span class="comment">// 查看结构体类型的第 i 个字段</span></span><br><span class="line">fmt.Printf(<span class="string">"Field: %+v \n"</span>, varType.Field(<span class="number">1</span>))</span><br><span class="line"><span class="comment">// 查看嵌套的结构体的字段</span></span><br><span class="line">fmt.Printf(<span class="string">"FieldByIndex %+v \n"</span>, varType.FieldByIndex([]<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">0</span>&#125;))</span><br><span class="line"><span class="comment">// 通过字段名称获取字段</span></span><br><span class="line">fi, success2 := varType.FieldByName(<span class="string">"A"</span>)</span><br><span class="line"><span class="keyword">if</span> success2 &#123;</span><br><span class="line">fmt.Printf(<span class="string">"FieldByName: %+v \n"</span>, fi)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查看名称符合 func 函数的字段</span></span><br><span class="line">fi, success2 = varType.FieldByNameFunc(<span class="function"><span class="keyword">func</span><span class="params">(fieldName <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> fieldName == <span class="string">"A"</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> success2 &#123;</span><br><span class="line">fmt.Printf(<span class="string">"FieldByName: %+v \n"</span>, fi)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//  查看结构体数量</span></span><br><span class="line">fmt.Println(<span class="string">"NumField"</span>, varType.NumField())</span><br><span class="line"><span class="comment">// 查看map的key类型</span></span><br><span class="line">fmt.Println(<span class="string">"Key: "</span>, reflect.TypeOf(simpleMap).Key().Name())</span><br><span class="line"><span class="comment">// 查看函数有多少个参数</span></span><br><span class="line">fmt.Println(<span class="string">"NumIn: "</span>, reflect.TypeOf(pointer2obj.DoSomethingWithUnCertenArg).NumIn())</span><br><span class="line"><span class="comment">// 查看函数参数的类型</span></span><br><span class="line">fmt.Println(<span class="string">"In: "</span>, reflect.TypeOf(pointer2obj.DoSomethingWithUnCertenArg).In(<span class="number">0</span>))</span><br><span class="line"><span class="comment">// 查看最后一个参数，是否解构了</span></span><br><span class="line">fmt.Println(<span class="string">"IsVariadic: "</span>, reflect.TypeOf(pointer2obj.DoSomethingWithUnCertenArg).IsVariadic())</span><br><span class="line"><span class="comment">// 查看函数有多少输出</span></span><br><span class="line">fmt.Println(<span class="string">"NumOut: "</span>, reflect.TypeOf(pointer2obj.DoSomethingWithUnCertenArg).NumOut())</span><br><span class="line"><span class="comment">// 查看函数输出的类型</span></span><br><span class="line">fmt.Println(<span class="string">"Out: "</span>, reflect.TypeOf(pointer2obj.returnOneResult).Out(<span class="number">0</span>))</span><br><span class="line"><span class="comment">// 查看通道的方向, 3双向。</span></span><br><span class="line">fmt.Println(<span class="string">"ChanDir: "</span>, <span class="keyword">int</span>(reflect.TypeOf(simpleChan).ChanDir()))</span><br><span class="line"><span class="comment">// 查看该类型是否可以比较。不能比较的slice, map, func</span></span><br><span class="line">fmt.Println(<span class="string">"Comparable: "</span>, varPointerType.Comparable())</span><br><span class="line"><span class="comment">// 查看类型是否可以转化成另外一种类型</span></span><br><span class="line">fmt.Println(<span class="string">"ConvertibleTo: "</span>, varPointerType.ConvertibleTo(reflect.TypeOf(<span class="string">"a"</span>)))</span><br><span class="line"><span class="comment">// 该类型的值是否可以另外一个类型</span></span><br><span class="line">fmt.Println(<span class="string">"AssignableTo: "</span>, reflect.TypeOf(x).AssignableTo(reflect.TypeOf(y)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="value"><a href="#value" class="headerlink" title="value"></a>value</h1><p>Value 字段还有很多方法,可以去看文档: <a href="http://docscn.studygolang.com/pkg/reflect/" target="_blank" rel="noopener">http://docscn.studygolang.com/pkg/reflect/</a>,或者去<code>src/reflect/value.go</code>看看源码，搜索 <code>func(v Value)</code> 就能看到。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">value.CanSet()返回值能否更改</span><br><span class="line">value.MethodByName(<span class="string">"name"</span>)<span class="comment">//根据方法名查找方法返回Value</span></span><br><span class="line">value.FieldByName(<span class="string">"name"</span>)<span class="comment">//根据属性名查找属性返回Value</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">CanAddr</span><span class="params">()</span> <span class="title">Value</span>///这个方法是设置值的方法的基础，使用<span class="title">ValueOf</span><span class="params">()</span>生成一个<span class="title">Value</span>时，参数是值传递的，因此设置这个参数一点意义也没有。正确的方法是传入一个指针，然后调用<span class="title">Elem</span><span class="params">()</span>方法来生成其指向的元素对应的<span class="title">Value</span>对象</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Addr</span><span class="params">()</span> <span class="title">Value</span>//获得其地址  如果<span class="title">CanAddr</span><span class="params">()</span>返回<span class="title">false</span>，那么这个调用会<span class="title">panic</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">UnsafeAddr</span><span class="params">()</span> <span class="title">uintptr</span>//和<span class="title">Addr</span><span class="params">()</span>方法有同样的要求</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">CanSet</span><span class="params">()</span> <span class="title">bool</span>//是否可以修改其值，一个值必须是可以获得地址且不能通过访问结构的非导出字段获得，方可被修改</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Set</span><span class="params">(x Value)</span> //设置值   如果<span class="title">CanSet</span><span class="params">()</span>返回<span class="title">false</span>，那么<span class="title">panic</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Convert</span><span class="params">(t Type)</span> <span class="title">Value</span>//转换为其他类型的值 如果无法使用标准<span class="title">Go</span>转换规则来转换，那么<span class="title">panic</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Iterface</span></span>&#123;&#125; <span class="keyword">interface</span>&#123;&#125;<span class="comment">//以空接口类型获得值  如果Value是通过访问结构的非导出字段获得，panic</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v Value)</span> <span class="title">IsValid</span><span class="params">()</span> <span class="title">bool</span> // 是否是一个合法的<span class="title">Value</span>对象   只有零值才会返回<span class="title">false</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Kind</span><span class="params">()</span> <span class="title">Kind</span>      //* 所属的类型分类   零值会返回<span class="title">Invalid</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span>//* 字符串格式   返回值的格式为&lt;类型 值&gt;</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Type</span><span class="params">()</span> <span class="title">Type</span>//类型</span></span><br><span class="line"><span class="function">* 方法集和方法</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">NumMethod</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Method</span><span class="params">(index <span class="keyword">int</span>)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">MethodByName</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function">//<span class="title">Type</span>类型定义了同名方法，但是返回的是类型信息，这里返回的是值信息。<span class="title">Method</span><span class="params">()</span>方法，如果<span class="title">v</span>没有任何方法集，或者<span class="title">index</span>越界，那么<span class="title">panic</span>。<span class="title">MethodByName</span><span class="params">()</span>方法，如果没有找到名为<span class="title">name</span>的方法，那么返回一个零值</span></span><br><span class="line"><span class="function">*属性</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">NumField</span><span class="params">()</span> <span class="title">int</span>   //结构字段数量</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Field</span><span class="params">(i <span class="keyword">int</span>)</span> <span class="title">Value</span>       //使用索引来访问字段，索引从0开始，如果越界将<span class="title">panic</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">FieldByName</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="title">Value</span>       //使用名称来访问字段，如果未找到那么返回<span class="title">false</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span><span class="title">FieldByNameFunc</span><span class="params">(match <span class="keyword">func</span>(<span class="keyword">string</span>)</span> <span class="title">bool</span>) <span class="title">Value</span>        //访问名称使得<span class="title">match</span>函数返回<span class="title">true</span>的字段，在同一个内嵌层次上，只能有一个字段使得<span class="title">match</span>返回<span class="title">true</span>。如果同一层次上多个字段使得<span class="title">match</span>返回<span class="title">true</span>，</span></span><br><span class="line"><span class="function">那么这些字段都认为是不符合要求的</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">FieldByIndex</span><span class="params">(index []<span class="keyword">int</span>)</span> <span class="title">Value</span>        //这个方法使得访问结构的内嵌字段成为可能。将访问各个层次的字段的索引排列起来，就形成了一个[]<span class="title">int</span>，参数<span class="title">index</span>不可越界，否则<span class="title">panic</span> </span></span><br><span class="line"><span class="function">*函数类型值</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Call</span><span class="params">(in []Value)</span>[]<span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">CallSlice</span><span class="params">(in []Value)</span> []<span class="title">Value</span></span></span><br><span class="line"><span class="function">注：<span class="title">Call</span><span class="params">()</span>方法用来调用函数<span class="params">(参数可变或者固定)</span>，采用的是用户代码使用的调用格式。<span class="title">CallSlice</span><span class="params">()</span>方法专门用于调用参数可变的函数，它采用了编译器使用的调用格式。这两种调用格式的区别在于:</span></span><br><span class="line"><span class="function"><span class="title">u</span> 对于参数固定的函数，两种格式没有任何区别，都是按照位置，将实参赋予形参</span></span><br><span class="line"><span class="function"><span class="title">u</span> 对于参数可变的函数，编译器格式会特别处理最后一个参数，将剩余的实参依次放入一个<span class="title">slice</span>内，传递给可变形参的就是这个<span class="title">slice</span>。</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Pointer</span><span class="params">()</span> <span class="title">uintptr</span>        //以<span class="title">uintptr</span>返回函数的值，这个值并不能独一无二的识别一个函数，只是保证如果函数为<span class="title">nil</span>，那么这个值为0</span></span><br><span class="line"><span class="function">*类型信息</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">ChanDir</span><span class="params">()</span> <span class="title">ChanDir</span>//判断通道的方向</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">Elem</span><span class="params">()</span> <span class="title">Type</span>//元素的类型</span></span><br><span class="line"><span class="function">*通道值</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">IsNil</span><span class="params">()</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Pointer</span><span class="params">()</span> <span class="title">uintptr</span>    //以<span class="title">unitptr</span>返回其值，没有使用<span class="title">unsafe</span>.<span class="title">Pointer</span>类型，所以不需要导入<span class="title">unsafe</span>包</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Close</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span>        //通道当前元素数量</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Cap</span><span class="params">()</span> <span class="title">int</span>        //通道的长度</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Send</span><span class="params">(x Value)</span>         //发送一个值，<span class="title">x</span>必表示一个可以赋值给通道元素类型的值</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">TrySend</span><span class="params">(x Value)</span> <span class="title">bool</span>        //尝试以非阻塞的方式发送一个值，返回操作成功与否</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Recv</span><span class="params">()</span> <span class="params">(Value,<span class="keyword">bool</span>)</span>      //接收一个值，如果通道已经关闭，返回一个<span class="title">Value</span>零值。由于通道本身可能传输<span class="title">Value</span>零值，所以必须额外使用一个布尔返回值来表示接收是否成功</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">TryRecv</span><span class="params">()</span> <span class="params">(Value,<span class="keyword">bool</span>)</span>       //尝试以非阻塞的方式接收一个值</span></span><br><span class="line"><span class="function">*<span class="title">slice</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">Elem</span><span class="params">()</span> <span class="title">Type</span>            //类型</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Cap</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">IsNil</span><span class="params">()</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Pointer</span><span class="params">()</span> <span class="title">uintptr</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Index</span><span class="params">(i <span class="keyword">int</span>)</span> <span class="title">Value</span>   //访问某个元素</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Slice</span><span class="params">(i,j <span class="keyword">int</span>)</span> <span class="title">Value</span> //访问某个子<span class="title">slice</span>,下标必须合法</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Slice3</span><span class="params">(i,j,k)</span> <span class="title">Value</span>  //以<span class="title">Go1</span>.3引入的3下标格式访问某个子<span class="title">slice</span>，下标必须合法</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">SetCap</span><span class="params">(i <span class="keyword">int</span>)</span>        //要求<span class="title">i</span>必须在[<span class="title">v</span>.<span class="title">Len</span><span class="params">()</span>,<span class="title">v</span>.<span class="title">Cap</span><span class="params">()</span>]之间</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">SetLen</span><span class="params">(i <span class="keyword">int</span>)</span>        //<span class="title">i</span>必须在[0,<span class="title">v</span>.<span class="title">Cap</span><span class="params">()</span>]之间</span></span><br><span class="line"><span class="function">*映射类型</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">IsNil</span><span class="params">()</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">MapKeys</span><span class="params">()</span> []<span class="title">Value</span>//返回所有的键值</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">MapIndex</span><span class="params">(key Value)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">SetMapIndex</span><span class="params">(key, x Value)</span>//如果<span class="title">x</span>是零值，那么表示删除一个元素</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Pointer</span><span class="params">()</span> <span class="title">uintptr</span></span></span><br><span class="line"><span class="function">*指针类型   <span class="title">Go</span>语言提供了两种指针类型，一种是通过*和其他类型复合而成，另一种是<span class="title">unsafe</span>.<span class="title">Pointer</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">Elem</span><span class="params">()</span> <span class="title">Type</span>    值</span></span><br><span class="line"><span class="function"><span class="title">func</span><span class="params">(v Value)</span> <span class="title">IsNil</span><span class="params">()</span> <span class="title">bool</span></span></span><br><span class="line"><span class="function"><span class="title">func</span><span class="params">(v Value)</span> <span class="title">Elem</span><span class="params">()</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="title">func</span><span class="params">(v Value)</span> <span class="title">Pointer</span><span class="params">()</span> <span class="title">uintptr</span></span></span><br><span class="line"><span class="function">*数组</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">Elem</span><span class="params">()</span> <span class="title">Type</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">func</span><span class="params">(v Value)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span></span></span><br><span class="line"><span class="function"><span class="title">func</span><span class="params">(v Value)</span> <span class="title">Slice</span><span class="params">(i,j <span class="keyword">int</span>)</span> <span class="title">Value</span></span></span><br><span class="line"><span class="function"><span class="title">func</span><span class="params">(v Value)</span> <span class="title">Slice3</span><span class="params">(i, j, k <span class="keyword">int</span>)</span> <span class="title">Value</span>//这两个方法要求<span class="title">v</span>.<span class="title">CanAddr</span><span class="params">()</span>返回<span class="title">true</span></span></span><br><span class="line"><span class="function">*接口类型</span></span><br><span class="line"><span class="function"><span class="title">func</span><span class="params">(v Value)</span> <span class="title">IsNil</span><span class="params">()</span> <span class="title">bool</span>//判断接口是否为空</span></span><br><span class="line"><span class="function"><span class="title">func</span><span class="params">(v Value)</span> <span class="title">Elem</span><span class="params">()</span> <span class="title">Value</span>//返回接口包含的真实值</span></span><br><span class="line"><span class="function"><span class="title">func</span><span class="params">(v Value)</span> <span class="title">InterfaceData</span><span class="params">()</span> [2]<span class="title">uintptr</span>//这个方法的用法比较奇怪，还未能找到一个合适的例子</span></span><br><span class="line"><span class="function">[]<span class="title">byte</span>类型</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span><span class="title">Bytes</span><span class="params">()</span> []<span class="title">bytes</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span><span class="title">SetBytes</span><span class="params">(x []bytes)</span></span></span><br><span class="line"><span class="function">字符串类型</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">SetString</span><span class="params">(x <span class="keyword">string</span>)</span>//设置字符串的值</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Index</span><span class="params">(i <span class="keyword">int</span>)</span><span class="title">Value</span>//访问单个字节</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="params">(v Value)</span> <span class="title">Len</span><span class="params">()</span> <span class="title">int</span>//字符串的长度</span></span><br></pre></td></tr></table></figure><h1 id="StructField"><a href="#StructField" class="headerlink" title="StructField"></a>StructField</h1><p>结构的字段具有很多特殊信息，定义了<code>StructField</code>类型来表示一个字段</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NumField</span><span class="params">()</span> <span class="title">int</span>     //结构字段数量</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">Field</span><span class="params">(i <span class="keyword">int</span>)</span> <span class="title">StructField</span>       //使用索引来访问字段，索引从0开始，如果越界将<span class="title">panic</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">FieldByName</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="params">(StructField,<span class="keyword">bool</span>)</span>        //使用名称来访问字段，如果未找到那么返回<span class="title">false</span></span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">FieldByNameFunc</span><span class="params">(match <span class="keyword">func</span>(<span class="keyword">string</span>)</span> <span class="title">bool</span>) <span class="params">(StructField,<span class="keyword">bool</span>)</span>        //访问名称使得<span class="title">match</span>函数返回<span class="title">true</span>的字段，在同一个内嵌层次上，只能有一个字段使得<span class="title">match</span>返回<span class="title">true</span>。如果同一层次上多个字段使得<span class="title">match</span>返回<span class="title">true</span>，</span></span><br><span class="line"><span class="function">那么这些字段都认为是不符合要求的</span></span><br><span class="line"><span class="function"><span class="title">func</span> <span class="title">FieldByIndex</span><span class="params">(index []<span class="keyword">int</span>)</span> <span class="title">StructField</span>      //这个方法使得访问结构的内嵌字段成为可能。将访问各个层次的字段的索引排列起来，就形成了一个[]<span class="title">int</span>，参数<span class="title">index</span>不可越界，否则<span class="title">panic</span>             </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">type</span> <span class="title">StructField</span> <span class="title">struct</span></span>&#123;</span><br><span class="line">    Name <span class="keyword">string</span>      <span class="comment">//名称</span></span><br><span class="line">    PkgPath <span class="keyword">string</span>      <span class="comment">//* 对于导出字段，为空字符串* 对于非导出字段，是定义该字段类型的包名</span></span><br><span class="line">    Type        Type</span><br><span class="line">    Tag         StructTag</span><br><span class="line">    Offset <span class="keyword">uintptr</span>     <span class="comment">//在结构内的位移</span></span><br><span class="line">    Index []<span class="keyword">int</span>       <span class="comment">//当使用Type.FieldByIndex()方法的参数</span></span><br><span class="line">    Anonymous  <span class="keyword">bool</span>        <span class="comment">//是否为匿名字段</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>StructTag</code>描述了结构字段的<code>tag</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tag格式为:</span><br><span class="line">  * 由多个部分连接而成，部分之间有可选的空格</span><br><span class="line">  * 部分格式为 key:value</span><br><span class="line">  * key是非空的字符串，由非控制字符组成，并且不可以是空格、双引号、冒号</span><br><span class="line">  * 值由双引号包围，遵循Go字符串字面值语法</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tag StructTag)</span> <span class="title">Get</span><span class="params">(key <span class="keyword">string</span>)</span> <span class="title">string</span>     //将一个<span class="title">tag</span>看做映射，各个部分就是映射的元素</span></span><br></pre></td></tr></table></figure></li><li><p><code>Kind</code></p><p>reflect包使用Kind类型来表示类型所属的分类</p></li></ul><h1 id="反射的三大定律"><a href="#反射的三大定律" class="headerlink" title="反射的三大定律"></a>反射的三大定律</h1><blockquote><ol><li><p>Reflection goes from interface value to reflection object.</p></li><li><p>Reflection goes from reflection object to interface value.</p></li><li><p>To modify a reflection object, the value must be settable.</p></li></ol></blockquote><ul><li><ol><li>反射可以从接口类型到反射类型对象<ul><li>反射是一种检测存储在 interface 中的类型和值机制。这可以通过 TypeOf 函数和 ValueOf 函数得到。</li></ul></li></ol></li><li><ol start="2"><li>反射可以从反射类型对象到接口类<ul><li>将 ValueOf 的返回值通过 Interface()函数反向转变成 interface 变量</li></ul></li></ol></li><li><ol start="3"><li>修改反射类型变量的内部值需要保证其可设置性<ul><li>如果想要操作原变量，反射变量 Value 必须要使用原变量的地址才行。</li></ul></li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB4.0配置说明</title>
      <link href="/posts/39601882/"/>
      <url>/posts/39601882/</url>
      
        <content type="html"><![CDATA[<p>官方文档地址:<a href="https://docs.mongodb.com/manual/reference/configuration-options/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/</a></p><h2 id="systemLog"><a href="#systemLog" class="headerlink" title="systemLog"></a><code>systemLog</code></h2><p><code>systemLog官方文档地址</code>:<a href="https://docs.mongodb.com/manual/reference/configuration-options/#security-options" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/#security-options</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemLog:</span></span><br><span class="line"><span class="attr">   verbosity:</span> <span class="string">&lt;int&gt;</span></span><br><span class="line"><span class="attr">   quiet:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   traceAllExceptions:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   syslogFacility:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   path:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   logAppend:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   logRotate:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   destination:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   timeStampFormat:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   component:</span></span><br><span class="line"><span class="attr">      accessControl:</span></span><br><span class="line"><span class="attr">         verbosity:</span> <span class="string">&lt;int&gt;</span></span><br><span class="line"><span class="attr">      command:</span></span><br><span class="line"><span class="attr">         verbosity:</span> <span class="string">&lt;int&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># COMMENT additional component verbosity settings omitted for brevity</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>作用</th></tr></thead><tbody><tr><td><code>verbosity</code></td><td><code>int</code></td><td><code>0</code></td><td>默认的日志信息 冗长级别的组件。详细级别确定MongoDB输出的信息和调试消息的数量。<br>详细程度可以<code>0</code>是<code>5</code>：<br>       0是MongoDB的默认日志详细级别，包括 信息性消息。<br>       1到5增加详细级别，以包括 调试消息。<br><a href="https://docs.mongodb.com/manual/reference/log-messages/#log-messages-configure-verbosity" target="_blank" rel="noopener">日志详细级别</a>。<br>建议:使用默认值就可以了</td></tr><tr><td><code>quiet</code></td><td><code>boolean</code></td><td></td><td>运行<code>mongos</code>或``mongod`处于安静模式，试图限制输出量。<br>不建议用于生产系统，因为它可以使在特定的连接变得更加困难跟踪问题</td></tr><tr><td><code>traceAllExceptions</code></td><td><code>boolean</code></td><td></td><td>打印详细信息以进行调试。用于支持相关故障排除的其他日志记录。</td></tr><tr><td><code>syslogFacility</code></td><td><code>string</code></td><td><code>user</code></td><td>将mongodb使用日志记录到系统日志中，如果要使用这个选项，必须设置<code>systemLog.destination</code>为<code>syslog</code>。</td></tr><tr><td><code>path</code></td><td><code>string</code></td><td></td><td>日志文件的路径,而不是标准输出或主机的syslog</td></tr><tr><td><code>logAppend</code></td><td><code>boolean</code></td><td><code>false</code></td><td>当<code>mongod</code>或<code>mongos</code>重启时，如果为<code>true</code>，将日志追加到原来日志文件内容末尾；如果为<code>false</code>，将创建一个新的日志文件</td></tr><tr><td><code>logRotate</code></td><td><code>string</code></td><td><code>rename</code></td><td>可选项<code>rename</code>和<code>reopen</code><br>    1. <code>rename</code> :重命名日志文件。<br>    2. <code>reopen</code>:按照典型的Linux / Unix日志轮换行为关闭并重新打开日志文件,以避免日志的损失,这个选项必须设置<code>systemLog.logAppend</code>为<code>true</code>。<br></td></tr><tr><td><code>destination</code></td><td><code>string</code></td><td></td><td>MongoDB发送所有日志输出的目标。指定 <code>file</code>或<code>syslog</code>。如果指定<code>file</code>,则还必须指定<code>systemLog.path</code>。<br>建议:使用<code>file</code></td></tr><tr><td><code>timeStampFormat</code></td><td><code>string</code></td><td><code>iso8601-local</code></td><td>日志消息中时间戳的时间格式。<br> 1. <code>ctime</code>:将时间戳显示为: <code>Wed Dec 31 18:17:54.811</code><br> 2. <code>iso8601-utc</code>:格式显示：<code>1970-01-01T00:00:00.000Z</code><br> 3. <code>iso8601-local</code>:格式显示：<code>1969-12-31T19:00:00.000-0500</code></td></tr><tr><td><code>component.accessControl.verbosity</code></td><td><code>int</code></td><td><code>0</code></td><td>与访问控制相关的组件的日志消息详细级别<br>建议:使用默认值</td></tr><tr><td><code>component.command.verbosity</code></td><td><code>int</code></td><td><code>0</code></td><td>与命令相关的组件的日志消息详细级别<br>建议:使用默认值</td></tr></tbody></table><h2 id="processManagement"><a href="#processManagement" class="headerlink" title="processManagement"></a><code>processManagement</code></h2><p><code>processManagement</code>文档地址: <a href="https://docs.mongodb.com/manual/reference/configuration-options/#processmanagement-options" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/#processmanagement-options</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">processManagement:</span></span><br><span class="line"><span class="attr">   fork:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   pidFilePath:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   timeZoneInfo:</span> <span class="string">&lt;string&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>作用</th></tr></thead><tbody><tr><td><code>fork</code></td><td><code>boolean</code></td><td><code>false</code></td><td>是否启用在后台运行mongos或mongod处理的守护程序模式</td></tr><tr><td><code>pidFilePath</code></td><td><code>string</code></td><td></td><td>指定一个文件位置来保存的进程ID将mongos或mongod将写入其PID</td></tr><tr><td><code>timeZoneInfo</code></td><td><code>string</code></td><td></td><td>加载时区数据库的完整路径。如果未提供此选项，则MongoDB将使用其内置时区数据库</td></tr></tbody></table><h2 id="cloud"><a href="#cloud" class="headerlink" title="cloud"></a><code>cloud</code></h2><p>官方文档地址:<a href="https://docs.mongodb.com/manual/reference/configuration-options/#cloud-options" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/#cloud-options</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cloud:</span></span><br><span class="line"><span class="attr">   monitoring:</span></span><br><span class="line"><span class="attr">      free:</span></span><br><span class="line"><span class="attr">         state:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">         tags:</span> <span class="string">&lt;string&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>作用</th></tr></thead><tbody><tr><td><code>free.state</code></td><td><code>string</code></td><td><code>runtime</code></td><td><code>runtime</code>:可以在运行时启用或禁用监控<br><code>on</code>:启动监控<br><code>off</code>:禁用监控</td></tr><tr><td><code>free.tags</code></td><td><code>string</code></td><td></td><td>用于描述环境上下文的可选标记</td></tr></tbody></table><h2 id="net"><a href="#net" class="headerlink" title="net"></a><code>net</code></h2><p>官方文档地址:<a href="https://docs.mongodb.com/manual/reference/configuration-options/#net-options" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/#net-options</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">net:</span></span><br><span class="line"><span class="attr">   port:</span> <span class="string">&lt;int&gt;</span></span><br><span class="line"><span class="attr">   bindIp:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   bindIpAll:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   maxIncomingConnections:</span> <span class="string">&lt;int&gt;</span></span><br><span class="line"><span class="attr">   wireObjectCheck:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   ipv6:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   unixDomainSocket:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">      pathPrefix:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      filePermissions:</span> <span class="string">&lt;int&gt;</span></span><br><span class="line"><span class="attr">   ssl:</span></span><br><span class="line"><span class="attr">      sslOnNormalPorts:</span> <span class="string">&lt;boolean&gt;</span>  <span class="comment"># deprecated since 2.6</span></span><br><span class="line"><span class="attr">      certificateSelector:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      clusterCertificateSelector:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      mode:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      PEMKeyFile:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      PEMKeyPassword:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      clusterFile:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      clusterPassword:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      CAFile:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      clusterCAFile:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      CRLFile:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      allowConnectionsWithoutCertificates:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">      allowInvalidCertificates:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">      allowInvalidHostnames:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">      disabledProtocols:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      FIPSMode:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   compression:</span></span><br><span class="line"><span class="attr">      compressors:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   serviceExecutor:</span> <span class="string">&lt;string&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>作用</th></tr></thead><tbody><tr><td><code>port</code></td><td><code>int</code></td><td>27017</td><td>设置mongodb的访问端口</td></tr><tr><td><code>bindIp</code></td><td><code>string</code></td><td><code>127.0.0.1</code></td><td>设置mongodb服务器监听ip地址，默认是127.0.0.1；如果监听多个ip地址，使用逗号隔开</td></tr><tr><td><code>bindIpAll</code></td><td><code>boolean</code></td><td><code>false</code></td><td>是否允许所有ip访问数据库</td></tr><tr><td><code>maxIncomingConnections</code></td><td><code>int</code></td><td>65536</td><td>最大并发链接数</td></tr><tr><td><code>wireObjectCheck</code></td><td><code>boolean</code></td><td><code>True</code></td><td>是否在收到客户端时验证所有请求，以防止客户端将格式错误或无效的BSON插入MongoDB数据库</td></tr><tr><td><code>ipv6</code></td><td><code>boolean</code></td><td><code>false</code></td><td>开启或关闭支持ipv6地址</td></tr><tr><td><code>unixDomainSocket.enabled</code></td><td><code>boolean</code></td><td><code>true</code></td><td>启用或禁用UNIX域套接字上的侦听</td></tr><tr><td><code>unixDomainSocket.pathPrefix</code></td><td><code>string</code></td><td><code>/tmp</code></td><td>UNIX套接字的路径</td></tr><tr><td><code>unixDomainSocket.filePermissions</code></td><td><code>int</code></td><td>0700</td><td>设置UNIX域套接字文件的权限</td></tr><tr><td><code>ssl.sslOnNormalPorts</code></td><td><code>boolean</code></td><td></td><td>不推荐使用,为mongos或启用或禁用TLS / SSL</td></tr><tr><td><code>ssl.certificateSelector</code></td><td><code>string</code></td><td></td><td>指定证书属性<br>1.<code>subject</code>:ASCII字符串<br>2.<code>thumbprint:</code>十六进制字符</td></tr><tr><td><code>ssl.clusterCertificateSelector</code></td><td><code>string</code></td><td></td><td>指定证书属性<br>1.<code>subject</code>:ASCII字符串<br>2.<code>thumbprint:</code>十六进制字符</td></tr><tr><td><code>ssl.mode</code></td><td><code>string</code></td><td></td><td>启用或禁用用于所有网络连接的TLS / SSL或混合TLS / SSL<br>1.<code>disabled</code>: 服务器不使用TLS / SSL。<br>2.<code>allowSSL</code>:服务器之间的连接不使用TLS / SSL。对于传入连接，服务器接受TLS / SSL和非TLS /非SSL。<br>3.<code>preferSSL</code>:服务器之间的连接使用TLS / SSL。对于传入连接，服务器接受TLS / SSL和非TLS /非SSL。<br>4.<code>requireSSL</code>:服务器仅使用和接受TLS / SSL加密连接。</td></tr><tr><td><code>ssl.PEMKeyFile</code></td><td><code>string</code></td><td></td><td>可以使用操作系统安全存储中的证书而不是PEM密钥文件</td></tr><tr><td><code>ssl.PEMKeyPassword</code></td><td><code>string</code></td><td></td><td>用于解密证书密钥文件的密码(<code>PEMKeyFile</code>)</td></tr><tr><td><code>ssl.clusterFile</code></td><td><code>string</code></td><td></td><td>使用操作系统安全存储中的证书而不是PEM密钥文件</td></tr><tr><td><code>ssl.clusterPassword</code></td><td><code>string</code></td><td></td><td>用于解密指定的x.509证书密钥文件的密码(<code>clusterFile</code>)</td></tr><tr><td><code>ssl.CAFile</code></td><td><code>string</code></td><td></td><td><code>.pem</code>包含证书颁发机构的根证书链的文件。<br><code>.pem</code>使用相对路径或绝对路径指定文件的文件名</td></tr><tr><td><code>ssl.clusterCAFile</code></td><td><code>string</code></td><td></td><td><code>.pem</code>包含证书颁发机构的根证书链的文件.<br>用于验证由建立连接的客户端提供的证书。<br><code>.pem</code>使用相对路径或绝对路径指定文件的文件名。</td></tr><tr><td><code>ssl.CRLFile</code></td><td><code>string</code></td><td></td><td><code>.pem</code>包含证书吊销列表的文件。<br><code>.pem</code>使用相对路径或绝对路径指定文件的文件名</td></tr><tr><td><code>ssl.allowConnectionsWithoutCertificates</code></td><td><code>boolean</code></td><td></td><td>建立连接时是否绕过TLS / SSL证书验证</td></tr><tr><td><code>ssl.allowInvalidCertificates</code></td><td><code>boolean</code></td><td></td><td>启用或禁用群集中其他服务器上的TLS / SSL证书的验证检查，并允许使用无效证书进行连接</td></tr><tr><td><code>ssl.allowInvalidHostnames</code></td><td><code>boolean</code></td><td><code>false</code></td><td>启用或禁用TLS / SSL证书的主机名的验证</td></tr><tr><td><code>ssl.disabledProtocols</code></td><td><code>string</code></td><td></td><td>接受使用特定协议的传入连接。要指定多个协议，请使用逗号分隔的协议列表<br><code>TLS1_0`，`TLS1_1`， `TLS1_2</code></td></tr><tr><td><code>ssl.FIPSMode</code></td><td><code>boolean</code></td><td></td><td>启用或禁用使用TLS / SSL库的FIPS模式</td></tr><tr><td>``compression.compressors`</td><td><code>string</code></td><td><code>snappy</code></td><td>实例之间通信的数据压缩器<br>1. <code>snappy</code><br>2. <code>zilb</code></td></tr><tr><td><code>serviceExecutor</code></td><td><code>string</code></td><td><code>synchronous</code></td><td><code>synchronous</code>:使用同步网络和管理上的每个连接其网络的线程池<br><code>adaptive</code>:使用异步网络和管理上的每个连接其网络的线程池</td></tr></tbody></table><ul><li>注意点:PEMKeyFile和clusterFile只能选择一个</li></ul><h2 id="security"><a href="#security" class="headerlink" title="security"></a><code>security</code></h2><p>官方文档地址:<a href="https://docs.mongodb.com/manual/reference/configuration-options/#security-options" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/#security-options</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">security:</span></span><br><span class="line"><span class="attr">   keyFile:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   clusterAuthMode:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   authorization:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   transitionToAuth:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   javascriptEnabled:</span>  <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   redactClientLogData:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   sasl:</span></span><br><span class="line"><span class="attr">      hostName:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      serviceName:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      saslauthdSocketPath:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   enableEncryption:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   encryptionCipherMode:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   encryptionKeyFile:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   kmip:</span></span><br><span class="line"><span class="attr">      keyIdentifier:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      rotateMasterKey:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">      serverName:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      port:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      clientCertificateFile:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      clientCertificatePassword:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      clientCertificateSelector:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      serverCAFile:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   ldap:</span></span><br><span class="line"><span class="attr">      servers:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      bind:</span></span><br><span class="line"><span class="attr">         method:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">         saslMechanisms:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">         queryUser:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">         queryPassword:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">         useOSDefaults:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">      transportSecurity:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      timeoutMS:</span> <span class="string">&lt;int&gt;</span></span><br><span class="line"><span class="attr">      userToDNMapping:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      authz:</span></span><br><span class="line"><span class="attr">         queryTemplate:</span> <span class="string">&lt;string&gt;</span></span><br></pre></td></tr></table></figure><h3 id="security-keyFile"><a href="#security-keyFile" class="headerlink" title="security.keyFile"></a><code>security.keyFile</code></h3><ul><li><p>类型：<code>string</code></p></li><li><p>作用：密钥文件的路径，用于存储MongoDB实例用于在分片集群或副本集中相互进行身份验证的共享密钥 </p></li></ul><h3 id="security-clusterAuthMode"><a href="#security-clusterAuthMode" class="headerlink" title="security.clusterAuthMode"></a><code>security.clusterAuthMode</code></h3><ul><li><p>类型：<code>string</code></p></li><li><p>作用：用于群集身份验证的身份验证模式</p></li><li><table><thead><tr><th>值</th><th>作用</th></tr></thead><tbody><tr><td><code>keyFile</code></td><td>使用密钥文件进行身份验证。只接受密钥文件。</td></tr><tr><td><code>sendKeyFile</code></td><td>发送密钥文件进行身份验证，但可以接受密钥文件和x.509证书。</td></tr><tr><td><code>sendX509</code></td><td>发送x.509证书进行身份验证，但可以接受密钥文件和x.509证书。</td></tr><tr><td><code>x509</code></td><td>(推荐) 发送x.509证书以进行身份验证，并仅接受x.509证书</td></tr></tbody></table></li><li><p>如果使用x.509身份验证，–sslCAFile或ssl.CAFile 必须指定，除非使用–sslCertificateSelector</p></li></ul><h3 id="security-authorization"><a href="#security-authorization" class="headerlink" title="security.authorization"></a><code>security.authorization</code></h3><ul><li><p>类型：<code>string</code></p></li><li><p>默认值：<code>disabled</code></p></li><li><p>作用：启用或禁用基于角色的访问控制（RBAC）以管理每个用户对数据库资源和操作的访问</p></li><li><table><thead><tr><th>值</th><th>作用</th></tr></thead><tbody><tr><td><code>enabled</code></td><td>用户只能访问已被授予权限的数据库资源和操作。</td></tr><tr><td><code>disabled</code></td><td>用户可以访问任何数据库并执行任何操作。</td></tr></tbody></table></li></ul><h2 id="setParameter"><a href="#setParameter" class="headerlink" title="setParameter"></a><code>setParameter</code></h2><p>官方文档地址:<a href="https://docs.mongodb.com/manual/reference/configuration-options/#setparameter-option" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/#setparameter-option</a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setParameter:</span><br><span class="line">   &lt;parameter1&gt;: &lt;value1&gt;</span><br><span class="line">   &lt;parameter2&gt;: &lt;value2&gt;</span><br></pre></td></tr></table></figure><p><a href="https://docs.mongodb.com/manual/reference/parameters/" target="_blank" rel="noopener">查看参数列表</a></p><h2 id="storage"><a href="#storage" class="headerlink" title="storage"></a><code>storage</code></h2><p>官方文档地址:<a href="https://docs.mongodb.com/manual/reference/configuration-options/#storage-options" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/#storage-options</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">storage:</span></span><br><span class="line"><span class="attr">   dbPath:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   indexBuildRetry:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   repairPath:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   journal:</span></span><br><span class="line"><span class="attr">      enabled:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">      commitIntervalMs:</span> <span class="string">&lt;num&gt;</span></span><br><span class="line"><span class="attr">   directoryPerDB:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   syncPeriodSecs:</span> <span class="string">&lt;int&gt;</span></span><br><span class="line"><span class="attr">   engine:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   wiredTiger:</span></span><br><span class="line"><span class="attr">      engineConfig:</span></span><br><span class="line"><span class="attr">         cacheSizeGB:</span> <span class="string">&lt;number&gt;</span></span><br><span class="line"><span class="attr">         journalCompressor:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">         directoryForIndexes:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">      collectionConfig:</span></span><br><span class="line"><span class="attr">         blockCompressor:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">      indexConfig:</span></span><br><span class="line"><span class="attr">         prefixCompression:</span> <span class="string">&lt;boolean&gt;</span></span><br><span class="line"><span class="attr">   inMemory:</span></span><br><span class="line"><span class="attr">      engineConfig:</span></span><br><span class="line"><span class="attr">         inMemorySizeGB:</span> <span class="string">&lt;number&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>作用</th></tr></thead><tbody><tr><td><code>dbPath</code></td><td><code>string</code></td><td><code>/data/db</code></td><td>设置数据存储文件目录</td></tr><tr><td><code>indexBuildRetry</code></td><td><code>boolean</code></td><td><code>true</code></td><td>开启或关闭是否在mongod下次启动重建不完整的索引<br>在in-memory存储引擎下不可用</td></tr><tr><td><code>repairPath</code></td><td><code>string</code></td><td>在<code>dbpath</code>下的<code>A _tmp_repairDatabase_&lt;num&gt;</code>文件目录</td><td>为进行恢复操作指定目录<br><br>注意:仅仅在MMAPv1存储引擎下可用</td></tr><tr><td><code>journal.enabled</code></td><td><code>boolean</code></td><td><code>true</code>(64-bit系统）；<code>false</code>（32-bit系统）</td><td>开启和关闭journal，为了保证数据文件的有效性和可恢复性；在设置了dbpath之后有效<br>在in-memory存储引擎下不可用</td></tr><tr><td><code>journal.commitIntervalMs</code></td><td><code>int</code></td><td>100或30</td><td>在MMAPv1上，如果日志与数据文件位于不同的块设备（例如，物理卷，RAID设备或LVM卷）上，则默认日志提交间隔为30毫秒<br>在WiredTiger上，默认日志提交间隔为100毫秒。</td></tr><tr><td><code>directoryPerDB</code></td><td><code>boolean</code></td><td><code>false</code></td><td>mongodb是否为每个数据库建立一个单独的路径，这个路径是在dbpath下创建的</td></tr><tr><td><code>engine</code></td><td><code>string</code></td><td><code>wiredTiger</code></td><td>数据存储引擎<br>1.<code>wiredTiger</code><br>2.<code>inMemory</code>:内存存储引擎<br>3.<code>mmapv1</code>:不推荐使用</td></tr><tr><td><code>wiredTiger.engineConfig.cacheSizeGB</code></td><td><code>float</code></td><td></td><td>WiredTiger将用于所有数据的内部缓存的最大大小<br>使用默认值就行</td></tr><tr><td><code>wiredTiger.engineConfig.journalCompressor</code></td><td><code>string</code></td><td><code>snappy</code></td><td>用于压缩WiredTiger日志数据的压缩类型</td></tr><tr><td><code>wiredTiger.collectionConfig.blockCompressor</code></td><td><code>string</code></td><td><code>snappy</code></td><td>用于压缩集合数据的压缩类型</td></tr><tr><td><code>wiredTiger.indexConfig.prefixCompression</code></td><td><code>boolean</code></td><td><code>true</code></td><td>启用或禁用索引数据的前缀压缩。</td></tr><tr><td><code>inmemory.engineConfig.inMemorySizeGB</code></td><td><code>float</code></td><td>物理内存的50%-1GB</td><td>设置缓冲区大小</td></tr></tbody></table><h2 id="operationProfiling"><a href="#operationProfiling" class="headerlink" title="operationProfiling"></a><code>operationProfiling</code></h2><p>官方文档地址:<a href="https://docs.mongodb.com/manual/reference/configuration-options/#operationprofiling-options" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/#operationprofiling-options</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">operationProfiling:</span></span><br><span class="line"><span class="attr">   mode:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   slowOpThresholdMs:</span> <span class="string">&lt;int&gt;</span></span><br><span class="line"><span class="attr">   slowOpSampleRate:</span> <span class="string">&lt;double&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>作用</th></tr></thead><tbody><tr><td><code>mode</code></td><td><code>string</code></td><td><code>off</code></td><td></td></tr><tr><td><code>slowOpThresholdMs</code></td><td><code>int</code></td><td>100</td><td>设置区分慢查询的一个阈值，比如100，当查询速度大于100ms，记录到日志中</td></tr><tr><td><code>slowOpSampleRate</code></td><td><code>double</code></td><td>1.0</td><td>应分析或记录的慢速操作部分</td></tr></tbody></table><h2 id="replication"><a href="#replication" class="headerlink" title="replication"></a><code>replication</code></h2><p>官方文档地址:<a href="https://docs.mongodb.com/manual/reference/configuration-options/#replication-options" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/#replication-options</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">replication:</span></span><br><span class="line"><span class="attr">   oplogSizeMB:</span> <span class="string">&lt;int&gt;</span></span><br><span class="line"><span class="attr">   replSetName:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   secondaryIndexPrefetch:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   enableMajorityReadConcern:</span> <span class="string">&lt;boolean&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>作用</th></tr></thead><tbody><tr><td><code>oplogSizeMB</code></td><td>int</td><td></td><td>设置复制日志文件的大小；</td></tr><tr><td><code>replSetName</code></td><td>string</td><td></td><td>副本集的名称。副本集中的所有主机必须具有相同的副本集名称</td></tr><tr><td><code>secondaryIndexPrefetch</code></td><td>string</td><td><code>all</code></td><td></td></tr><tr><td><code>enableMajorityReadConcern</code></td><td>boolean</td><td><code>true</code></td><td></td></tr></tbody></table><h2 id="sharding"><a href="#sharding" class="headerlink" title="sharding"></a><code>sharding</code></h2><p>官方文档地址:<a href="https://docs.mongodb.com/manual/reference/configuration-options/#sharding-options" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/#sharding-options</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sharding:</span></span><br><span class="line"><span class="attr">   clusterRole:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   archiveMovedChunks:</span> <span class="string">&lt;boolean&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>作用</th></tr></thead><tbody><tr><td><code>clusterRole</code></td><td><code>string</code></td><td></td><td>设置分片集群中的角色<br>1.<code>configsvr</code>:作为配置服务器，默认端口27019<br>2.<code>shardsvr</code>:作为一个分片，默认端口27018</td></tr><tr><td><code>archiveMovedChunks</code></td><td><code>boolean</code></td><td><code>false</code></td><td>在块迁移期间，分片是否保存从分片迁移的文档</td></tr></tbody></table><h2 id="auditLog"><a href="#auditLog" class="headerlink" title="auditLog"></a><code>auditLog</code></h2><p>官方文档地址:<a href="https://docs.mongodb.com/manual/reference/configuration-options/#auditlog-options" target="_blank" rel="noopener">https://docs.mongodb.com/manual/reference/configuration-options/#auditlog-options</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auditLog:</span></span><br><span class="line"><span class="attr">   destination:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   format:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   path:</span> <span class="string">&lt;string&gt;</span></span><br><span class="line"><span class="attr">   filter:</span> <span class="string">&lt;string&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>作用</th></tr></thead><tbody><tr><td><code>destination</code></td><td><code>string</code></td><td></td><td>审计日志位置<br><code>syslog</code>:JSON文件格式输出在系统日志中，window系统中不可用<br><code>console</code>:JSON格式输出<br><code>file</code>:输出到文件</td></tr><tr><td><code>format</code></td><td><code>format</code></td><td></td><td>设置设计日志输出格式；可用值：JSON/BSON</td></tr><tr><td><code>path</code></td><td><code>path</code></td><td></td><td>设计日志输出文件路径</td></tr><tr><td><code>filter</code></td><td><code>filter</code></td><td></td><td>审计日志过滤器</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> mongo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker部署MongoDB4.1基于X.509认证的副本集集群</title>
      <link href="/posts/78602df8/"/>
      <url>/posts/78602df8/</url>
      
        <content type="html"><![CDATA[<h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><ul><li>虽然部署的mongodb的版本是4.1.3，但是它使用的配置和命令都是4.2版本的（→_→）</li><li>最明显的改变时<code>ssl</code>的配置和命令都改成了<code>tls</code></li></ul><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><table><thead><tr><th>ip</th><th>端口</th><th>角色</th></tr></thead><tbody><tr><td>192.168.43.111</td><td>[27001,27002.27003]</td><td>shardsvr</td></tr><tr><td>192.168.43.112</td><td>[27001,27002.27003]</td><td>shardsvr</td></tr><tr><td>192.168.43.113</td><td>[27001,27002.27003]</td><td>shardsvr</td></tr><tr><td>192.168.43.111</td><td>[27010,27020]</td><td>configsvr,mongos</td></tr><tr><td>192.168.43.112</td><td>[27010,27020]</td><td>configsvr,mongos</td></tr><tr><td>192.168.43.113</td><td>[27010,27020]</td><td>configsvr,mongos</td></tr></tbody></table><h1 id="建立相关目录和配置文件"><a href="#建立相关目录和配置文件" class="headerlink" title="建立相关目录和配置文件"></a>建立相关目录和配置文件</h1><p>执行命令的服务器<strong>192.168.43.111，192.168.43.112，192.168.43.113</strong></p><h2 id="开启防火墙端口"><a href="#开启防火墙端口" class="headerlink" title="开启防火墙端口"></a>开启防火墙端口</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=27001/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=27002/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=27003/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=27010/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=27020/tcp --permanent</span><br><span class="line">systemctl restart firewalld.service</span><br></pre></td></tr></table></figure><h2 id="建立临时环境变量"><a href="#建立临时环境变量" class="headerlink" title="建立临时环境变量"></a>建立临时环境变量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 副本集mgo01</span></span><br><span class="line"><span class="built_in">export</span> mgo01_path=/home/mongo/shardsvr/mgo01</span><br><span class="line"><span class="built_in">export</span> mgo01_replSetName=mgo01</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> conf_dir=confdir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 副本集mgo02</span></span><br><span class="line"><span class="built_in">export</span> mgo02_path=/home/mongo/shardsvr/mgo02</span><br><span class="line"><span class="built_in">export</span> mgo02_replSetName=mgo02</span><br><span class="line"></span><br><span class="line"><span class="comment"># 副本集mgo03</span></span><br><span class="line"><span class="built_in">export</span> mgo03_path=/home/mongo/shardsvr/mgo03</span><br><span class="line"><span class="built_in">export</span> mgo03_replSetName=mgo03</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置服务器</span></span><br><span class="line"><span class="built_in">export</span> configsvr_path=/home/mongo/configsvr</span><br><span class="line"><span class="built_in">export</span> conf_replSetName=cfgReplSet</span><br><span class="line"></span><br><span class="line"><span class="comment"># mongos</span></span><br><span class="line"><span class="built_in">export</span> mongos_path=/home/mongo/mongos</span><br><span class="line"></span><br><span class="line"><span class="comment"># x.509证书文件存放位置</span></span><br><span class="line"><span class="built_in">export</span> keyfile=/home/mongo/keyfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># docker-compose.yml文件位置</span></span><br><span class="line"><span class="built_in">export</span> docker_path=/home/mongo</span><br></pre></td></tr></table></figure><h2 id="建立目录"><a href="#建立目录" class="headerlink" title="建立目录"></a>建立目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 副本集mgo01</span></span><br><span class="line">mkdir -p $&#123;mgo01_path&#125;/$&#123;conf_dir&#125;</span><br><span class="line">mkdir -p $&#123;mgo01_path&#125;/$&#123;conf_dir&#125;/log </span><br><span class="line">mkdir -p $&#123;mgo01_path&#125;/$&#123;conf_dir&#125;/pid</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置目录权限</span></span><br><span class="line">chmod 777 $&#123;mgo01_path&#125;/$&#123;conf_dir&#125;/log $&#123;mgo01_path&#125;/$&#123;conf_dir&#125;/pid</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 副本集mgo02</span></span><br><span class="line">mkdir -p $&#123;mgo02_path&#125;/$&#123;conf_dir&#125;</span><br><span class="line">mkdir -p $&#123;mgo02_path&#125;/$&#123;conf_dir&#125;/log </span><br><span class="line">mkdir -p $&#123;mgo02_path&#125;/$&#123;conf_dir&#125;/pid</span><br><span class="line">chmod 777 $&#123;mgo02_path&#125;/$&#123;conf_dir&#125;/log $&#123;mgo02_path&#125;/$&#123;conf_dir&#125;/pid</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 副本集mgo03</span></span><br><span class="line">mkdir -p $&#123;mgo03_path&#125;/$&#123;conf_dir&#125;</span><br><span class="line">mkdir -p $&#123;mgo03_path&#125;/$&#123;conf_dir&#125;/log </span><br><span class="line">mkdir -p $&#123;mgo03_path&#125;/$&#123;conf_dir&#125;/pid</span><br><span class="line">chmod 777 $&#123;mgo03_path&#125;/$&#123;conf_dir&#125;/log $&#123;mgo03_path&#125;/$&#123;conf_dir&#125;/pid</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> mongos</span></span><br><span class="line">mkdir -p $&#123;mongos_path&#125;/$&#123;conf_dir&#125;</span><br><span class="line">mkdir -p $&#123;mongos_path&#125;/$&#123;conf_dir&#125;/log</span><br><span class="line">mkdir -p $&#123;mongos_path&#125;/$&#123;conf_dir&#125;/pid</span><br><span class="line">chmod 777 $&#123;mongos_path&#125;/$&#123;conf_dir&#125;/log $&#123;mongos_path&#125;/$&#123;conf_dir&#125;/pid</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 证书文件</span></span><br><span class="line">mkdir -p $&#123;keyfile&#125;</span><br><span class="line"></span><br><span class="line">mkdir -p $&#123;docker_path&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置服务</span></span><br><span class="line">mkdir -p $&#123;configsvr_path&#125;/$&#123;conf_dir&#125;</span><br><span class="line">mkdir -p $&#123;configsvr_path&#125;/$&#123;conf_dir&#125;/log</span><br><span class="line">mkdir -p $&#123;configsvr_path&#125;/$&#123;conf_dir&#125;/pid</span><br><span class="line">chmod 777 $&#123;configsvr_path&#125;/$&#123;conf_dir&#125;/log $&#123;configsvr_path&#125;/$&#123;conf_dir&#125;/pid</span><br></pre></td></tr></table></figure><h2 id="建立配置文件"><a href="#建立配置文件" class="headerlink" title="建立配置文件"></a>建立配置文件</h2><ul><li><p><strong>shardsvr：mgo01</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;EOF&gt;</span> <span class="string">$&#123;mgo01_path&#125;/$&#123;conf_dir&#125;/mgo.conf</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line"><span class="attr">   path:</span> <span class="string">/data/$&#123;conf_dir&#125;/log/mgo.log</span></span><br><span class="line"><span class="attr">   destination:</span> <span class="string">file</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line"><span class="attr">  dbPath:</span> <span class="string">/data/db</span></span><br><span class="line"><span class="attr">  journal:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  directoryPerDB:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">security:</span></span><br><span class="line"><span class="attr">   keyFile:</span> <span class="string">/keyfile/mgo.pem</span></span><br><span class="line"><span class="attr">   clusterAuthMode:</span> <span class="string">x509</span></span><br><span class="line"><span class="attr">   authorization:</span> <span class="string">enabled</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line"><span class="attr">  pidFilePath:</span> <span class="string">/data/$&#123;conf_dir&#125;/pid/mgo.pid</span></span><br><span class="line"></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line"><span class="attr">  bindIpAll:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tls:</span></span><br><span class="line"><span class="attr">    CAFile:</span> <span class="string">/keyfile/ca.pem</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="string">requireTLS</span></span><br><span class="line"><span class="attr">    certificateKeyFile:</span> <span class="string">/keyfile/mgo.pem</span></span><br><span class="line"></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line"><span class="attr">  replSetName:</span> <span class="string">$&#123;mgo01_replSetName&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line"><span class="attr">  clusterRole:</span> <span class="string">shardsvr</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></li><li><p><strong>shardsvr：mgo02</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;EOF&gt;</span> <span class="string">$&#123;mgo02_path&#125;/$&#123;conf_dir&#125;/mgo.conf</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line"><span class="attr">   path:</span> <span class="string">/data/$&#123;conf_dir&#125;/log/mgo.log</span></span><br><span class="line"><span class="attr">   destination:</span> <span class="string">file</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line"><span class="attr">  dbPath:</span> <span class="string">/data/db</span></span><br><span class="line"><span class="attr">  journal:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  directoryPerDB:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">security:</span></span><br><span class="line"><span class="attr">   keyFile:</span> <span class="string">/keyfile/mgo.pem</span></span><br><span class="line"><span class="attr">   clusterAuthMode:</span> <span class="string">x509</span></span><br><span class="line"><span class="attr">   authorization:</span> <span class="string">enabled</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line"><span class="attr">  pidFilePath:</span> <span class="string">/data/$&#123;conf_dir&#125;/pid/mgo.pid</span></span><br><span class="line"></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line"><span class="attr">  bindIpAll:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tls:</span></span><br><span class="line"><span class="attr">    CAFile:</span> <span class="string">/keyfile/ca.pem</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="string">requireTLS</span></span><br><span class="line"><span class="attr">    certificateKeyFile:</span> <span class="string">/keyfile/mgo.pem</span></span><br><span class="line"></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line"><span class="attr">  replSetName:</span> <span class="string">$&#123;mgo02_replSetName&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line"><span class="attr">  clusterRole:</span> <span class="string">shardsvr</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></li><li><p><strong>shardsvr：mgo03</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;EOF&gt;</span> <span class="string">$&#123;mgo03_path&#125;/$&#123;conf_dir&#125;/mgo.conf</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line"><span class="attr">   path:</span> <span class="string">/data/$&#123;conf_dir&#125;/log/mgo.log</span></span><br><span class="line"><span class="attr">   destination:</span> <span class="string">file</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line"><span class="attr">  dbPath:</span> <span class="string">/data/db</span></span><br><span class="line"><span class="attr">  journal:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  directoryPerDB:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">security:</span></span><br><span class="line"><span class="attr">   keyFile:</span> <span class="string">/keyfile/mgo.pem</span></span><br><span class="line"><span class="attr">   clusterAuthMode:</span> <span class="string">x509</span></span><br><span class="line"><span class="attr">   authorization:</span> <span class="string">enabled</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line"><span class="attr">  pidFilePath:</span> <span class="string">/data/$&#123;conf_dir&#125;/pid/mgo.pid</span></span><br><span class="line"></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line"><span class="attr">  bindIpAll:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tls:</span></span><br><span class="line"><span class="attr">    CAFile:</span> <span class="string">/keyfile/ca.pem</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="string">requireTLS</span></span><br><span class="line"><span class="attr">    certificateKeyFile:</span> <span class="string">/keyfile/mgo.pem</span> </span><br><span class="line"></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line"><span class="attr">  replSetName:</span> <span class="string">$&#123;mgo03_replSetName&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line"><span class="attr">  clusterRole:</span> <span class="string">shardsvr</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></li><li><p><strong>configsvr</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;EOF&gt;</span> <span class="string">$&#123;configsvr_path&#125;/$&#123;conf_dir&#125;/mgo.conf</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">/data/$&#123;conf_dir&#125;/log/mgo.log</span></span><br><span class="line"><span class="attr">  destination:</span> <span class="string">file</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line"><span class="attr">  dbPath:</span> <span class="string">/data/db</span></span><br><span class="line"><span class="attr">  journal:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  directoryPerDB:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">security:</span></span><br><span class="line"><span class="attr">   keyFile:</span> <span class="string">/keyfile/mgo.pem</span></span><br><span class="line"><span class="attr">   clusterAuthMode:</span> <span class="string">x509</span></span><br><span class="line"><span class="attr">   authorization:</span> <span class="string">enabled</span></span><br><span class="line"></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line"><span class="attr">  replSetName:</span> <span class="string">$&#123;conf_replSetName&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line"><span class="attr">  pidFilePath:</span> <span class="string">/data/$&#123;conf_dir&#125;/pid/mgo.pid</span></span><br><span class="line"></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line"><span class="attr">  bindIpAll:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tls:</span></span><br><span class="line"><span class="attr">    CAFile:</span> <span class="string">/keyfile/ca.pem</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="string">requireTLS</span></span><br><span class="line"><span class="attr">    certificateKeyFile:</span> <span class="string">/keyfile/mgo.pem</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line"><span class="attr">  clusterRole:</span> <span class="string">configsvr</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></li><li><p><strong>mongos</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;EOF&gt;</span> <span class="string">$&#123;mongos_path&#125;/$&#123;conf_dir&#125;/mgo.conf</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">/data/$&#123;conf_dir&#125;/log/mgo.log</span></span><br><span class="line"><span class="attr">  destination:</span> <span class="string">file</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line"><span class="attr">  pidFilePath:</span> <span class="string">/data/$&#123;conf_dir&#125;/pid/mgo.pid</span></span><br><span class="line"></span><br><span class="line"><span class="attr">security:</span></span><br><span class="line"><span class="attr">  keyFile:</span> <span class="string">/keyfile/mgo.pem</span></span><br><span class="line"><span class="attr">  clusterAuthMode:</span> <span class="string">x509</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line"><span class="attr">  bindIpAll:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  tls:</span></span><br><span class="line"><span class="attr">    CAFile:</span> <span class="string">/keyfile/ca.pem</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="string">requireTLS</span></span><br><span class="line"><span class="attr">    certificateKeyFile:</span> <span class="string">/keyfile/mgo.pem</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sharding:</span></span><br><span class="line"><span class="attr">  configDB:</span> <span class="string">$&#123;conf_replSetName&#125;/192.168.43.111:27010,192.168.43.112:27010,192.168.43.113:27010</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></li><li><p><strong>docker-compose.yml</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">cat</span> <span class="string">&lt;&lt;EOF&gt;</span> <span class="string">$&#123;docker_path&#125;/docker-compose.yml</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  mgo01:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">mongo:4.1</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">$&#123;mgo01_path&#125;:/data</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">$&#123;keyfile&#125;:/keyfile</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"27001:27018"</span></span><br><span class="line"><span class="attr">    command:</span> <span class="bullet">-f</span> <span class="string">/data/$&#123;conf_dir&#125;/mgo.conf</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  mgo02:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">mongo:4.1</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">$&#123;mgo02_path&#125;:/data</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">$&#123;keyfile&#125;:/keyfile</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"27002:27018"</span></span><br><span class="line"><span class="attr">    command:</span> <span class="bullet">-f</span> <span class="string">/data/$&#123;conf_dir&#125;/mgo.conf</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">  mgo03:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">mongo:4.1</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">$&#123;mgo03_path&#125;:/data</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">$&#123;keyfile&#125;:/keyfile</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"27003:27018"</span></span><br><span class="line"><span class="attr">    command:</span> <span class="bullet">-f</span> <span class="string">/data/$&#123;conf_dir&#125;/mgo.conf</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  mgoConfig:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">mongo:4.1</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">$&#123;configsvr_path&#125;:/data</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">$&#123;keyfile&#125;:/keyfile</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"27010:27019"</span></span><br><span class="line"><span class="attr">    command:</span> <span class="bullet">-f</span> <span class="string">/data/$&#123;conf_dir&#125;/mgo.conf</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  mongos:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">mongo:4.1</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">$&#123;mongos_path&#125;:/data</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">$&#123;keyfile&#125;:/keyfile</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"27020:27017"</span></span><br><span class="line"><span class="attr">    entrypoint:</span></span><br><span class="line">      <span class="string">"mongos"</span></span><br><span class="line"><span class="attr">    command:</span></span><br><span class="line"><span class="bullet">      -</span><span class="string">f</span> <span class="string">/data/$&#123;conf_dir&#125;/mgo.conf</span> </span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></li><li><p><strong>创建x.509证书文件(只要一台服务器执行）</strong></p><p><strong>本例使用的是192.168.43.113服务器</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /home/mgo_keyfile</span><br><span class="line"><span class="built_in">cd</span> /home/mgo_keyfile</span><br><span class="line"></span><br><span class="line">openssl req -passout pass:password -new -x509 -keyout ca_p.pem -out ca.pem -subj <span class="string">"/CN=CHC/OU=MGO/O=MongoDB/L=NY/ST=NY/C=CN"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 192.168.43.111的证书</span></span><br><span class="line">openssl req -newkey rsa:2048 -nodes -out mgo-111.csr -keyout mgo-111.key -subj <span class="string">'/CN=192.168.43.111/OU=MGO/O=MongoDB/L=NY/ST=NY/C=CN'</span></span><br><span class="line"></span><br><span class="line">openssl x509 -passin pass:password -days 3650 -sha256 -req -<span class="keyword">in</span> mgo-111.csr -signkey mgo-111.key -CA ca.pem -CAkey ca_p.pem -CAcreateserial -out mgo-111.crt</span><br><span class="line"></span><br><span class="line">cat mgo-111.crt mgo-111.key &gt; mgo-111.pem</span><br><span class="line"></span><br><span class="line"><span class="comment"># 192.168.43.112的证书</span></span><br><span class="line">openssl req -newkey rsa:2048 -nodes -out mgo-112.csr -keyout mgo-112.key -subj <span class="string">'/CN=192.168.43.112/OU=MGO/O=MongoDB/L=NY/ST=NY/C=CN'</span></span><br><span class="line"></span><br><span class="line">openssl x509 -passin pass:password -days 3650 -sha256 -req -<span class="keyword">in</span> mgo-112.csr -signkey mgo-112.key -CA ca.pem -CAkey ca_p.pem -CAcreateserial -out mgo-112.crt</span><br><span class="line"></span><br><span class="line">cat mgo-112.crt mgo-112.key &gt; mgo-112.pem</span><br><span class="line"></span><br><span class="line"><span class="comment"># 192.168.43.113的证书</span></span><br><span class="line">openssl req -newkey rsa:2048 -nodes -out mgo-113.csr -keyout mgo-113.key -subj <span class="string">'/CN=192.168.43.113/OU=MGO/O=MongoDB/L=NY/ST=NY/C=CN'</span></span><br><span class="line"></span><br><span class="line">openssl x509 -passin pass:password -days 3650 -sha256 -req -<span class="keyword">in</span> mgo-113.csr -signkey mgo-113.key -CA ca.pem -CAkey ca_p.pem -CAcreateserial -out mgo-113.crt</span><br><span class="line"></span><br><span class="line">cat mgo-113.crt mgo-113.key &gt; mgo-113.pem</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建具有超级管理员权限的客户端证书文件</span></span><br><span class="line">openssl req -newkey rsa:2048 -nodes -out root.csr -keyout root.key -subj <span class="string">'/CN=ROOT/OU=MGO/O=MongoDB/L=NY/ST=NY/C=CN'</span></span><br><span class="line"></span><br><span class="line">openssl x509 -passin pass:password -sha256 -days 3650 -req -<span class="keyword">in</span> root.csr -signkey root.key -CA ca.pem -CAkey ca_p.pem -CAcreateserial -nameopt RFC2253 -out root.crt</span><br><span class="line"></span><br><span class="line">cat root.crt root.key &gt; root.pem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝证书到192.168.43.113的证书目录</span></span><br><span class="line">cp ca.pem <span class="variable">$&#123;keyfile&#125;</span></span><br><span class="line">cp mgo-113.pem <span class="variable">$&#123;keyfile&#125;</span>/mgo.pem</span><br><span class="line">cp root.pem <span class="variable">$&#123;keyfile&#125;</span>/root.pem</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝证书到192.168.43.112的证书目录</span></span><br><span class="line">scp ca.pem root@192.168.43.112:<span class="variable">$&#123;keyfile&#125;</span></span><br><span class="line">scp mgo-112.pem root@192.168.43.112:<span class="variable">$&#123;keyfile&#125;</span>/mgo.pem</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝证书到192.168.43.111的证书目录</span></span><br><span class="line">scp ca.pem root@192.168.43.111:<span class="variable">$&#123;keyfile&#125;</span></span><br><span class="line">scp mgo-111.pem root@192.168.43.111:<span class="variable">$&#123;keyfile&#125;</span>/mgo.pem</span><br></pre></td></tr></table></figure></li></ul><h2 id="执行docker-compose"><a href="#执行docker-compose" class="headerlink" title="执行docker-compose"></a>执行docker-compose</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd $&#123;docker_path&#125;</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="http://qiniu.caihc.site/mongo/mongo_docker.PNG" alt></p><h1 id="创建复制集"><a href="#创建复制集" class="headerlink" title="创建复制集"></a>创建复制集</h1><ul><li><p><strong>192.168.43.113</strong></p><ol><li><strong>创建mgo01复制集</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入docker的交互界面</span></span><br><span class="line">cd $&#123;docker_path&#125;</span><br><span class="line">docker-compose exec mgo01 bash</span><br></pre></td></tr></table></figure><p><img src="http://qiniu.caihc.site/mongo/mongo_mgo01.PNG" alt></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 连接mongodb</span></span><br><span class="line">cd /keyfile</span><br><span class="line"></span><br><span class="line">mongo --host 192.168.43.111 --port 27001 --tls --tlsCertificateKeyFile root.pem --tlsCAFile ca.pem --authenticationMechanism MONGODB-X509 --authenticationDatabase='$external'</span><br></pre></td></tr></table></figure><p><img src="http://qiniu.caihc.site/mongo/mongo_root.PNG" alt></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建mgo01复制集</span></span><br><span class="line">config = &#123; _id:<span class="string">"mgo01"</span>, members:[</span><br><span class="line">&#123;_id:0,host:<span class="string">"192.168.43.111:27001"</span>&#125;,</span><br><span class="line">&#123;_id:1,host:<span class="string">"192.168.43.112:27001"</span>&#125;,</span><br><span class="line">&#123;_id:2,host:<span class="string">"192.168.43.113:27001"</span>&#125;]</span><br><span class="line">&#125;;</span><br><span class="line">rs.initiate(config);</span><br><span class="line">rs.conf();</span><br><span class="line"><span class="comment"># 退出mongo shell</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p><strong>创建mgo02复制集</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mongo --host 192.168.43.111 --port 27002 --tls --tlsCertificateKeyFile root.pem --tlsCAFile ca.pem --authenticationMechanism MONGODB-X509 --authenticationDatabase=<span class="string">'$external'</span></span><br><span class="line"></span><br><span class="line">config = &#123; _id:<span class="string">"mgo02"</span>, members:[</span><br><span class="line">&#123;_id:0,host:<span class="string">"192.168.43.111:27002"</span>&#125;,</span><br><span class="line">&#123;_id:1,host:<span class="string">"192.168.43.112:27002"</span>&#125;,</span><br><span class="line">&#123;_id:2,host:<span class="string">"192.168.43.113:27002"</span>&#125;]</span><br><span class="line">&#125;;</span><br><span class="line">rs.initiate(config);</span><br><span class="line">rs.conf();</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出mongo shell</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><ol start="3"><li><p><strong>创建mgo03复制集</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mongo --host 192.168.43.111 --port 27003 --tls --tlsCertificateKeyFile root.pem --tlsCAFile ca.pem --authenticationMechanism MONGODB-X509 --authenticationDatabase=<span class="string">'$external'</span></span><br><span class="line"></span><br><span class="line">config = &#123; _id:<span class="string">"mgo03"</span>, members:[</span><br><span class="line">&#123;_id:0,host:<span class="string">"192.168.43.111:27003"</span>&#125;,</span><br><span class="line">&#123;_id:1,host:<span class="string">"192.168.43.112:27003"</span>&#125;,</span><br><span class="line">&#123;_id:2,host:<span class="string">"192.168.43.113:27003"</span>&#125;]</span><br><span class="line">&#125;;</span><br><span class="line">rs.initiate(config);</span><br><span class="line">rs.conf();</span><br></pre></td></tr></table></figure></li><li><p><strong>创建配置服务configsvr</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mongo --host 192.168.43.111 --port 27010 --tls --tlsCertificateKeyFile root.pem --tlsCAFile ca.pem --authenticationMechanism MONGODB-X509 --authenticationDatabase=<span class="string">'$external'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">config = &#123; _id:<span class="string">"cfgReplSet"</span>,configsvr:<span class="literal">true</span>,members:[</span><br><span class="line">&#123;_id:0,host:<span class="string">"192.168.43.111:27010"</span>&#125;,</span><br><span class="line">&#123;_id:1,host:<span class="string">"192.168.43.112:27010"</span>&#125;,</span><br><span class="line">&#123;_id:2,host:<span class="string">"192.168.43.113:27010"</span>&#125;]</span><br><span class="line">&#125;;</span><br><span class="line">rs.initiate(config);</span><br><span class="line">rs.conf();</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置仲裁节点或者权重"><a href="#配置仲裁节点或者权重" class="headerlink" title="配置仲裁节点或者权重"></a>配置仲裁节点或者权重</h2><p>  本例使用的是权重方式</p><ul><li><p>权重</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意配置权重要在PRIMARY节点才可以</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 192.168.43.111</span></span><br><span class="line">conf = rs.config()    </span><br><span class="line"></span><br><span class="line">conf.members[0].priority = 3</span><br><span class="line"></span><br><span class="line">conf.members[1].priority = 2</span><br><span class="line"></span><br><span class="line">conf.members[2].priority = 1</span><br><span class="line"></span><br><span class="line">rs.reconfig(conf)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 192.168.43.112</span></span><br><span class="line">conf = rs.config()    </span><br><span class="line"></span><br><span class="line">conf.members[0].priority = 2</span><br><span class="line"></span><br><span class="line">conf.members[1].priority = 3</span><br><span class="line"></span><br><span class="line">conf.members[2].priority = 1</span><br><span class="line"></span><br><span class="line">rs.reconfig(conf)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 192.168.43.113</span></span><br><span class="line">conf = rs.config()</span><br><span class="line"></span><br><span class="line">conf.members[0].priority = 1</span><br><span class="line"></span><br><span class="line">conf.members[1].priority = 2</span><br><span class="line"></span><br><span class="line">conf.members[2].priority = 3</span><br><span class="line"></span><br><span class="line">rs.reconfig(conf)</span><br></pre></td></tr></table></figure></li><li><p>仲裁节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mgo01</span></span><br><span class="line">rs.addArb(<span class="string">'192.168.43.114:27001'</span>);</span><br><span class="line"><span class="comment"># mgo02</span></span><br><span class="line">rs.addArb(<span class="string">'192.168.43.114:27002'</span>);</span><br><span class="line"><span class="comment"># mgo03</span></span><br><span class="line">rs.addArb(<span class="string">'192.168.43.114:27003'</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="添加隐藏节点"><a href="#添加隐藏节点" class="headerlink" title="添加隐藏节点"></a>添加隐藏节点</h2><p>  本例不使用隐藏节点</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mgo01</span></span><br><span class="line">rs.add(<span class="string">'192.168.43.114:27031'</span>);</span><br><span class="line">cfg = rs.conf()</span><br><span class="line">cfg.members[5].priority = 0</span><br><span class="line">cfg.members[5].hidden = <span class="literal">true</span></span><br><span class="line">rs.reconfig(cfg)</span><br><span class="line"></span><br><span class="line"><span class="comment"># mgo02</span></span><br><span class="line">rs.add(<span class="string">'192.168.43.114:27032'</span>);</span><br><span class="line">cfg = rs.conf()</span><br><span class="line">cfg.members[5].priority = 0</span><br><span class="line">cfg.members[5].hidden = <span class="literal">true</span></span><br><span class="line">rs.reconfig(cfg)</span><br><span class="line"></span><br><span class="line"><span class="comment"># mgo01</span></span><br><span class="line">rs.add(<span class="string">'192.168.43.114:27032'</span>);</span><br><span class="line">cfg = rs.conf()</span><br><span class="line">cfg.members[5].priority = 0</span><br><span class="line">cfg.members[5].hidden = <span class="literal">true</span></span><br><span class="line">rs.reconfig(cfg)</span><br></pre></td></tr></table></figure><h1 id="添加分片"><a href="#添加分片" class="headerlink" title="添加分片"></a>添加分片</h1><ul><li><h2 id="添加分片，不能添加arbiter节点"><a href="#添加分片，不能添加arbiter节点" class="headerlink" title="添加分片，不能添加arbiter节点"></a>添加分片，不能添加arbiter节点</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker-compose <span class="built_in">exec</span> mgo01 bash</span><br><span class="line"><span class="built_in">cd</span> keyfile/</span><br><span class="line"></span><br><span class="line">mongo --host 192.168.43.113 --port 27020 --tls --tlsCertificateKeyFile root.pem --tlsCAFile ca.pem --authenticationMechanism MONGODB-X509 --authenticationDatabase=<span class="string">'$external'</span></span><br><span class="line"></span><br><span class="line">sh.addShard(<span class="string">"mgo01/192.168.43.111:27001,192.168.43.112:27001,192.168.43.113:27001"</span>);</span><br><span class="line">sh.addShard(<span class="string">"mgo02/192.168.43.111:27002,192.168.43.112:27002,192.168.43.113:27002"</span>);</span><br><span class="line">sh.addShard(<span class="string">"mgo03/192.168.43.111:27003,192.168.43.112:27003,192.168.43.113:27003"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看配置状态</span></span><br><span class="line">sh.status()*</span><br></pre></td></tr></table></figure></li><li><h2 id="声明库和表要分片"><a href="#声明库和表要分片" class="headerlink" title="声明库和表要分片"></a>声明库和表要分片</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mongo --host 192.168.43.113 --port 27020 --tls --tlsCertificateKeyFile root.pem --tlsCAFile ca.pem --authenticationMechanism MONGODB-X509 --authenticationDatabase=<span class="string">'$external'</span></span><br><span class="line"></span><br><span class="line">use admin</span><br><span class="line">db.runCommand(&#123;enablesharding:<span class="string">"testdb"</span>&#125;)</span><br><span class="line">sh.shardCollection( <span class="string">"testdb.books"</span>, &#123;id : <span class="string">"hashed"</span> &#125; )</span><br><span class="line"></span><br><span class="line">sh.shardCollection( <span class="string">"testdb.books"</span>, &#123;id : <span class="string">"hashed"</span> &#125; )</span><br></pre></td></tr></table></figure></li><li><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use testdb</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">20000</span>; i++)&#123;db.books.save(&#123;<span class="attr">id</span>:i,<span class="attr">name</span>:<span class="string">"ttbook"</span>,<span class="attr">sex</span>:<span class="string">"male"</span>,<span class="attr">age</span>:<span class="number">27</span>,<span class="attr">value</span>:<span class="string">"test"</span>&#125;)&#125;</span><br><span class="line"></span><br><span class="line"># 查看分片情况</span><br><span class="line">db.books.stats()</span><br><span class="line">sh.status()</span><br></pre></td></tr></table></figure></li></ul><h1 id="创建指定权限的用户"><a href="#创建指定权限的用户" class="headerlink" title="创建指定权限的用户"></a>创建指定权限的用户</h1><ul><li><p>先用root证书的用户在创建一个库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mongos&gt; use dd</span><br><span class="line">switched to db dd</span><br><span class="line">mongos&gt; db.users.insert(&#123;<span class="string">"username"</span>:<span class="string">"chc"</span>,<span class="string">"age"</span>:20&#125;)</span><br><span class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : 1 &#125;)</span><br><span class="line">mongos&gt; show dbs</span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.002GB</span><br><span class="line">dd      0.000GB</span><br><span class="line">testdb  0.001GB</span><br><span class="line">mongos&gt;</span><br></pre></td></tr></table></figure></li><li><p>创建一个只有testdb读写权限的用户</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/mgo_keyfile</span><br><span class="line"><span class="comment"># 创建新用户证书</span></span><br><span class="line">openssl req -newkey rsa:2048 -nodes -out test.csr -keyout test.key -subj <span class="string">'/C=CN/ST=NY/L=NY/O=MongoDB/OU=testdb/CN=CHC'</span></span><br><span class="line"></span><br><span class="line">openssl x509 -passin pass:password -sha256 -days 3650 -req  -<span class="keyword">in</span> test.csr -signkey test.key -CA ca.pem -CAkey ca_p.pem -CAcreateserial -out test.crt -nameopt RFC2253</span><br><span class="line"></span><br><span class="line">cat test.crt test.key &gt; test.pem</span><br><span class="line"></span><br><span class="line">cp test.pem <span class="variable">$&#123;keyfile&#125;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;docker_path&#125;</span></span><br><span class="line">docker-compose <span class="built_in">exec</span> mgo01 bash</span><br><span class="line"><span class="built_in">cd</span> keyfile/</span><br><span class="line"></span><br><span class="line">mongo --host 192.168.43.111 --port 27020 --tls --tlsCertificateKeyFile root.pem --tlsCAFile ca.pem --authenticationMechanism MONGODB-X509 --authenticationDatabase=<span class="string">'$external'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line">db.getSiblingDB(<span class="string">"<span class="variable">$external</span>"</span>).runCommand(</span><br><span class="line">  &#123;</span><br><span class="line">    createUser: <span class="string">"CN=CHC,OU=testdb,O=MongoDB,L=NY,ST=NY,C=CN"</span>,</span><br><span class="line">    roles: [</span><br><span class="line">         &#123; role: <span class="string">"readWrite"</span>, db: <span class="string">"testdb"</span> &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mongo --host 192.168.43.111 --port 27020 --tls --tlsCertificateKeyFile test.pem --tlsCAFile ca.pem --authenticationMechanism MONGODB-X509 --authenticationDatabase=<span class="string">'$external'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 就只能看到testdb</span></span><br><span class="line">mongos&gt; show dbs</span><br><span class="line">testdb  0.001GB</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> mongo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang的pprof基本使用</title>
      <link href="/posts/cff0c658/"/>
      <url>/posts/cff0c658/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是pprof"><a href="#什么是pprof" class="headerlink" title="什么是pprof"></a>什么是pprof</h1><p>pprof 是用于可视化和分析性能分析的工具</p><h1 id="开启pprof"><a href="#开启pprof" class="headerlink" title="开启pprof"></a>开启pprof</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">_ <span class="string">"net/http/pprof"</span> <span class="comment">// pprof会自动注册 handler 到 http server,从而开启pprof</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"runtime"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="comment">// 限制 CPU 使用数，避免过载</span></span><br><span class="line">runtime.GOMAXPROCS(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对锁调用的跟踪</span></span><br><span class="line">runtime.SetMutexProfileFraction(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对阻塞操作的跟踪</span></span><br><span class="line">runtime.SetBlockProfileRate(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 启动一个 http server</span></span><br><span class="line"><span class="keyword">if</span> err := http.ListenAndServe(<span class="string">":8080"</span>, <span class="literal">nil</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>&#123;</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>使用浏览器访问:<code>http://127.0.0.1:8080/debug/pprof/</code></p><p><img src="http://qiniu.caihc.site/go/pprof/pprof.PNG" alt></p><p>程序采样的数据分别:</p><table><thead><tr><th align="center">类型</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">allocs</td><td align="center">内存分配情况的采样信息</td></tr><tr><td align="center">block</td><td align="center">阻塞操作情况的采样信息</td></tr><tr><td align="center">cmdline</td><td align="center">显示程序启动命令及参数</td></tr><tr><td align="center">goroutine</td><td align="center">当前所有协程的堆栈信息</td></tr><tr><td align="center">heap</td><td align="center">堆上内存使用情况的采样信息</td></tr><tr><td align="center">mutex</td><td align="center">锁争用情况的采样信息</td></tr><tr><td align="center">profile</td><td align="center">CPU 占用情况的采样信息</td></tr><tr><td align="center">threadcreate</td><td align="center">系统线程创建情况的采样信息</td></tr><tr><td align="center">trace</td><td align="center">程序运行跟踪信息</td></tr></tbody></table><p>由于直接阅读采样信息缺乏直观性，我们需要借助 <code>go tool pprof</code> 命令来排查问题，这个命令是 go 原生自带的，所以不用额外安装</p></li></ul><h1 id="安装图形化工具graphviz"><a href="#安装图形化工具graphviz" class="headerlink" title="安装图形化工具graphviz"></a>安装图形化工具<code>graphviz</code></h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brew install graphviz <span class="comment"># for macos</span></span><br><span class="line">apt install graphviz <span class="comment"># for ubuntu</span></span><br><span class="line">yum install graphviz <span class="comment"># for centos</span></span><br><span class="line">https://graphviz.gitlab.io/_pages/Download/Download_windows.html <span class="comment"># windows下载地址</span></span><br></pre></td></tr></table></figure><h1 id="CPU占用过高"><a href="#CPU占用过高" class="headerlink" title="CPU占用过高"></a>CPU占用过高</h1><p>程序案例代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">_ <span class="string">"net/http/pprof"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"runtime"</span></span><br><span class="line"><span class="string">"strconv"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="comment">// 限制 CPU 使用数，避免过载</span></span><br><span class="line">runtime.GOMAXPROCS(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对锁调用的跟踪</span></span><br><span class="line">runtime.SetMutexProfileFraction(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对阻塞操作的跟踪</span></span><br><span class="line">runtime.SetBlockProfileRate(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 启动一个 http server</span></span><br><span class="line"><span class="keyword">if</span> err := http.ListenAndServe(<span class="string">":8080"</span>, <span class="literal">nil</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;()</span><br><span class="line">Egt()</span><br><span class="line"><span class="keyword">for</span>&#123;</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Egt</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="keyword">for</span>&#123;</span><br><span class="line"><span class="keyword">var</span> folst = <span class="number">86465.1213213</span></span><br><span class="line">float := strconv.FormatFloat(folst, <span class="string">'f'</span>, <span class="number">-1</span>, <span class="number">64</span>)</span><br><span class="line">fmt.Println(float)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行采集cpu命令:</p><p><code>go tool pprof -cum http://127.0.0.1:8080/debug/pprof/profile</code>,默认采集30秒的运行信息</p><p>可以通过<code>go tool pprof -cum http://127.0.0.1:8080/debug/pprof/profile?seconds=60</code>来更改采集的时间</p><p>进入交互终端</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">E:\go_project\go-pprof&gt;go tool pprof -cum http://127.0.0.1:8080/debug/pprof/profile</span><br><span class="line">Fetching profile over HTTP from http://127.0.0.1:8080/debug/pprof/profile</span><br><span class="line">Saved profile <span class="keyword">in</span> C:\Users\chc_golang\pprof\pprof.samples.cpu.005.pb.gz</span><br><span class="line">Type: cpu</span><br><span class="line">Time: Jun 26, 2019 at 11:23am (CST)</span><br><span class="line">Duration: 29.99s, Total samples = 29.99s (  100%)</span><br><span class="line">Entering interactive mode (<span class="built_in">type</span> <span class="string">"help"</span> <span class="keyword">for</span> commands, <span class="string">"o"</span> <span class="keyword">for</span> options)</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure><ul><li><p><code>top</code> 命令,查看CPU占用高的调用</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(pprof) top</span><br><span class="line">Showing nodes accounting <span class="keyword">for</span> 0.25s, 0.83% of 29.99s total</span><br><span class="line">Dropped 96 nodes (cum &lt;= 0.15s)</span><br><span class="line">Showing top 10 nodes out of 17</span><br><span class="line">flat  flat%   sum%        cum   cum%</span><br><span class="line">0.02s 0.067% 0.067%     29.90s 99.70%  main.Egt</span><br><span class="line">0     0% 0.067%     29.90s 99.70%  main.main</span><br><span class="line">0     0% 0.067%     29.90s 99.70%  runtime.main</span><br><span class="line">0.01s 0.033%   0.1%     29.10s 97.03%  fmt.Println</span><br><span class="line">0.02s 0.067%  0.17%     29.09s 97.00%  fmt.Fprintln</span><br><span class="line">0.04s  0.13%   0.3%     28.89s 96.33%  os.(*File).Write</span><br><span class="line">0.02s 0.067%  0.37%     28.85s 96.20%  os.(*File).write</span><br><span class="line">0.04s  0.13%   0.5%     28.83s 96.13%  internal/poll.(*FD).Write</span><br><span class="line">0.10s  0.33%  0.83%     28.59s 95.33%  internal/poll.(*FD).writeConsole</span><br><span class="line">0     0%  0.83%     28.31s 94.40%  syscall.WriteConsole</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">flat</td><td align="center">运行耗时间</td></tr><tr><td align="center">flat%</td><td align="center">CPU 运行耗时总比例</td></tr><tr><td align="center">sum%</td><td align="center">累计使用 CPU 总比例</td></tr><tr><td align="center">cum</td><td align="center">当前函数加上它之上的调用运行总耗时</td></tr><tr><td align="center">cum%</td><td align="center">CPU 运行耗时总比例</td></tr></tbody></table><p>  可以看出<code>main.Egt</code>方法的cpu占用最高</p></li></ul><ul><li><p><code>list Egt</code> 命令查询问题在代码的哪个位置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(pprof) list Egt</span><br><span class="line">Total: 30.01s</span><br><span class="line">ROUTINE ======================== main.Egt <span class="keyword">in</span> E:\go_project\go-pprof\main.go</span><br><span class="line">      70ms     28.51s (flat, cum) 95.00% of Total</span><br><span class="line">         .          .     32:   &#125;</span><br><span class="line">         .          .     33:&#125;</span><br><span class="line">         .          .     34:</span><br><span class="line">         .          .     35:func <span class="function"><span class="title">Egt</span></span>()  &#123;</span><br><span class="line">         .          .     36:   <span class="keyword">for</span>&#123;</span><br><span class="line">      50ms       50ms     37:           var folst = 86465.1213213</span><br><span class="line">      10ms      3.66s     38:           <span class="built_in">float</span> := strconv.FormatFloat(folst, <span class="string">'f'</span>, -1, 64)</span><br><span class="line">      10ms     24.80s     39:           fmt.Println(<span class="built_in">float</span>)</span><br><span class="line">         .          .     40:   &#125;</span><br><span class="line">         .          .     41:&#125;</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure><p>可以看到是39行高频的打印输出占用了大量 CPU 时间，至此，问题定位成功！</p></li><li><p><code>web</code>命令,或者使用<code>go tool pprof -inuse_space -cum -svg http://127.0.0.1:8080/api-box/debug/pprof/heap &gt; heap_inuse.svg</code>下载svg文件在用浏览器打开,图形化工具自动加载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(pprof) web</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure><p><img src="http://qiniu.caihc.site/go/pprof/pprof-cpu-svg.PNG" alt></p></li></ul><p>pprof 定位 CPU 占用的问题就结束了，你只需要输入 <code>exit</code> 退出 pprof 的交互式终端。</p><h1 id="内存占用过高"><a href="#内存占用过高" class="headerlink" title="内存占用过高"></a>内存占用过高</h1><ul><li><p>程序案例代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">_ <span class="string">"net/http/pprof"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"runtime"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="comment">// 限制 CPU 使用数，避免过载</span></span><br><span class="line">runtime.GOMAXPROCS(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对锁调用的跟踪</span></span><br><span class="line">runtime.SetMutexProfileFraction(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对阻塞操作的跟踪</span></span><br><span class="line">runtime.SetBlockProfileRate(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 启动一个 http server</span></span><br><span class="line"><span class="keyword">if</span> err := http.ListenAndServe(<span class="string">":8080"</span>, <span class="literal">nil</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;()</span><br><span class="line">Memory()</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> buffer [][<span class="number">1024</span>]<span class="keyword">byte</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Memory</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="comment">// 最大内存为1G</span></span><br><span class="line">max := <span class="number">1024</span>*<span class="number">1024</span>*<span class="number">1024</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">len</span>(buffer)*<span class="number">1024</span> &lt; max &#123;</span><br><span class="line">buffer = <span class="built_in">append</span>(buffer, [<span class="number">1024</span>]<span class="keyword">byte</span>&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line">log.Println(<span class="string">"设置异常内存完毕"</span>)</span><br><span class="line"><span class="keyword">for</span>&#123;</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>执行采集内存信息命令:<code>go tool pprof -cum http://127.0.0.1:8080/debug/pprof/heap</code><br>    1. <code>-inuse_space</code>：(推荐)分析应用程序的常驻内存占用情况 ,<code>go tool pprof -inuse_space -cum http://127.0.0.1:8080/debug/pprof/heap</code><br>     2. <code>-alloc_objects</code>：分析应用程序的内存临时分配情况,<code>go tool pprof -alloc_objects-cum http://127.0.0.1:8080/debug/pprof/heap</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">E:\go_project\go-pprof&gt;go tool pprof -cum http://127.0.0.1:8080/debug/pprof/heap</span><br><span class="line">Fetching profile over HTTP from http://127.0.0.1:8080/debug/pprof/heap</span><br><span class="line">Saved profile <span class="keyword">in</span> C:\Users\chc_golang\pprof\pprof.alloc_objects.alloc_space.inuse_objects.inuse_space.009.pb.gz</span><br><span class="line">Type: inuse_space</span><br><span class="line">Time: Jun 26, 2019 at 2:36pm (CST)</span><br><span class="line">No samples were found with the default sample value <span class="built_in">type</span>.</span><br><span class="line">Try <span class="string">"sample_index"</span> <span class="built_in">command</span> to analyze different sample values.</span><br><span class="line">Entering interactive mode (<span class="built_in">type</span> <span class="string">"help"</span> <span class="keyword">for</span> commands, <span class="string">"o"</span> <span class="keyword">for</span> options)</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure><ul><li><p><code>top</code>命令,查询占用内存最高的调用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(pprof) top</span><br><span class="line">Showing nodes accounting <span class="keyword">for</span> 1.79GB, 100% of 1.79GB total</span><br><span class="line">      flat  flat%   sum%        cum   cum%</span><br><span class="line">    1.79GB   100%   100%     1.79GB   100%  main.Memory</span><br><span class="line">         0     0%   100%     1.79GB   100%  main.main</span><br><span class="line">         0     0%   100%     1.79GB   100%  runtime.main</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">flat</td><td align="center">运行消耗内存</td></tr><tr><td align="center">flat%</td><td align="center">内存消耗总比例</td></tr><tr><td align="center">sum%</td><td align="center">累计使用 内存消耗总比例</td></tr><tr><td align="center">cum</td><td align="center">当前函数加上它之上的调用运行总内存消耗</td></tr><tr><td align="center">cum%</td><td align="center">前函数加上它之上的调用运行总内存消耗总比例</td></tr></tbody></table></li><li><p><code>list main.Memory</code> 命令查询问题在代码的哪个位置</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(pprof) list main.Memory</span><br><span class="line">Total: 1.79GB</span><br><span class="line">ROUTINE ======================== main.Memory <span class="keyword">in</span> E:\go_project\go-pprof\main.go</span><br><span class="line">    1.79GB     1.79GB (flat, cum)   100% of Total</span><br><span class="line">         .          .     30:var buffer [][1024]byte</span><br><span class="line">         .          .     31:func <span class="function"><span class="title">Memory</span></span>()  &#123;</span><br><span class="line">         .          .     32:   // 最大内存为1G</span><br><span class="line">         .          .     33:   max := 1024*1024*1024</span><br><span class="line">         .          .     34:   <span class="keyword">for</span> len(buffer)*1024 &lt; max &#123;</span><br><span class="line">    1.79GB     1.79GB     35:           buffer = append(buffer, [1024]byte&#123;&#125;)</span><br><span class="line">         .          .     36:   &#125;</span><br><span class="line">         .          .     37:   log.Println(<span class="string">"设置异常内存完毕"</span>)</span><br><span class="line">         .          .     38:   <span class="keyword">for</span>&#123;</span><br><span class="line">         .          .     39:           time.Sleep(time.Second)</span><br><span class="line">         .          .     40:   &#125;</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure><p>问题出现在35行,原因是循环的向<code>buffer</code>追加数据</p></li><li><p><code>web</code>命令使用浏览器图形工具查看</p><p><img src="http://qiniu.caihc.site/go/pprof/pprof-svg-heap.PNG" alt></p></li></ul><p>pprof 定位 内存占用的问题就结束了，你只需要输入 <code>exit</code> 退出 pprof 的交互式终端。</p><h1 id="频繁GC回收"><a href="#频繁GC回收" class="headerlink" title="频繁GC回收"></a>频繁GC回收</h1><p>实例代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">_ <span class="string">"net/http/pprof"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"runtime"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="comment">// 限制 CPU 使用数，避免过载</span></span><br><span class="line">runtime.GOMAXPROCS(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对锁调用的跟踪</span></span><br><span class="line">runtime.SetMutexProfileFraction(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对阻塞操作的跟踪</span></span><br><span class="line">runtime.SetBlockProfileRate(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 启动一个 http server</span></span><br><span class="line"><span class="keyword">if</span> err := http.ListenAndServe(<span class="string">":8080"</span>, <span class="literal">nil</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;()</span><br><span class="line">MemoryGc()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MemoryGc</span><span class="params">()</span></span>  &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>  &#123;</span><br><span class="line">_ = <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">16</span> * <span class="number">1024</span> * <span class="number">1024</span>)</span><br><span class="line">time.Sleep(<span class="number">100</span>*time.Millisecond)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>启动pprof命令:<code>go tool pprof -cum http://127.0.0.1:8080/debug/pprof/allocs</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">E:\go_project\go-pprof&gt;go tool pprof -cum http://127.0.0.1:8080/debug/pprof/allocs</span><br><span class="line">Fetching profile over HTTP from http://127.0.0.1:8080/debug/pprof/allocs</span><br><span class="line">Saved profile <span class="keyword">in</span> C:\Users\chc_golang\pprof\pprof.alloc_objects.alloc_space.inuse_objects.inuse_space.021.pb.gz</span><br><span class="line">Type: alloc_space</span><br><span class="line">Time: Jun 26, 2019 at 3:22pm (CST)</span><br><span class="line">Entering interactive mode (<span class="built_in">type</span> <span class="string">"help"</span> <span class="keyword">for</span> commands, <span class="string">"o"</span> <span class="keyword">for</span> options)</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure></li><li><p><code>top</code>命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(pprof) top</span><br><span class="line">Showing nodes accounting <span class="keyword">for</span> 45.86GB, 100% of 45.86GB total</span><br><span class="line">Dropped 15 nodes (cum &lt;= 0.23GB)</span><br><span class="line">      flat  flat%   sum%        cum   cum%</span><br><span class="line">   45.86GB   100%   100%    45.86GB   100%  main.MemoryGc</span><br><span class="line">         0     0%   100%    45.86GB   100%  main.main</span><br><span class="line">         0     0%   100%    45.86GB   100%  runtime.main</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure></li><li><p><code>list</code>命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(pprof) list main.MemoryGc</span><br><span class="line">Total: 45.86GB</span><br><span class="line">ROUTINE ======================== main.MemoryGc <span class="keyword">in</span> E:\go_project\go-pprof\main.go</span><br><span class="line">   45.86GB    45.86GB (flat, cum)   100% of Total</span><br><span class="line">         .          .     32:</span><br><span class="line">         .          .     33:&#125;</span><br><span class="line">         .          .     34:func <span class="function"><span class="title">MemoryGc</span></span>()  &#123;</span><br><span class="line">         .          .     35:</span><br><span class="line">         .          .     36:   <span class="keyword">for</span>  &#123;</span><br><span class="line">   45.86GB    45.86GB     37:           _ = make([]byte, 16 * 1024 * 1024)</span><br><span class="line">         .          .     38:           time.Sleep(100*time.Millisecond)</span><br><span class="line">         .          .     39:   &#125;</span><br><span class="line">         .          .     40:</span><br><span class="line">         .          .     41:&#125;</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure><p>可以看出37行进行无意义的内存申请导致频繁gc</p><p>但是如果将<code>_ = make([]byte, 16 * 1024 * 1024)</code>内存申请改成较小的值,则不会出现频繁gc</p><p>原因是在 golang 里，对象是使用堆内存还是栈内存，由编译器进行逃逸分析并决定，如果对象不会逃逸，便可在使用栈内存，但总有意外，就是对象的尺寸过大时，便不得不使用堆内存。所以这里设置申请 16 MiB 的内存就是为了避免编译器直接在栈上分配，如果那样得话就不会涉及到 GC 了。</p></li><li><p><code>web</code>命令</p><p><img src="http://qiniu.caihc.site/go/pprof/pprof-allocs.PNG" alt></p></li></ul><h1 id="协程泄露"><a href="#协程泄露" class="headerlink" title="协程泄露"></a>协程泄露</h1><p>由于 golang 自带内存回收，所以一般不会发生内存泄露。但凡事都有例外，在 golang 中，协程本身是可能泄露的，或者叫协程失控，进而导致内存泄露。</p><p>程序代码示例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">_ <span class="string">"net/http/pprof"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"runtime"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="comment">// 限制 CPU 使用数，避免过载</span></span><br><span class="line">runtime.GOMAXPROCS(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对锁调用的跟踪</span></span><br><span class="line">runtime.SetMutexProfileFraction(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对阻塞操作的跟踪</span></span><br><span class="line">runtime.SetBlockProfileRate(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 启动一个 http server</span></span><br><span class="line"><span class="keyword">if</span> err := http.ListenAndServe(<span class="string">":8080"</span>, <span class="literal">nil</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;()</span><br><span class="line">Thread()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Thread</span><span class="params">()</span></span>  &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">30</span>; i++ &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span>   &#123;</span><br><span class="line">time.Sleep(<span class="number">30</span>*time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>启动pprof命令:<code>go tool pprof -cum http://127.0.0.1:8080/debug/pprof/goroutine</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">E:\go_project\go-pprof&gt;go tool pprof -cum http://127.0.0.1:8080/debug/pprof/goroutine</span><br><span class="line">Fetching profile over HTTP from http://127.0.0.1:8080/debug/pprof/goroutine</span><br><span class="line">Saved profile <span class="keyword">in</span> C:\Users\chc_golang\pprof\pprof.goroutine.002.pb.gz</span><br><span class="line">Type: goroutine</span><br><span class="line">Time: Jun 26, 2019 at 5:06pm (CST)</span><br><span class="line">Entering interactive mode (<span class="built_in">type</span> <span class="string">"help"</span> <span class="keyword">for</span> commands, <span class="string">"o"</span> <span class="keyword">for</span> options)</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure></li><li><p><code>top</code>命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(pprof) top</span><br><span class="line">Showing nodes accounting for 32, 94.12% of 34 total</span><br><span class="line">Showing top 10 nodes out of 31</span><br><span class="line">      flat  flat%   sum%        cum   cum%</span><br><span class="line">        32 94.12% 94.12%         32 94.12%  runtime.gopark</span><br><span class="line">         0     0% 94.12%         31 91.18%  runtime.goparkunlock</span><br><span class="line">         0     0% 94.12%         31 91.18%  time.Sleep</span><br><span class="line">         0     0% 94.12%         30 88.24%  main.Thread.func1</span><br><span class="line">         0     0% 94.12%          1  2.94%  internal/poll.(*FD).Accept</span><br><span class="line">         0     0% 94.12%          1  2.94%  internal/poll.(*FD).acceptOne</span><br><span class="line">         0     0% 94.12%          1  2.94%  internal/poll.(*ioSrv).ExecIO</span><br><span class="line">         0     0% 94.12%          1  2.94%  internal/poll.(*pollDesc).wait</span><br><span class="line">         0     0% 94.12%          1  2.94%  internal/poll.runtime_pollWait</span><br><span class="line">         0     0% 94.12%          1  2.94%  main.main</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure></li><li><p><code>list main.Thread.func1</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(pprof) list main.Thread.func1</span><br><span class="line">Total: 34</span><br><span class="line">ROUTINE ======================== main.Thread.func1 in E:\go_project\go-pprof\main.go</span><br><span class="line">         0         30 (flat, cum) 88.24% of Total</span><br><span class="line">         .          .     34:func Thread()  &#123;</span><br><span class="line">         .          .     35:</span><br><span class="line">         .          .     36:   for i := 0; i &lt; 30; i++ &#123;</span><br><span class="line">         .          .     37:           go func() &#123;</span><br><span class="line">         .          .     38:                   for   &#123;</span><br><span class="line">         .         30     39:                           time.Sleep(30*time.Second)</span><br><span class="line">         .          .     40:                   &#125;</span><br><span class="line">         .          .     41:           &#125;()</span><br><span class="line">         .          .     42:   &#125;</span><br><span class="line">         .          .     43:</span><br><span class="line">         .          .     44:&#125;</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure><p>问题出现在<code>Thread</code>方法创建无用的<code>goroutine</code></p></li><li><p><code>web</code>命令</p><p><img src="http://qiniu.caihc.site/go/pprof/pprof-goroutine.png" alt></p></li></ul><h1 id="锁的竞争"><a href="#锁的竞争" class="headerlink" title="锁的竞争"></a>锁的竞争</h1><p>实例代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"log"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">_ <span class="string">"net/http/pprof"</span></span><br><span class="line"><span class="string">"os"</span></span><br><span class="line"><span class="string">"runtime"</span></span><br><span class="line"><span class="string">"sync"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line"><span class="comment">// 限制 CPU 使用数，避免过载</span></span><br><span class="line">runtime.GOMAXPROCS(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对锁调用的跟踪</span></span><br><span class="line">runtime.SetMutexProfileFraction(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// 开启对阻塞操作的跟踪</span></span><br><span class="line">runtime.SetBlockProfileRate(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 启动一个 http server</span></span><br><span class="line"><span class="keyword">if</span> err := http.ListenAndServe(<span class="string">":8080"</span>, <span class="literal">nil</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">os.Exit(<span class="number">0</span>)</span><br><span class="line">&#125;()</span><br><span class="line">Lock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Lock</span><span class="params">()</span></span>  &#123;</span><br><span class="line"></span><br><span class="line">m := &amp;sync.Mutex&#123;&#125;</span><br><span class="line">m.Lock()</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">time.Sleep(<span class="number">10</span>*time.Second)</span><br><span class="line">m.Unlock()</span><br><span class="line">&#125;()</span><br><span class="line">m.Lock()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行pprof命令:<code>go tool pprof -cum http://127.0.0.1:8080/debug/pprof/mutex</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">E:\go_project\go-pprof&gt;go tool pprof -cum http://127.0.0.1:8080/debug/pprof/mutex</span><br><span class="line">Fetching profile over HTTP from http://127.0.0.1:8080/debug/pprof/mutex</span><br><span class="line">Saved profile <span class="keyword">in</span> C:\Users\chc_golang\pprof\pprof.contentions.delay.003.pb.gz</span><br><span class="line">Type: delay</span><br><span class="line">Time: Jun 28, 2019 at 10:23am (CST)</span><br><span class="line">Entering interactive mode (<span class="built_in">type</span> <span class="string">"help"</span> <span class="keyword">for</span> commands, <span class="string">"o"</span> <span class="keyword">for</span> options)</span><br></pre></td></tr></table></figure><ul><li><p><code>top</code>命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(pprof) top</span><br><span class="line">Showing nodes accounting <span class="keyword">for</span> 10.04s, 100% of 10.04s total</span><br><span class="line">      flat  flat%   sum%        cum   cum%</span><br><span class="line">         0     0%     0%     10.04s   100%  main.Lock.func1</span><br><span class="line">    10.04s   100%   100%     10.04s   100%  sync.(*Mutex).Unlock</span><br></pre></td></tr></table></figure></li><li><p><code>list</code>命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(pprof) list main.Lock.func1</span><br><span class="line">Total: 10.04s</span><br><span class="line">ROUTINE ======================== main.Lock.func1 <span class="keyword">in</span> E:\go_project\go-pprof\main.go</span><br><span class="line">         0     10.04s (flat, cum)   100% of Total</span><br><span class="line">         .          .     36:</span><br><span class="line">         .          .     37:   m := &amp;sync.Mutex&#123;&#125;</span><br><span class="line">         .          .     38:   m.Lock()</span><br><span class="line">         .          .     39:   go <span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">         .          .     40:           time.Sleep(10*time.Second)</span><br><span class="line">         .     10.04s     41:           m.Unlock()</span><br><span class="line">         .          .     42:   &#125;()</span><br><span class="line">         .          .     43:   m.Lock()</span><br><span class="line">         .          .     44:</span><br><span class="line">         .          .     45:&#125;</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure><p>可以看出造成锁等待10秒的问题出现在哪</p></li><li><p><code>web</code>命令</p><p><img src="http://qiniu.caihc.site/go/pprof/pprof-mutex.PNG" alt></p></li></ul><h1 id="查看历史调试记录"><a href="#查看历史调试记录" class="headerlink" title="查看历史调试记录"></a>查看历史调试记录</h1><ul><li><p>执行pprof命令后会生成一个<code>pb.gz</code>文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">E:\go_project\go-pprof&gt;go tool pprof -cum http://127.0.0.1:8080/debug/pprof/goroutine</span><br><span class="line">Fetching profile over HTTP from http://127.0.0.1:8080/debug/pprof/goroutine</span><br><span class="line">Saved profile <span class="keyword">in</span> C:\Users\chc_golang\pprof\pprof.goroutine.003.pb.gz</span><br><span class="line">Type: goroutine</span><br><span class="line">Time: Jun 26, 2019 at 9:05pm (CST)</span><br><span class="line">Entering interactive mode (<span class="built_in">type</span> <span class="string">"help"</span> <span class="keyword">for</span> commands, <span class="string">"o"</span> <span class="keyword">for</span> options)</span><br></pre></td></tr></table></figure></li><li><p>执行<code>go tool pprof [*.gz]</code>则可以加载历史记录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">E:\go_project\go-pprof&gt;go tool pprof  C:\Users\chc_golang\pprof\pprof.goroutine.003.pb.gz</span><br><span class="line">Type: goroutine</span><br><span class="line">Time: Jun 26, 2019 at 9:05pm (CST)</span><br><span class="line">Entering interactive mode (<span class="built_in">type</span> <span class="string">"help"</span> <span class="keyword">for</span> commands, <span class="string">"o"</span> <span class="keyword">for</span> options)</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure></li><li><p>可以执行<code>top</code>,<code>list</code>等pprof的调试命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">E:\go_project\go-pprof&gt;go tool pprof  C:\Users\chc_golang\pprof\pprof.goroutine.003.pb.gz</span><br><span class="line">Type: goroutine</span><br><span class="line">Time: Jun 26, 2019 at 9:05pm (CST)</span><br><span class="line">Entering interactive mode (<span class="built_in">type</span> <span class="string">"help"</span> <span class="keyword">for</span> commands, <span class="string">"o"</span> <span class="keyword">for</span> options)</span><br><span class="line">(pprof) top</span><br><span class="line">Showing nodes accounting <span class="keyword">for</span> 34, 100% of 34 total</span><br><span class="line">Showing top 10 nodes out of 31</span><br><span class="line">      flat  flat%   sum%        cum   cum%</span><br><span class="line">        32 94.12% 94.12%         32 94.12%  runtime.gopark</span><br><span class="line">         1  2.94% 97.06%          1  2.94%  net/http.(*connReader).backgroundRead</span><br><span class="line">         1  2.94%   100%          1  2.94%  runtime/pprof.writeRuntimeProfile</span><br><span class="line">         0     0%   100%          1  2.94%  internal/poll.(*FD).Accept</span><br><span class="line">         0     0%   100%          1  2.94%  internal/poll.(*FD).acceptOne</span><br><span class="line">         0     0%   100%          1  2.94%  internal/poll.(*ioSrv).ExecIO</span><br><span class="line">         0     0%   100%          1  2.94%  internal/poll.(*pollDesc).<span class="built_in">wait</span></span><br><span class="line">         0     0%   100%          1  2.94%  internal/poll.runtime_pollWait</span><br><span class="line">         0     0%   100%         30 88.24%  main.Thread.func1</span><br><span class="line">         0     0%   100%          1  2.94%  main.main</span><br><span class="line">(pprof) list main.Thread.func1</span><br><span class="line">Total: 34</span><br><span class="line">ROUTINE ======================== main.Thread.func1 <span class="keyword">in</span> E:\go_project\go-pprof\main.go</span><br><span class="line">         0         30 (flat, cum) 88.24% of Total</span><br><span class="line">         .          .     34:func <span class="function"><span class="title">Thread</span></span>()  &#123;</span><br><span class="line">         .          .     35:</span><br><span class="line">         .          .     36:   <span class="keyword">for</span> i := 0; i &lt; 30; i++ &#123;</span><br><span class="line">         .          .     37:           go <span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">         .          .     38:                   <span class="keyword">for</span>   &#123;</span><br><span class="line">         .         30     39:                           time.Sleep(30*time.Second)</span><br><span class="line">         .          .     40:                   &#125;</span><br><span class="line">         .          .     41:           &#125;()</span><br><span class="line">         .          .     42:   &#125;</span><br><span class="line">         .          .     43:</span><br><span class="line">         .          .     44:&#125;</span><br><span class="line">(pprof)</span><br></pre></td></tr></table></figure></li></ul><h1 id="PProf-火焰图工具-推荐"><a href="#PProf-火焰图工具-推荐" class="headerlink" title="PProf 火焰图工具(推荐)"></a>PProf 火焰图工具(推荐)</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u github.com/google/pprof</span><br></pre></td></tr></table></figure><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p>使用命令与官方的pprof一样,只不过将<code>go tool pprof</code>换成<code>pprof</code></p><p>另外如果加上<code>-http</code>的功能可以使用交互终端,直接使用浏览器操作查看</p><ul><li><p>执行启动命令 <code>pprof -http=:8081 http://127.0.0.1:8080/debug/pprof/block</code> 或者 <code>pprof -http:8081 C:\Users\chc_golang\pprof\pprof.contentions.delay.007.pb.gz</code></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">E:\go_project\go-pprof&gt;pprof -http=:8081 http://127.0.0.1:8080/debug/pprof/block</span><br><span class="line">Fetching profile over HTTP from http://127.0.0.1:8080/debug/pprof/block</span><br><span class="line">Saved profile in C:\Users\chc_golang\pprof\pprof.contentions.delay.010.pb.gz</span><br><span class="line">Serving web UI on http://localhost:8081</span><br></pre></td></tr></table></figure></li><li><p>浏览器输入<code>http://127.0.0.1:8081</code></p></li><li><p><code>top</code></p><p><img src="http://qiniu.caihc.site/go/pprof/pprof-top.PNG" alt></p></li><li><p><code>list</code></p><p><img src="http://qiniu.caihc.site/go/pprof/pprof-list.PNG" alt></p></li><li><p><code>web</code></p><p><img src="http://qiniu.caihc.site/go/pprof/pprof-web.PNG" alt></p></li><li><p>新特性火焰图</p><p><img src="http://qiniu.caihc.site/go/pprof/pprof-hy.PNG" alt></p></li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>pprof的基本使用就到这里了</p><p>还有一个<code>trace</code>因为较为复杂，现在还没完全掌握</p><ul><li><p><code>trace</code>的相关文章*</p><p><a href="https://making.pusher.com/go-tool-trace/" target="_blank" rel="noopener">https://making.pusher.com/go-tool-trace/</a></p><p><a href="https://mp.weixin.qq.com/s/I9xSMxy32cALSNQAN8wlnQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/I9xSMxy32cALSNQAN8wlnQ</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pprof </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>golang底层解析之Context</title>
      <link href="/posts/95e450d8/"/>
      <url>/posts/95e450d8/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是context"><a href="#什么是context" class="headerlink" title="什么是context"></a>什么是context</h1><p> context，中文译作“上下文”，它是 goroutine 的上下文，包含 goroutine 的运行状态、环境、现场等信息。</p><p>context 主要用来在 goroutine 之间传递上下文信息，包括：取消信号、超时时间、截止时间、k-v 等。</p><blockquote><p>context.Context 类型的值可以协调多个 groutine 中的代码执行“取消”操作，并且可以存储键值对。最重要的是它是并发安全的。</p></blockquote><blockquote><p>与它协作的 API 都可以由外部控制执行“取消”操作，例如：取消一个 HTTP 请求的执行。</p></blockquote><h1 id="Context底层解析"><a href="#Context底层解析" class="headerlink" title="Context底层解析"></a>Context底层解析</h1><h2 id="整体概览"><a href="#整体概览" class="headerlink" title="整体概览"></a>整体概览</h2><p><img src="http://qiniu.caihc.site/go/context/contextFunc.png" alt></p><table><thead><tr><th align="center">名称</th><th align="center">类型</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">CancelFunc:func()</td><td align="center">Func</td><td align="center">取消,关闭函数</td></tr><tr><td align="center">Context</td><td align="center">interface</td><td align="center">定义了Context的接口方法</td></tr><tr><td align="center">cancelCtx</td><td align="center">struct</td><td align="center">可以取消的Context</td></tr><tr><td align="center">canceler</td><td align="center">interface</td><td align="center">Context 取消接口，定义了两个方法</td></tr><tr><td align="center">deadlineExceededError</td><td align="center">struct</td><td align="center">定义了Context返回错误</td></tr><tr><td align="center">emptyCtx</td><td align="center">struct</td><td align="center">实现了 Context 接口，其实是个空的 context</td></tr><tr><td align="center">timerCtx</td><td align="center">struct</td><td align="center">实现了 Context 接口,有超时取消机制</td></tr><tr><td align="center">valueCtx</td><td align="center">struct</td><td align="center">实现了 Context 接口,用于存储 k-v 键值对</td></tr><tr><td align="center">Background</td><td align="center">Func</td><td align="center">空的Context,常为根context</td></tr><tr><td align="center">TODO</td><td align="center">Func</td><td align="center">返回一个空的 context，常用于 未知context使用场景</td></tr><tr><td align="center">WithCancel</td><td align="center">Func</td><td align="center">基于父 context，生成一个可以取消的 子context</td></tr><tr><td align="center">WithDeadline</td><td align="center">Func</td><td align="center">基于父 context，创建一个按日期超时取消的子 context</td></tr><tr><td align="center">WithTimeout</td><td align="center">Func</td><td align="center">基于父 context，创建一个有 时间超时取消的 子context</td></tr><tr><td align="center">WithValue</td><td align="center">Func</td><td align="center">基于父 context，创建一个存储 k-v 对的子 context</td></tr><tr><td align="center">init</td><td align="center">Func</td><td align="center">包初始化</td></tr><tr><td align="center">newCancelCtx</td><td align="center">Func</td><td align="center">创建一个可以取消的context</td></tr><tr><td align="center">parentCancelCtx</td><td align="center">Func</td><td align="center">找到最近的可取消的父节点</td></tr><tr><td align="center">propagateCancel</td><td align="center">Func</td><td align="center">向下传递 context 节点间的取消关系</td></tr><tr><td align="center">removeChild</td><td align="center">Func</td><td align="center">去掉父节点的子节点</td></tr></tbody></table><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><h3 id="Context"><a href="#Context" class="headerlink" title="Context"></a>Context</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Context <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// context 是否会被取消以及自动取消时间（即 deadline）</span></span><br><span class="line">Deadline() (deadline time.Time, ok <span class="keyword">bool</span>)</span><br><span class="line"><span class="comment">// 当Context被取消或者超时时,则返回被关闭的channel</span></span><br><span class="line">Done() &lt;-<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"><span class="comment">// 返回取消的原因</span></span><br><span class="line">Err() error</span><br><span class="line"><span class="comment">// 根据key获取value</span></span><br><span class="line">Value(key <span class="keyword">interface</span>&#123;&#125;) <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>Context</code>的方法都是<code>幂等,线程安全</code>的,所以连续多次调用同一个方法，得到的结果都是相同的:<ol><li><code>Deadline</code>方法返回当前 <code>Context</code>是否有超时机制和被取消的时间，也就是完成工作的截止日期</li><li><code>Done</code> 方法返回一个 Channel，这个 Channel 会在当前工作完成或者上下文被取消之后返回,用与提醒协程关闭,进行收尾工作,尽快退出，多次调用 <code>Done</code> 方法会返回同一个 Channel</li><li><code>Err</code>方法会返回当前 <code>Context</code> 结束的原因,它只会在 <code>Done</code> 返回的 Channel 被关闭时才会返回非空的值:<ol><li>如果当前 <code>Context</code> 被取消就会返回 <code>Canceled</code> 错误；</li><li>如果当前 <code>Context</code> 超时就会返回 <code>DeadlineExceeded</code> 错误；</li></ol></li><li><code>Value</code>方法会从 <code>Context</code> 中返回键对应的值，对于同一个上下文来说，多次调用 <code>Value</code> 并传入相同的 <code>Key</code> 会返回相同的结果，这个功能可以用来传递请求特定的数据；</li></ol></li></ul><h3 id="canceler"><a href="#canceler" class="headerlink" title="canceler"></a>canceler</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> canceler <span class="keyword">interface</span> &#123;</span><br><span class="line">cancel(removeFromParent <span class="keyword">bool</span>, err error)</span><br><span class="line">Done() &lt;-<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>Context</code>取消的接口方法,源码中有两个类型实现了 canceler 接口：<code>*cancelCtx</code> 和 <code>*timerCtx</code>:</p><p>​    1. <code>Done</code> 方法返回一个只读的 channel，所有相关函数监听此 channel。一旦 channel 关闭，通过 channel 的“广播机制”，所有监听者都能收到。</p><p>​    2. <code>cancel</code>方法当<code>removeFromParent</code> 为 true 时，会将当前节点的 context 从父节点 context中删除,<code>err</code>为取消原因</p></li></ul><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><h3 id="emptyCtx"><a href="#emptyCtx" class="headerlink" title="emptyCtx"></a>emptyCtx</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> emptyCtx <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Deadline</span><span class="params">()</span> <span class="params">(deadline time.Time, ok <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Done</span><span class="params">()</span> &lt;-<span class="title">chan</span> <span class="title">struct</span></span>&#123;&#125; &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Err</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Value</span><span class="params">(key <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *emptyCtx)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">switch</span> e &#123;</span><br><span class="line"><span class="keyword">case</span> background:</span><br><span class="line"><span class="keyword">return</span> <span class="string">"context.Background"</span></span><br><span class="line"><span class="keyword">case</span> todo:</span><br><span class="line"><span class="keyword">return</span> <span class="string">"context.TODO"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"unknown empty Context"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>emptyCtx</code>是一个空的 context，永远不会被 取消，没有存储值，也没有 超时。</p></li><li><p>它被包装成：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    background = <span class="built_in">new</span>(emptyCtx)</span><br><span class="line">    todo       = <span class="built_in">new</span>(emptyCtx)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>下面两个导出的函数对外公开:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Background</span><span class="params">()</span> <span class="title">Context</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> background</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TODO</span><span class="params">()</span> <span class="title">Context</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> todo</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>``Background<code>和</code>TODO<code>方法在某种层面上看其实也只是互为别名，两者没有太大的差别，不过</code>context.Background()<code>是上下文中最顶层的默认值，所有其他的上下文都应该从</code>context.Background()` 演化出来。</li><li>我们应该只在不确定时使用<code>context.TODO()</code>，在多数情况下如果函数没有上下文作为入参，我们往往都会使用 <code>context.Background()</code> 作为起始的 <code>Context</code> 向下传递。</li></ol></li></ul><h3 id="cancelCtx"><a href="#cancelCtx" class="headerlink" title="cancelCtx"></a>cancelCtx</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> cancelCtx <span class="keyword">struct</span> &#123;</span><br><span class="line">Context</span><br><span class="line"></span><br><span class="line">mu       sync.Mutex            <span class="comment">// protects following fields</span></span><br><span class="line">done     <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;         <span class="comment">// created lazily, closed by first cancel call</span></span><br><span class="line">children <span class="keyword">map</span>[canceler]<span class="keyword">struct</span>&#123;&#125; <span class="comment">// set to nil by the first cancel call</span></span><br><span class="line">err      error                 <span class="comment">// set to non-nil by the first cancel call</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>cancelCtx</code>实现了 <code>canceler</code>接口。它直接将接口 <code>Context</code>作为它的一个匿名字段，这样，它就可以被看成一个 <code>Context</code>。</p><ul><li><p>Done()方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *cancelCtx)</span> <span class="title">Done</span><span class="params">()</span> &lt;-<span class="title">chan</span> <span class="title">struct</span></span>&#123;&#125; &#123;</span><br><span class="line">c.mu.Lock()</span><br><span class="line"><span class="keyword">if</span> c.done == <span class="literal">nil</span> &#123; <span class="comment">// 懒汉式创建</span></span><br><span class="line">c.done = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line">d := c.done</span><br><span class="line">c.mu.Unlock()</span><br><span class="line"><span class="keyword">return</span> d</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>c.done</code> 是“懒汉式”创建，只有调用了 Done() 方法的时候才会被创建</p></li><li><p><code>String</code>和<code>Err</code>方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *cancelCtx)</span> <span class="title">Err</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">c.mu.Lock()</span><br><span class="line">err := c.err</span><br><span class="line">c.mu.Unlock()</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *cancelCtx)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Sprintf(<span class="string">"%v.WithCancel"</span>, c.Context)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>cancel()</code>方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *cancelCtx)</span> <span class="title">cancel</span><span class="params">(removeFromParent <span class="keyword">bool</span>, err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">"context: internal error: missing cancel error"</span>)</span><br><span class="line">&#125;</span><br><span class="line">c.mu.Lock()</span><br><span class="line"><span class="keyword">if</span> c.err != <span class="literal">nil</span> &#123; <span class="comment">// 已经被取消</span></span><br><span class="line">c.mu.Unlock()</span><br><span class="line"><span class="keyword">return</span> </span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 设置取消原因</span></span><br><span class="line">c.err = err</span><br><span class="line">    <span class="comment">// 关闭channel,通知协程关闭</span></span><br><span class="line"><span class="keyword">if</span> c.done == <span class="literal">nil</span> &#123;</span><br><span class="line">c.done = closedchan </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">close</span>(c.done) </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> child := <span class="keyword">range</span> c.children &#123;</span><br><span class="line"><span class="comment">// 取消所有子节点</span></span><br><span class="line">child.cancel(<span class="literal">false</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 将子节点设为空</span></span><br><span class="line">c.children = <span class="literal">nil</span></span><br><span class="line">c.mu.Unlock()</span><br><span class="line"><span class="keyword">if</span> removeFromParent &#123;</span><br><span class="line">        <span class="comment">// 从父节点中移除自己 </span></span><br><span class="line">removeChild(c.Context, c)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="removeChild"><a href="#removeChild" class="headerlink" title="removeChild"></a>removeChild</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">removeChild</span><span class="params">(parent Context, child canceler)</span></span> &#123;</span><br><span class="line">    p, ok := parentCancelCtx(parent)</span><br><span class="line">    <span class="keyword">if</span> !ok &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    p.mu.Lock()</span><br><span class="line">    <span class="keyword">if</span> p.children != <span class="literal">nil</span> &#123; <span class="comment">// 如果父节点的子节点不为空</span></span><br><span class="line">        <span class="built_in">delete</span>(p.children, child) <span class="comment">// 将子节点从父节点中移除</span></span><br><span class="line">    &#125;</span><br><span class="line">    p.mu.Unlock()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>  <code>removeChild</code>方法当<code>removeFromParent</code>为true时,将自己从父节点中移除</p><p>  <code>cancel()</code> 方法的功能:</p><pre><code>1. 关闭 channel：c.done； 2. 递归地取消它的所有子节点； 3. 从父节点从删除自己。 4. 通过关闭 `channel`，将取消信号传递给了它的所有子节点。`goroutine `接收到取消信号的方式就是 select 语句中的读 c.done 被选中</code></pre><h3 id="timerCtx"><a href="#timerCtx" class="headerlink" title="timerCtx"></a>timerCtx</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> timerCtx <span class="keyword">struct</span> &#123;</span><br><span class="line">cancelCtx</span><br><span class="line">timer *time.Timer <span class="comment">// 定时器</span></span><br><span class="line"></span><br><span class="line">deadline time.Time <span class="comment">// 过期时间</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>timerCtx</code>基于 <code>cancelCtx</code>，只是多了一个 <code>time.Timer</code> 和一个 <code>deadline</code>。<code>Timer</code>会在 <code>deadline</code> 到来时，自动取消 <code>context</code>。</p><ul><li><p><code>cancel</code> 方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *timerCtx)</span> <span class="title">cancel</span><span class="params">(removeFromParent <span class="keyword">bool</span>, err error)</span></span> &#123;</span><br><span class="line">    <span class="comment">// 直接调用 cancelCtx 的取消方法</span></span><br><span class="line">c.cancelCtx.cancel(<span class="literal">false</span>, err)</span><br><span class="line"><span class="keyword">if</span> removeFromParent &#123;</span><br><span class="line"><span class="comment">// 从父节点中删除子节点</span></span><br><span class="line">removeChild(c.cancelCtx.Context, c)</span><br><span class="line">&#125;</span><br><span class="line">c.mu.Lock()</span><br><span class="line"><span class="keyword">if</span> c.timer != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="comment">// 关掉定时器，这样，在deadline 到来时，不会再次取消</span></span><br><span class="line">c.timer.Stop()</span><br><span class="line">c.timer = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">c.mu.Unlock()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>Deadline</code>方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *timerCtx)</span> <span class="title">Deadline</span><span class="params">()</span> <span class="params">(deadline time.Time, ok <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> c.deadline, <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取<code>timerCtx</code>超时时间</p></li></ul><h3 id="valueCtx"><a href="#valueCtx" class="headerlink" title="valueCtx"></a>valueCtx</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> valueCtx <span class="keyword">struct</span> &#123;</span><br><span class="line">Context</span><br><span class="line">key, val <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>String</code>和<code>Value</code>方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Context信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *valueCtx)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> fmt.Sprintf(<span class="string">"%v.WithValue(%#v, %#v)"</span>, c.Context, c.key, c.val)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取指定的键值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *valueCtx)</span> <span class="title">Value</span><span class="params">(key <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line">    <span class="keyword">if</span> c.key == key &#123;</span><br><span class="line">        <span class="keyword">return</span> c.val</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c.Context.Value(key)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="http://qiniu.caihc.site/go/context/valuectx.png" alt></p><p>和链表有点像，只是它的方向相反：<code>Context</code>指向它的父节点，链表则指向下一个节点。通过 <code>WithValue</code>函数，可以创建层层的 <code>valueCtx</code>，存储 <code>goroutine</code>间可以共享的变量。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *valueCtx)</span> <span class="title">Value</span><span class="params">(key <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line">    <span class="keyword">if</span> c.key == key &#123;</span><br><span class="line">        <span class="keyword">return</span> c.val</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c.Context.Value(key)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它会顺着链路一直往上找，比较当前节点的 key<br>是否是要找的 key，如果是，则直接返回 value。否则，一直顺着 context 往前，最终找到根节点（一般是 emptyCtx），直接返回一个 nil。所以用 Value 方法的时候要判断结果是否为 nil。</p><p><code>WithValue</code> 创建 context 节点的过程实际上就是创建链表节点的过程。两个节点的 key 值是可以相等的，但它们是两个不同的 context 节点。查找的时候，会向上查找到最后一个挂载的 context 节点，也就是离得比较近的一个父节点 context。所以，整体上而言，用 <code>WithValue</code> 构造的其实是一个低效率的链表。</p><p>因为查找方向是往上走的，所以，父节点没法获取子节点存储的值，子节点却可以获取父节点的值。</p><p>因为它是链表查询的方式,所有时间复制度为<code>O(n)</code>,所以不推荐大量使用</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="WithCancel"><a href="#WithCancel" class="headerlink" title="WithCancel"></a>WithCancel</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithCancel</span><span class="params">(parent Context)</span> <span class="params">(ctx Context, cancel CancelFunc)</span></span> &#123;</span><br><span class="line">c := newCancelCtx(parent)</span><br><span class="line">propagateCancel(parent, &amp;c)</span><br><span class="line"><span class="keyword">return</span> &amp;c, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; c.cancel(<span class="literal">true</span>, Canceled) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newCancelCtx</span><span class="params">(parent Context)</span> <span class="title">cancelCtx</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> cancelCtx&#123;Context: parent&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>传入一个父的Context,返回一个新子<code>Context</code>和 <code>CancelFunc</code>取消方法</li><li>当 <code>WithCancel</code>函数返回的 CancelFunc 被调用或者是父节点的 done channel 被关闭（父节点的 CancelFunc 被调用），此 context（子节点） 的 done channel 也会被关闭。</li></ul><h3 id="propagateCancel"><a href="#propagateCancel" class="headerlink" title="propagateCancel"></a>propagateCancel</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">propagateCancel</span><span class="params">(parent Context, child canceler)</span></span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> parent.Done() == <span class="literal">nil</span> &#123; <span class="comment">// 父节点是个空节点</span></span><br><span class="line">        <span class="keyword">return</span> <span class="comment">// parent is never canceled</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 找到可以取消的父 context</span></span><br><span class="line">    <span class="keyword">if</span> p, ok := parentCancelCtx(parent); ok &#123;</span><br><span class="line">        p.mu.Lock()</span><br><span class="line">        <span class="keyword">if</span> p.err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="comment">// 父节点已经被取消了，本节点（子节点）也要取消</span></span><br><span class="line">            child.cancel(<span class="literal">false</span>, p.err)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 父节点未取消</span></span><br><span class="line">            <span class="keyword">if</span> p.children == <span class="literal">nil</span> &#123;</span><br><span class="line">                p.children = <span class="built_in">make</span>(<span class="keyword">map</span>[canceler]<span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// "挂到"父节点上</span></span><br><span class="line">            p.children[child] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        p.mu.Unlock()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 如果没有找到可取消的父 context。新启动一个协程监控父节点或子节点取消信号</span></span><br><span class="line">        <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            <span class="keyword">select</span> &#123;</span><br><span class="line">            <span class="keyword">case</span> &lt;-parent.Done():</span><br><span class="line">                child.cancel(<span class="literal">false</span>, parent.Err())</span><br><span class="line">            <span class="keyword">case</span> &lt;-child.Done():</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>propagateCancel</code>方法的作用就是向上寻找可以“挂靠”的“可取消”的 context，并且“挂靠”上去。这样，调用上层 cancel 方法的时候，就可以层层传递，将那些挂靠的子 context 同时“取消”。</p><p>这里着重解释下为什么会有 else 描述的情况发生。<code>else</code> 是指当前节点 context 没有向上找到可以取消的父节点，那么就要再启动一个协程监控父节点或者子节点的取消动作。</p><ul><li><p>select 语句里的两个 case说明</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">select</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> &lt;-parent.Done():</span><br><span class="line">        child.cancel(<span class="literal">false</span>, parent.Err())</span><br><span class="line">        <span class="keyword">case</span> &lt;-child.Done():</span><br><span class="line">        &#125;</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><ol><li>第一个 case 说明当父节点取消，则取消子节点。如果去掉这个 case，那么父节点取消的信号就不能传递到子节点。</li><li>第二个 case 是说如果子节点自己取消了，那就退出这个 select，父节点的取消信号就不用管了。如果去掉这个 case，那么很可能父节点一直不取消，这个 goroutine 就泄漏了。当然，如果父节点取消了，就会重复让子节点取消，不过，这也没什么影响嘛。</li></ol></li></ul><h4 id="parentCancelCtx"><a href="#parentCancelCtx" class="headerlink" title="parentCancelCtx"></a>parentCancelCtx</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">parentCancelCtx</span><span class="params">(parent Context)</span> <span class="params">(*cancelCtx, <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> c := parent.(<span class="keyword">type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> *cancelCtx:</span><br><span class="line">            <span class="keyword">return</span> c, <span class="literal">true</span></span><br><span class="line">        <span class="keyword">case</span> *timerCtx:</span><br><span class="line">            <span class="keyword">return</span> &amp;c.cancelCtx, <span class="literal">true</span></span><br><span class="line">        <span class="keyword">case</span> *valueCtx:</span><br><span class="line">            parent = c.Context <span class="comment">// 循环获取,直到是可取消的父节点,或者根节点,或者自定义的节点</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里只会识别三种 Context 类型：<code>*cancelCtx</code>，<code>*timerCtx</code>，<code>*valueCtx</code>。若是把 Context 内嵌到一个类型里，就识别不出来了。</p><h3 id="WithTimeout"><a href="#WithTimeout" class="headerlink" title="WithTimeout"></a>WithTimeout</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithTimeout</span><span class="params">(parent Context, timeout time.Duration)</span> <span class="params">(Context, CancelFunc)</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> WithDeadline(parent, time.Now().Add(timeout))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>WithTimeout</code> 函数直接调用了 <code>WithDeadline</code>，传入的 deadline 是当前时间加上 timeout 的时间，也就是从现在开始再经过 timeout 时间就算超时</p><h4 id="WithDeadline"><a href="#WithDeadline" class="headerlink" title="WithDeadline"></a>WithDeadline</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithDeadline</span><span class="params">(parent Context, deadline time.Time)</span> <span class="params">(Context, CancelFunc)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> cur, ok := parent.Deadline(); ok &amp;&amp; cur.Before(deadline) &#123;</span><br><span class="line">        <span class="comment">// 如果父节点 context 的 deadline 早于指定时间。直接构建一个可取消的 context。</span></span><br><span class="line">        <span class="comment">// 原因是一旦父节点超时，自动调用 cancel 函数，子节点也会随之取消。</span></span><br><span class="line">        <span class="comment">// 所以不用单独处理子节点的计时器时间到了之后，自动调用 cancel 函数</span></span><br><span class="line">        <span class="keyword">return</span> WithCancel(parent)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构建 timerCtx</span></span><br><span class="line">    c := &amp;timerCtx&#123;</span><br><span class="line">        cancelCtx: newCancelCtx(parent),</span><br><span class="line">        deadline:  deadline,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 挂靠到父节点上</span></span><br><span class="line">    propagateCancel(parent, c)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算当前距离 deadline 的时间</span></span><br><span class="line">    d := time.Until(deadline)</span><br><span class="line">    <span class="keyword">if</span> d &lt;= <span class="number">0</span> &#123;</span><br><span class="line">        <span class="comment">// 直接取消</span></span><br><span class="line">        c.cancel(<span class="literal">true</span>, DeadlineExceeded) <span class="comment">// deadline has already passed</span></span><br><span class="line">        <span class="keyword">return</span> c, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; c.cancel(<span class="literal">true</span>, Canceled) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    c.mu.Lock()</span><br><span class="line">    <span class="keyword">defer</span> c.mu.Unlock()</span><br><span class="line">    <span class="keyword">if</span> c.err == <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="comment">//  到达时间后，timer 会自动调用 cancel 函数。自动取消</span></span><br><span class="line">        c.timer = time.AfterFunc(d, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            c.cancel(<span class="literal">true</span>, DeadlineExceeded)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; c.cancel(<span class="literal">true</span>, Canceled) &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WithValue"><a href="#WithValue" class="headerlink" title="WithValue"></a>WithValue</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithValue</span><span class="params">(parent Context, key, val <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">Context</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> key == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">"nil key"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !reflect.TypeOf(key).Comparable() &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">"key is not comparable"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> &amp;valueCtx&#123;parent, key, val&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建<code>valueCtx</code></p><h1 id="Context使用案例"><a href="#Context使用案例" class="headerlink" title="Context使用案例"></a>Context使用案例</h1><h2 id="共享数据"><a href="#共享数据" class="headerlink" title="共享数据"></a>共享数据</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"context"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ctx := context.Background()</span><br><span class="line">process(ctx)</span><br><span class="line"></span><br><span class="line">ctx2 := context.WithValue(ctx, <span class="string">"traceId"</span>, <span class="string">"2019"</span>)</span><br><span class="line">process(ctx2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">process</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line">traceId, ok := ctx.Value(<span class="string">"traceId"</span>).(<span class="keyword">string</span>)</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">fmt.Printf(<span class="string">"process trace_id=%s\n"</span>, traceId)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">"process no trace_id\n"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="超时取消和协程安全关闭"><a href="#超时取消和协程安全关闭" class="headerlink" title="超时取消和协程安全关闭"></a>超时取消和协程安全关闭</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 设置一个过期时间为1秒的context</span></span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), <span class="number">1</span>*time.Second)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"><span class="comment">//go handle(ctx, 500*time.Millisecond)</span></span><br><span class="line"><span class="keyword">go</span> handle(ctx, <span class="number">1500</span>*time.Millisecond)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done(): <span class="comment">// 过期关闭context</span></span><br><span class="line">fmt.Println(<span class="string">"main"</span>, ctx.Err())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">handle</span><span class="params">(ctx context.Context, duration time.Duration)</span></span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">"handle"</span>, ctx.Err())</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(duration): <span class="comment">// select阻塞时间</span></span><br><span class="line">fmt.Println(<span class="string">"process request with"</span>, duration)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Context使用建议"><a href="#Context使用建议" class="headerlink" title="Context使用建议"></a>Context使用建议</h1><ol><li>不要将 Context 塞到结构体里。直接将 Context 类型作为函数的第一参数，而且一般都命名为 ctx。</li><li>不要向函数传入一个 nil 的 context，如果你实在不知道传什么，标准库给你准备好了一个 context：todo。</li><li>不要把本应该作为函数参数的类型塞到 context 中，context 存储的应该是一些共同的数据。例如：登陆的 session、cookie 等。</li><li>同一个 context 可能会被传递到多个 goroutine，别担心，context 是并发安全的。</li></ol>]]></content>
      
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitLab-ce+GitLab-runner搭建</title>
      <link href="/posts/ff5d17c5/"/>
      <url>/posts/ff5d17c5/</url>
      
        <content type="html"><![CDATA[<h2 id="docker的方式安装"><a href="#docker的方式安装" class="headerlink" title="docker的方式安装"></a>docker的方式安装</h2><ol><li><p>创建<code>docker-compose.yml</code>文件</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  gitlab-ce:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">gitlab/gitlab-ce:11.8.0-ce.0</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">7080</span><span class="string">:80</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">gitlab-ce</span></span><br><span class="line"><span class="attr">    volumes:</span> </span><br><span class="line"><span class="bullet">      -</span> <span class="string">/home/gitlab/opt:/var/opt/gitlab</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/home/gitlab/git:/etc/gitlab</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/home/gitlab/log:/var/log/gitlab</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">gitlab_network</span>  </span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">gitlab-ce</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  gitlab-runner:</span> </span><br><span class="line"><span class="attr">    image:</span> <span class="string">gitlab/gitlab-runner:ubuntu-v11.8.0</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">gitlab-runner</span></span><br><span class="line"><span class="attr">    privileged:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/home/gitlab/runner-etc:/etc/gitlab-runner</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/home/gitlab/runner-home:/home/gitlab-runner</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">gitlab_network</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">gitlab-ce</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">gitlab-runner</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  gitlab_network:</span></span><br></pre></td></tr></table></figure></li><li><p>docker-compose安装</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>配置gitlab-runner的volumes文件权限(必须,否则会出现权限不足)</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 /home/gitlab/runner-home</span><br><span class="line">chmod -R 777 /home/gitlab/runner-etc</span><br></pre></td></tr></table></figure></li><li><p>配置<br><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/git/gitlab_runner%E9%85%8D%E7%BD%AE.png" alt="image"></p></li><li><p>进入gitlab-runner命令行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it gitlab-runner /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置实例</span></span><br><span class="line"><span class="comment"># gitlab-runner register</span></span><br><span class="line">Please enter the gitlab-ci coordinator URL:</span><br><span class="line"><span class="comment"># 示例：http://gitlab-ce:80/</span></span><br><span class="line">Please enter the gitlab-ci token <span class="keyword">for</span> this runner:</span><br><span class="line"><span class="comment"># xxxxxx</span></span><br><span class="line">Please enter the gitlab-ci description <span class="keyword">for</span> this runner:</span><br><span class="line"><span class="comment"># 示例：qd_api_runner</span></span><br><span class="line">Please enter the gitlab-ci tags <span class="keyword">for</span> this runner (comma separated):</span><br><span class="line"><span class="comment"># 示例：hwy</span></span><br><span class="line">Whether to run untagged builds [<span class="literal">true</span>/<span class="literal">false</span>]:</span><br><span class="line"><span class="comment"># true</span></span><br><span class="line">Please enter the executor: docker, parallels, shell, kubernetes, docker-ssh, ssh, virtualbox, docker+machine, docker-ssh+machine:</span><br><span class="line"><span class="comment"># shell</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> gitlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins插件安装</title>
      <link href="/posts/650564be/"/>
      <url>/posts/650564be/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><p>插件名称:Maven Integration</p><p>系统管理-&gt;全局设置 安装maven</p><p>在创建一个maven项目并进行构建,就可以在jenkins_home/tools 中看到maven的配置文件信息</p><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>插件名称:CloudBees Docker Build and Publish</p><h1 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h1><p>名称:Publish Over SSH<br><img src="http://qiniu.caihc.site/jenkins/sshmsk.png" alt="image"><br>获取点 【高级】输入针对该服务器的密钥</p><h1 id="Role-Based-Strategy-用户权限管理插件"><a href="#Role-Based-Strategy-用户权限管理插件" class="headerlink" title="Role-Based Strategy 用户权限管理插件"></a>Role-Based Strategy 用户权限管理插件</h1><p><a href="https://blog.csdn.net/u013066244/article/details/53407985" target="_blank" rel="noopener">https://blog.csdn.net/u013066244/article/details/53407985</a></p>]]></content>
      
      
      <categories>
          
          <category> jenkins </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>jenkins-pipeline-编译项目并上传Harbor</title>
      <link href="/posts/1713092c/"/>
      <url>/posts/1713092c/</url>
      
        <content type="html"><![CDATA[<p><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/pip.png" alt="image"><br><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/yufa.png" alt="image"></p><h4 id="案例-过三关程序编译上传docker"><a href="#案例-过三关程序编译上传docker" class="headerlink" title="案例:过三关程序编译上传docker"></a>案例:过三关程序编译上传docker</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">pipeline</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">agent</span> <span class="string">any</span></span><br><span class="line">    <span class="string">parameters</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">string</span> <span class="attr">defaultValue:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">description:</span> <span class="string">'Image的版本号'</span><span class="string">,</span> <span class="attr">name:</span> <span class="string">'dockerVersion'</span><span class="string">,</span> <span class="attr">trim:</span> <span class="literal">true</span></span><br><span class="line">        <span class="string">string</span> <span class="attr">defaultValue:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">description:</span> <span class="string">'teamfort_checkpoint的版本号'</span><span class="string">,</span> <span class="attr">name:</span> <span class="string">'teamfortCheckpointVersion'</span><span class="string">,</span> <span class="attr">trim:</span> <span class="literal">true</span></span><br><span class="line">        <span class="string">booleanParam</span> <span class="attr">defaultValue:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">description:</span> <span class="string">'编译teamfort_checkpoint'</span><span class="string">,</span> <span class="attr">name:</span> <span class="string">'teamfortCheckpointBol'</span></span><br><span class="line">        <span class="string">booleanParam</span> <span class="attr">defaultValue:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">description:</span> <span class="string">'docker上传私有库'</span><span class="string">,</span> <span class="attr">name:</span> <span class="string">'dockerUpload'</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">environment&#123;</span></span><br><span class="line">        <span class="string">//maven安装定义的maven名称</span></span><br><span class="line">        <span class="string">mvnHome</span> <span class="string">=</span> <span class="string">tool</span> <span class="string">'maven3.5.4'</span></span><br><span class="line">        <span class="string">//</span> <span class="string">清除本地images</span></span><br><span class="line">       <span class="string">imageRm</span> <span class="string">=</span> <span class="string">''</span><span class="string">'docker rmi -f $(docker images | grep dgemc.asuscomm.com:9293/checkpoint/teamfort_checkpoint_first | awk '</span><span class="string">&#123;print</span> <span class="string">$3&#125;')'''</span></span><br><span class="line">       <span class="string">//</span> <span class="string">docker的编译名称和版本号</span></span><br><span class="line">       <span class="string">dockerImage</span> <span class="string">=</span> <span class="string">"dgemc.asuscomm.com:9293/checkpoint/teamfort_checkpoint_first:$&#123;dockerVersion&#125;"</span></span><br><span class="line">       <span class="string">//</span> <span class="string">dockerFile目录位置</span></span><br><span class="line">       <span class="string">dockerFilePath</span> <span class="string">=</span> <span class="string">"/home/dockerSH/otherTeamfort_checkpoint"</span></span><br><span class="line"></span><br><span class="line">       <span class="string">//</span> <span class="string">编译teamfort_checkpoint</span></span><br><span class="line">       <span class="string">dockerBuild</span> <span class="string">=</span> <span class="string">"cd $&#123;dockerFilePath&#125; \n"</span><span class="string">+</span></span><br><span class="line">                     <span class="string">"docker build -t teamfort_checkpoint:$&#123;teamfortCheckpointVersion&#125; . \n"</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">stages&#123;</span></span><br><span class="line">        <span class="string">stage('Checkout')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">script&#123;</span></span><br><span class="line">                    <span class="string">if("$&#123;dockerUpload&#125;"</span> <span class="string">==</span> <span class="string">'false'</span><span class="string">)&#123;</span></span><br><span class="line">                        <span class="string">echo</span> <span class="string">'跳过拉取代码'</span></span><br><span class="line">                        <span class="string">return</span></span><br><span class="line">                    <span class="string">&#125;</span></span><br><span class="line">                    <span class="string">echo</span> <span class="string">'拉取代码'</span></span><br><span class="line">                <span class="string">checkout([$class:</span> <span class="string">'SubversionSCM'</span><span class="string">,</span> <span class="attr">additionalCredentials:</span> <span class="string">[],</span> <span class="attr">excludedCommitMessages:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">excludedRegions:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">excludedRevprop:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">excludedUsers:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">filterChangelog:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">ignoreDirPropChanges:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">includedRegions:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">locations:</span> <span class="string">[[cancelProcessOnExternalsFail:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">credentialsId:</span> <span class="string">'192.168.18.241'</span><span class="string">,</span> <span class="attr">depthOption:</span> <span class="string">'infinity'</span><span class="string">,</span> <span class="attr">ignoreExternalsOption:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">local:</span> <span class="string">'.'</span><span class="string">,</span> <span class="attr">remote:</span> <span class="string">'http://192.168.18.241/svn/dev/teamfort_checkpoint_First'</span><span class="string">]],</span> <span class="attr">quietOperation:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">workspaceUpdater:</span> <span class="string">[$class:</span> <span class="string">'CheckoutUpdater'</span><span class="string">]])</span></span><br><span class="line">                <span class="string">&#125;</span></span><br><span class="line">                </span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">stage('Maven-Build')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">script&#123;</span></span><br><span class="line">                    <span class="string">if("$&#123;dockerUpload&#125;"</span> <span class="string">==</span> <span class="string">'false'</span><span class="string">)&#123;</span></span><br><span class="line">                        <span class="string">echo</span> <span class="string">'跳过Maven打包 '</span></span><br><span class="line">                        <span class="string">return</span></span><br><span class="line">                    <span class="string">&#125;</span></span><br><span class="line">                    <span class="string">echo</span> <span class="string">'编译'</span></span><br><span class="line">                    <span class="string">sh</span> <span class="string">"$&#123;mvnHome&#125;/bin/mvn clean package -DskipTests"</span></span><br><span class="line">                <span class="string">&#125;</span></span><br><span class="line">                </span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">stage('Docker-push')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">script&#123;</span></span><br><span class="line">                    <span class="string">if("$&#123;dockerUpload&#125;"</span> <span class="string">==</span> <span class="string">'false'</span><span class="string">)&#123;</span></span><br><span class="line">                        <span class="string">echo</span> <span class="string">'跳过上传私有库'</span></span><br><span class="line">                        <span class="string">return</span></span><br><span class="line">                    <span class="string">&#125;</span></span><br><span class="line">                    <span class="string">echo</span> <span class="string">'上传到docker私有库'</span></span><br><span class="line">                    <span class="string">sh</span> <span class="string">"docker build -t $&#123;dockerImage&#125; ."</span></span><br><span class="line">                    <span class="string">//</span> <span class="string">上传到镜像仓库</span></span><br><span class="line">                    <span class="string">sh</span> <span class="string">"docker push $&#123;dockerImage&#125;"</span></span><br><span class="line">                    <span class="string">//</span> <span class="string">删除本地teamfort_checkpoint_first镜像</span></span><br><span class="line">                    <span class="string">sh</span> <span class="string">"$&#123;imageRm&#125;"</span></span><br><span class="line">                <span class="string">&#125;</span></span><br><span class="line">                </span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">stage('Ssh-docker-Build')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">echo</span> <span class="string">'服务器docker编译'</span></span><br><span class="line">                <span class="string">script</span> <span class="string">&#123;</span></span><br><span class="line">                    <span class="string">if("$teamfortCheckpointBol"</span> <span class="string">==</span> <span class="string">'false'</span><span class="string">)&#123;</span></span><br><span class="line">                        <span class="string">echo</span> <span class="string">'跳过docker-build'</span></span><br><span class="line">                        <span class="string">return</span></span><br><span class="line">                    <span class="string">&#125;</span></span><br><span class="line">                <span class="string">sh</span> <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">echo \'FROM dockerImage</span></span><br><span class="line"><span class="string">ENV configureBol=false</span></span><br><span class="line"><span class="string">ENV wechat-redirectUri=serv.thenewway.cn</span></span><br><span class="line"><span class="string">ENV db-ip=120.79.114.225</span></span><br><span class="line"><span class="string">ENV auth-Url=</span></span><br><span class="line"><span class="string">EXPOSE 8383</span></span><br><span class="line"><span class="string"> \' &gt;Dockerfile</span></span><br><span class="line"><span class="string">                '</span><span class="string">''</span></span><br><span class="line">                <span class="string">//替换字符</span></span><br><span class="line"><span class="string">sh</span> <span class="string">"sed -i 's#dockerImage#$&#123;dockerImage&#125;#' Dockerfile "</span></span><br><span class="line">                <span class="string">sshPublisher(publishers:</span> <span class="string">[sshPublisherDesc(configName:</span> <span class="string">'芦苇'</span><span class="string">,</span> <span class="attr">transfers:</span> <span class="string">[sshTransfer(excludes:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">execCommand:</span> <span class="string">"$&#123;dockerBuild&#125;"</span></span><br><span class="line">                <span class="string">,</span> <span class="attr">execTimeout:</span> <span class="number">120000</span><span class="string">,</span> <span class="attr">flatten:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">makeEmptyDirs:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">noDefaultExcludes:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">patternSeparator:</span> <span class="string">'[, ]+'</span><span class="string">,</span> <span class="attr">remoteDirectory:</span> <span class="string">"$&#123;dockerFilePath&#125;"</span><span class="string">,</span> <span class="attr">remoteDirectorySDF:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">removePrefix:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">sourceFiles:</span> <span class="string">'Dockerfile'</span><span class="string">)],</span> <span class="attr">usePromotionTimestamp:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">useWorkspaceInPromotion:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">verbose:</span> <span class="literal">false</span><span class="string">)])</span></span><br><span class="line">                </span><br><span class="line">            <span class="string">sh</span> <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">echo \'FROM dockerImage</span></span><br><span class="line"><span class="string">ENV configureBol=false</span></span><br><span class="line"><span class="string">ENV wechat-redirectUri=serv.teamfort.cn</span></span><br><span class="line"><span class="string">ENV db-ip=120.79.114.225</span></span><br><span class="line"><span class="string">ENV auth-Url=</span></span><br><span class="line"><span class="string">EXPOSE 8383</span></span><br><span class="line"><span class="string"> \' &gt;Dockerfile</span></span><br><span class="line"><span class="string">                '</span><span class="string">''</span></span><br><span class="line">                <span class="string">//替换字符(#号避免地址/问题)</span></span><br><span class="line"><span class="string">sh</span> <span class="string">"sed -i 's#dockerImage#$&#123;dockerImage&#125;#' Dockerfile "</span></span><br><span class="line">                <span class="string">sshPublisher(publishers:</span> <span class="string">[sshPublisherDesc(configName:</span> <span class="string">'120.79.114.225'</span><span class="string">,</span> <span class="attr">transfers:</span> <span class="string">[sshTransfer(excludes:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">execCommand:</span> <span class="string">"$&#123;dockerBuild&#125;"</span></span><br><span class="line">                <span class="string">,</span> <span class="attr">execTimeout:</span> <span class="number">120000</span><span class="string">,</span> <span class="attr">flatten:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">makeEmptyDirs:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">noDefaultExcludes:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">patternSeparator:</span> <span class="string">'[, ]+'</span><span class="string">,</span> <span class="attr">remoteDirectory:</span> <span class="string">"$&#123;dockerFilePath&#125;"</span><span class="string">,</span> <span class="attr">remoteDirectorySDF:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">removePrefix:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">sourceFiles:</span> <span class="string">'Dockerfile'</span><span class="string">)],</span> <span class="attr">usePromotionTimestamp:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">useWorkspaceInPromotion:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">verbose:</span> <span class="literal">false</span><span class="string">)])</span></span><br><span class="line">                </span><br><span class="line">        <span class="string">sh</span> <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">echo \'FROM dockerImage</span></span><br><span class="line"><span class="string">ENV configureBol=true</span></span><br><span class="line"><span class="string">ENV wechat-redirectUri=serv.teamfort.cn</span></span><br><span class="line"><span class="string">ENV db-ip=120.79.114.225</span></span><br><span class="line"><span class="string">ENV auth-Url=</span></span><br><span class="line"><span class="string">EXPOSE 8383</span></span><br><span class="line"><span class="string"> \' &gt;Dockerfile</span></span><br><span class="line"><span class="string">                '</span><span class="string">''</span></span><br><span class="line">                 <span class="string">//替换字符(#号避免地址/问题)</span></span><br><span class="line"><span class="string">sh</span> <span class="string">"sed -i 's#dockerImage#$&#123;dockerImage&#125;#' Dockerfile "</span></span><br><span class="line">                <span class="string">sshPublisher(publishers:</span> <span class="string">[sshPublisherDesc(configName:</span> <span class="string">'192.168.18.211'</span><span class="string">,</span> <span class="attr">transfers:</span> <span class="string">[sshTransfer(excludes:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">execCommand:</span> <span class="string">"$&#123;dockerBuild&#125;"</span></span><br><span class="line">                <span class="string">,</span> <span class="attr">execTimeout:</span> <span class="number">120000</span><span class="string">,</span> <span class="attr">flatten:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">makeEmptyDirs:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">noDefaultExcludes:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">patternSeparator:</span> <span class="string">'[, ]+'</span><span class="string">,</span> <span class="attr">remoteDirectory:</span> <span class="string">"$&#123;dockerFilePath&#125;"</span><span class="string">,</span> <span class="attr">remoteDirectorySDF:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">removePrefix:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">sourceFiles:</span> <span class="string">'Dockerfile'</span><span class="string">)],</span> <span class="attr">usePromotionTimestamp:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">useWorkspaceInPromotion:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">verbose:</span> <span class="literal">false</span><span class="string">)])</span></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">                <span class="string">&#125;</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins-pipeline部署过三关项目</title>
      <link href="/posts/d031145b/"/>
      <url>/posts/d031145b/</url>
      
        <content type="html"><![CDATA[<p><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/pip.png" alt="image"><br><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/yufa.png" alt="image"></p><h4 id="案例-过三关程序编译上传docker"><a href="#案例-过三关程序编译上传docker" class="headerlink" title="案例:过三关程序编译上传docker"></a>案例:过三关程序编译上传docker</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">pipeline</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">agent</span> <span class="string">any</span></span><br><span class="line">    <span class="string">parameters</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">string</span> <span class="attr">defaultValue:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">description:</span> <span class="string">'Image的版本号'</span><span class="string">,</span> <span class="attr">name:</span> <span class="string">'dockerVersion'</span><span class="string">,</span> <span class="attr">trim:</span> <span class="literal">true</span></span><br><span class="line">        <span class="string">string</span> <span class="attr">defaultValue:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">description:</span> <span class="string">'teamfort_checkpoint的版本号'</span><span class="string">,</span> <span class="attr">name:</span> <span class="string">'teamfortCheckpointVersion'</span><span class="string">,</span> <span class="attr">trim:</span> <span class="literal">true</span></span><br><span class="line">        <span class="string">booleanParam</span> <span class="attr">defaultValue:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">description:</span> <span class="string">'编译teamfort_checkpoint'</span><span class="string">,</span> <span class="attr">name:</span> <span class="string">'teamfortCheckpointBol'</span></span><br><span class="line">        <span class="string">booleanParam</span> <span class="attr">defaultValue:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">description:</span> <span class="string">'docker上传私有库'</span><span class="string">,</span> <span class="attr">name:</span> <span class="string">'dockerUpload'</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">environment&#123;</span></span><br><span class="line">        <span class="string">//maven安装定义的maven名称</span></span><br><span class="line">        <span class="string">mvnHome</span> <span class="string">=</span> <span class="string">tool</span> <span class="string">'maven3.5.4'</span></span><br><span class="line">        <span class="string">//</span> <span class="string">清除本地images</span></span><br><span class="line">       <span class="string">imageRm</span> <span class="string">=</span> <span class="string">''</span><span class="string">'docker rmi -f $(docker images | grep dgemc.asuscomm.com:9293/checkpoint/teamfort_checkpoint_first | awk '</span><span class="string">&#123;print</span> <span class="string">$3&#125;')'''</span></span><br><span class="line">       <span class="string">//</span> <span class="string">docker的编译名称和版本号</span></span><br><span class="line">       <span class="string">dockerImage</span> <span class="string">=</span> <span class="string">"dgemc.asuscomm.com:9293/checkpoint/teamfort_checkpoint_first:$&#123;dockerVersion&#125;"</span></span><br><span class="line">       <span class="string">//</span> <span class="string">dockerFile目录位置</span></span><br><span class="line">       <span class="string">dockerFilePath</span> <span class="string">=</span> <span class="string">"/home/dockerSH/otherTeamfort_checkpoint"</span></span><br><span class="line"></span><br><span class="line">       <span class="string">//</span> <span class="string">编译teamfort_checkpoint</span></span><br><span class="line">       <span class="string">dockerBuild</span> <span class="string">=</span> <span class="string">"cd $&#123;dockerFilePath&#125; \n"</span><span class="string">+</span></span><br><span class="line">                     <span class="string">"docker build -t teamfort_checkpoint:$&#123;teamfortCheckpointVersion&#125; . \n"</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">stages&#123;</span></span><br><span class="line">        <span class="string">stage('Checkout')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">script&#123;</span></span><br><span class="line">                    <span class="string">if("$&#123;dockerUpload&#125;"</span> <span class="string">==</span> <span class="string">'false'</span><span class="string">)&#123;</span></span><br><span class="line">                        <span class="string">echo</span> <span class="string">'跳过拉取代码'</span></span><br><span class="line">                        <span class="string">return</span></span><br><span class="line">                    <span class="string">&#125;</span></span><br><span class="line">                    <span class="string">echo</span> <span class="string">'拉取代码'</span></span><br><span class="line">                <span class="string">checkout([$class:</span> <span class="string">'SubversionSCM'</span><span class="string">,</span> <span class="attr">additionalCredentials:</span> <span class="string">[],</span> <span class="attr">excludedCommitMessages:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">excludedRegions:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">excludedRevprop:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">excludedUsers:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">filterChangelog:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">ignoreDirPropChanges:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">includedRegions:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">locations:</span> <span class="string">[[cancelProcessOnExternalsFail:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">credentialsId:</span> <span class="string">'192.168.18.241'</span><span class="string">,</span> <span class="attr">depthOption:</span> <span class="string">'infinity'</span><span class="string">,</span> <span class="attr">ignoreExternalsOption:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">local:</span> <span class="string">'.'</span><span class="string">,</span> <span class="attr">remote:</span> <span class="string">'http://192.168.18.241/svn/dev/teamfort_checkpoint_First'</span><span class="string">]],</span> <span class="attr">quietOperation:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">workspaceUpdater:</span> <span class="string">[$class:</span> <span class="string">'CheckoutUpdater'</span><span class="string">]])</span></span><br><span class="line">                <span class="string">&#125;</span></span><br><span class="line">                </span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">stage('Maven-Build')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">script&#123;</span></span><br><span class="line">                    <span class="string">if("$&#123;dockerUpload&#125;"</span> <span class="string">==</span> <span class="string">'false'</span><span class="string">)&#123;</span></span><br><span class="line">                        <span class="string">echo</span> <span class="string">'跳过Maven打包 '</span></span><br><span class="line">                        <span class="string">return</span></span><br><span class="line">                    <span class="string">&#125;</span></span><br><span class="line">                    <span class="string">echo</span> <span class="string">'编译'</span></span><br><span class="line">                    <span class="string">sh</span> <span class="string">"$&#123;mvnHome&#125;/bin/mvn clean package -DskipTests"</span></span><br><span class="line">                <span class="string">&#125;</span></span><br><span class="line">                </span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">stage('Docker-push')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">script&#123;</span></span><br><span class="line">                    <span class="string">if("$&#123;dockerUpload&#125;"</span> <span class="string">==</span> <span class="string">'false'</span><span class="string">)&#123;</span></span><br><span class="line">                        <span class="string">echo</span> <span class="string">'跳过上传私有库'</span></span><br><span class="line">                        <span class="string">return</span></span><br><span class="line">                    <span class="string">&#125;</span></span><br><span class="line">                    <span class="string">echo</span> <span class="string">'上传到docker私有库'</span></span><br><span class="line">                    <span class="string">sh</span> <span class="string">"docker build -t $&#123;dockerImage&#125; ."</span></span><br><span class="line">                    <span class="string">//</span> <span class="string">上传到镜像仓库</span></span><br><span class="line">                    <span class="string">sh</span> <span class="string">"docker push $&#123;dockerImage&#125;"</span></span><br><span class="line">                    <span class="string">//</span> <span class="string">删除本地teamfort_checkpoint_first镜像</span></span><br><span class="line">                    <span class="string">sh</span> <span class="string">"$&#123;imageRm&#125;"</span></span><br><span class="line">                <span class="string">&#125;</span></span><br><span class="line">                </span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">stage('Ssh-docker-Build')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">echo</span> <span class="string">'服务器docker编译'</span></span><br><span class="line">                <span class="string">script</span> <span class="string">&#123;</span></span><br><span class="line">                    <span class="string">if("$teamfortCheckpointBol"</span> <span class="string">==</span> <span class="string">'false'</span><span class="string">)&#123;</span></span><br><span class="line">                        <span class="string">echo</span> <span class="string">'跳过docker-build'</span></span><br><span class="line">                        <span class="string">return</span></span><br><span class="line">                    <span class="string">&#125;</span></span><br><span class="line">                <span class="string">sh</span> <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">echo \'FROM dockerImage</span></span><br><span class="line"><span class="string">ENV configureBol=false</span></span><br><span class="line"><span class="string">ENV wechat-redirectUri=serv.thenewway.cn</span></span><br><span class="line"><span class="string">ENV db-ip=120.79.114.225</span></span><br><span class="line"><span class="string">ENV auth-Url=</span></span><br><span class="line"><span class="string">EXPOSE 8383</span></span><br><span class="line"><span class="string"> \' &gt;Dockerfile</span></span><br><span class="line"><span class="string">                '</span><span class="string">''</span></span><br><span class="line">                <span class="string">//替换字符</span></span><br><span class="line"><span class="string">sh</span> <span class="string">"sed -i 's#dockerImage#$&#123;dockerImage&#125;#' Dockerfile "</span></span><br><span class="line">                <span class="string">sshPublisher(publishers:</span> <span class="string">[sshPublisherDesc(configName:</span> <span class="string">'芦苇'</span><span class="string">,</span> <span class="attr">transfers:</span> <span class="string">[sshTransfer(excludes:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">execCommand:</span> <span class="string">"$&#123;dockerBuild&#125;"</span></span><br><span class="line">                <span class="string">,</span> <span class="attr">execTimeout:</span> <span class="number">120000</span><span class="string">,</span> <span class="attr">flatten:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">makeEmptyDirs:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">noDefaultExcludes:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">patternSeparator:</span> <span class="string">'[, ]+'</span><span class="string">,</span> <span class="attr">remoteDirectory:</span> <span class="string">"$&#123;dockerFilePath&#125;"</span><span class="string">,</span> <span class="attr">remoteDirectorySDF:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">removePrefix:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">sourceFiles:</span> <span class="string">'Dockerfile'</span><span class="string">)],</span> <span class="attr">usePromotionTimestamp:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">useWorkspaceInPromotion:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">verbose:</span> <span class="literal">false</span><span class="string">)])</span></span><br><span class="line">                </span><br><span class="line">            <span class="string">sh</span> <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">echo \'FROM dockerImage</span></span><br><span class="line"><span class="string">ENV configureBol=false</span></span><br><span class="line"><span class="string">ENV wechat-redirectUri=serv.teamfort.cn</span></span><br><span class="line"><span class="string">ENV db-ip=120.79.114.225</span></span><br><span class="line"><span class="string">ENV auth-Url=</span></span><br><span class="line"><span class="string">EXPOSE 8383</span></span><br><span class="line"><span class="string"> \' &gt;Dockerfile</span></span><br><span class="line"><span class="string">                '</span><span class="string">''</span></span><br><span class="line">                <span class="string">//替换字符(#号避免地址/问题)</span></span><br><span class="line"><span class="string">sh</span> <span class="string">"sed -i 's#dockerImage#$&#123;dockerImage&#125;#' Dockerfile "</span></span><br><span class="line">                <span class="string">sshPublisher(publishers:</span> <span class="string">[sshPublisherDesc(configName:</span> <span class="string">'120.79.114.225'</span><span class="string">,</span> <span class="attr">transfers:</span> <span class="string">[sshTransfer(excludes:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">execCommand:</span> <span class="string">"$&#123;dockerBuild&#125;"</span></span><br><span class="line">                <span class="string">,</span> <span class="attr">execTimeout:</span> <span class="number">120000</span><span class="string">,</span> <span class="attr">flatten:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">makeEmptyDirs:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">noDefaultExcludes:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">patternSeparator:</span> <span class="string">'[, ]+'</span><span class="string">,</span> <span class="attr">remoteDirectory:</span> <span class="string">"$&#123;dockerFilePath&#125;"</span><span class="string">,</span> <span class="attr">remoteDirectorySDF:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">removePrefix:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">sourceFiles:</span> <span class="string">'Dockerfile'</span><span class="string">)],</span> <span class="attr">usePromotionTimestamp:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">useWorkspaceInPromotion:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">verbose:</span> <span class="literal">false</span><span class="string">)])</span></span><br><span class="line">                </span><br><span class="line">        <span class="string">sh</span> <span class="string">''</span><span class="string">'</span></span><br><span class="line"><span class="string">echo \'FROM dockerImage</span></span><br><span class="line"><span class="string">ENV configureBol=true</span></span><br><span class="line"><span class="string">ENV wechat-redirectUri=serv.teamfort.cn</span></span><br><span class="line"><span class="string">ENV db-ip=120.79.114.225</span></span><br><span class="line"><span class="string">ENV auth-Url=</span></span><br><span class="line"><span class="string">EXPOSE 8383</span></span><br><span class="line"><span class="string"> \' &gt;Dockerfile</span></span><br><span class="line"><span class="string">                '</span><span class="string">''</span></span><br><span class="line">                 <span class="string">//替换字符(#号避免地址/问题)</span></span><br><span class="line"><span class="string">sh</span> <span class="string">"sed -i 's#dockerImage#$&#123;dockerImage&#125;#' Dockerfile "</span></span><br><span class="line">                <span class="string">sshPublisher(publishers:</span> <span class="string">[sshPublisherDesc(configName:</span> <span class="string">'192.168.18.211'</span><span class="string">,</span> <span class="attr">transfers:</span> <span class="string">[sshTransfer(excludes:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">execCommand:</span> <span class="string">"$&#123;dockerBuild&#125;"</span></span><br><span class="line">                <span class="string">,</span> <span class="attr">execTimeout:</span> <span class="number">120000</span><span class="string">,</span> <span class="attr">flatten:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">makeEmptyDirs:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">noDefaultExcludes:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">patternSeparator:</span> <span class="string">'[, ]+'</span><span class="string">,</span> <span class="attr">remoteDirectory:</span> <span class="string">"$&#123;dockerFilePath&#125;"</span><span class="string">,</span> <span class="attr">remoteDirectorySDF:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">removePrefix:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">sourceFiles:</span> <span class="string">'Dockerfile'</span><span class="string">)],</span> <span class="attr">usePromotionTimestamp:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">useWorkspaceInPromotion:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">verbose:</span> <span class="literal">false</span><span class="string">)])</span></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">                <span class="string">&#125;</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins-pipeline_svn+ssh文件拷贝linux构建部署</title>
      <link href="/posts/a99d18f6/"/>
      <url>/posts/a99d18f6/</url>
      
        <content type="html"><![CDATA[<p>功能:svn+编译+上传服务器+备份回滚</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">pipeline</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">agent</span> <span class="string">any</span></span><br><span class="line">    <span class="string">parameters</span> <span class="string">&#123;</span></span><br><span class="line">          <span class="string">choice</span> <span class="attr">choices:</span> <span class="string">['deploy',</span> <span class="string">'rollback'</span><span class="string">],</span> <span class="attr">description:</span> <span class="string">''</span><span class="string">'deploy:发布</span></span><br><span class="line"><span class="string">rollback:回滚'</span><span class="string">''</span><span class="string">,</span> <span class="attr">name:</span> <span class="string">'deploy_env'</span></span><br><span class="line">          <span class="string">text</span> <span class="attr">defaultValue:</span> <span class="string">'0'</span><span class="string">,</span> <span class="attr">description:</span> <span class="string">'回滚版本号,发布时忽略该参数'</span><span class="string">,</span> <span class="attr">name:</span> <span class="string">'version'</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    <span class="string">environment&#123;</span></span><br><span class="line">        <span class="string">//</span> <span class="string">svn代码下载地址</span></span><br><span class="line">        <span class="string">svnUrl</span> <span class="string">=</span> <span class="string">"http://192.168.18.241/svn/dev/teamfort-school-BasicInfo"</span></span><br><span class="line">        <span class="string">//</span> <span class="string">maven</span> <span class="string">插件名</span></span><br><span class="line">        <span class="string">mvnHome</span> <span class="string">=</span> <span class="string">tool</span> <span class="string">'maven3.5.4'</span></span><br><span class="line">        <span class="string">//</span> <span class="string">上传地址</span></span><br><span class="line">        <span class="string">uploadFilePath</span> <span class="string">=</span> <span class="string">'/home/project/teamfort/teamfort-school-BasicInfo'</span></span><br><span class="line">        <span class="string">//</span> <span class="string">过滤前缀</span></span><br><span class="line">        <span class="string">rPrefix</span> <span class="string">=</span> <span class="string">'target/'</span></span><br><span class="line">        <span class="string">//</span> <span class="string">本地文件地址</span></span><br><span class="line">        <span class="string">sourceFiles</span> <span class="string">=</span> <span class="string">'target/teamfort-school-BasicInfo.jar'</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">stages&#123;</span></span><br><span class="line">        <span class="string">stage('CheckOutSvn')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">script&#123;</span></span><br><span class="line">                    <span class="string">if("$deploy_env"</span> <span class="string">==</span> <span class="string">'deploy'</span><span class="string">)&#123;</span></span><br><span class="line">                         <span class="string">checkout</span> <span class="attr">changelog:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">poll:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">scm:</span> <span class="string">[$class:</span> <span class="string">'SubversionSCM'</span><span class="string">,</span> <span class="attr">additionalCredentials:</span> <span class="string">[],</span> <span class="attr">excludedCommitMessages:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">excludedRegions:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">excludedRevprop:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">excludedUsers:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">filterChangelog:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">ignoreDirPropChanges:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">includedRegions:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">locations:</span> <span class="string">[[cancelProcessOnExternalsFail:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">credentialsId:</span> <span class="string">'192.168.18.241'</span><span class="string">,</span> <span class="attr">depthOption:</span> <span class="string">'infinity'</span><span class="string">,</span> <span class="attr">ignoreExternalsOption:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">local:</span> <span class="string">'.'</span><span class="string">,</span> <span class="attr">remote:"$&#123;svnUrl&#125;"]],</span> <span class="attr">quietOperation:</span> <span class="literal">true</span><span class="string">,</span> <span class="attr">workspaceUpdater:</span> <span class="string">[$class:</span> <span class="string">'CheckoutUpdater'</span><span class="string">]]</span></span><br><span class="line">                    <span class="string">&#125;</span></span><br><span class="line">                <span class="string">&#125;</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">        <span class="string">stage('Build')&#123;</span></span><br><span class="line">           <span class="string">steps&#123;</span></span><br><span class="line">               <span class="string">script&#123;</span></span><br><span class="line">                   <span class="string">if("$deploy_env"</span> <span class="string">==</span> <span class="string">'deploy'</span><span class="string">)&#123;</span></span><br><span class="line">                       <span class="string">sh</span> <span class="string">"$&#123;mvnHome&#125;/bin/mvn clean package -DskipTests"</span></span><br><span class="line">                   <span class="string">&#125;</span></span><br><span class="line">               <span class="string">&#125;</span></span><br><span class="line">           <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">        <span class="string">stage('Deoloy-Rollback')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">sh</span> <span class="string">''</span><span class="string">'case $deploy_env in</span></span><br><span class="line"><span class="string">deploy)</span></span><br><span class="line"><span class="string">    echo "deploy: $deploy_env"</span></span><br><span class="line"><span class="string">        ;;</span></span><br><span class="line"><span class="string">    rollback)</span></span><br><span class="line"><span class="string">    echo "rollback: $deploy_env"</span></span><br><span class="line"><span class="string">        echo "version: $version"</span></span><br><span class="line"><span class="string">        rm -rf targer</span></span><br><span class="line"><span class="string">        cp -rf $&#123;JENKINS_HOME&#125;/jobs/$&#123;JOB_NAME&#125;/builds/$&#123;version&#125;/archive/* .</span></span><br><span class="line"><span class="string">        pwd &amp;&amp; ls</span></span><br><span class="line"><span class="string">        ;;</span></span><br><span class="line"><span class="string">    *)</span></span><br><span class="line"><span class="string">        echo "USAGE $0 &lt;deploy|rollback&gt;"</span></span><br><span class="line"><span class="string">  esac'</span><span class="string">''</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">        </span><br><span class="line">        <span class="string">stage('UploadAndStart-Jar')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">sshPublisher(publishers:</span> <span class="string">[sshPublisherDesc(configName:</span> <span class="string">'39.108.187.59'</span><span class="string">,</span> <span class="attr">transfers:</span> <span class="string">[sshTransfer(excludes:</span> <span class="string">''</span><span class="string">,</span> <span class="attr">execCommand:"cd</span> <span class="string">$&#123;uploadFilePath&#125;</span> <span class="string">\n"+'''</span></span><br><span class="line"></span><br><span class="line"><span class="string">echo</span> <span class="string">'#!/bin/bash</span></span><br><span class="line"><span class="string">jarName="teamfort-school-BasicInfo.jar"        #jar包名</span></span><br><span class="line"><span class="string">echo "jar包名:"$jarName</span></span><br><span class="line"><span class="string">PID=$(ps -ef | grep $jarName | grep -v grep | awk '</span><span class="string">"'"</span><span class="string">'&#123; print $2 &#125;'</span><span class="string">"'"</span><span class="string">')</span></span><br><span class="line"><span class="string">if [ -z "$PID" ]</span></span><br><span class="line"><span class="string">then</span></span><br><span class="line"><span class="string">    echo 未找到需要关闭的程序：$jarName</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">    echo 开始关闭程序 $jarName ： $PID</span></span><br><span class="line"><span class="string">    kill -9 $PID</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo 开始启动程序</span></span><br><span class="line"><span class="string">source /etc/profile</span></span><br><span class="line"><span class="string">nohup java -jar $jarName   &gt; nohup.out &amp;</span></span><br><span class="line"><span class="string"> '</span> <span class="string">&gt;run.sh</span></span><br><span class="line"> <span class="comment">#赋予文件执行权限</span></span><br><span class="line"><span class="string">chmod</span> <span class="string">+x</span> <span class="string">run.sh</span></span><br><span class="line"><span class="string">./run.sh</span></span><br><span class="line">                <span class="string">''</span><span class="string">', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '</span><span class="string">[,</span> <span class="string">]+',</span> </span><br><span class="line"><span class="attr">                remoteDirectory:</span> <span class="string">"$&#123;uploadFilePath&#125;"</span><span class="string">,</span> </span><br><span class="line"><span class="attr">                remoteDirectorySDF:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">removePrefix:</span> <span class="string">"$&#123;rPrefix&#125;"</span><span class="string">,</span> </span><br><span class="line"><span class="attr">                sourceFiles:</span> <span class="string">"$&#123;sourceFiles&#125;"</span><span class="string">)],</span> <span class="attr">usePromotionTimestamp:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">useWorkspaceInPromotion:</span> <span class="literal">false</span><span class="string">,</span> <span class="attr">verbose:</span> <span class="literal">false</span><span class="string">)])</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">        <span class="string">stage('Backup')&#123;</span></span><br><span class="line">            <span class="string">steps&#123;</span></span><br><span class="line">                <span class="string">archiveArtifacts</span> <span class="string">"$&#123;sourceFiles&#125;"</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">        <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins安装部署</title>
      <link href="/posts/4d1fb26f/"/>
      <url>/posts/4d1fb26f/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker安装jenkins"><a href="#Docker安装jenkins" class="headerlink" title="Docker安装jenkins"></a>Docker安装jenkins</h1><p>Docker版的Jenkins中使用docker的功能</p><p>Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> jenkins/jenkins:lts</span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置时区</span></span><br><span class="line"><span class="comment"># CentOS</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"Asia/shanghai"</span> &gt; /etc/timezone</span></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#清除了基础镜像设置的源，切换成阿里云的jessie源</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">echo</span> <span class="string">''</span> &gt; /etc/apt/sources.list.d/jessie-backports.list \</span></span><br><span class="line"><span class="bash">  &amp;&amp; <span class="built_in">echo</span> <span class="string">"deb http://mirrors.aliyun.com/debian jessie main contrib non-free"</span> &gt; /etc/apt/sources.list \</span></span><br><span class="line"><span class="bash">  &amp;&amp; <span class="built_in">echo</span> <span class="string">"deb http://mirrors.aliyun.com/debian jessie-updates main contrib non-free"</span> &gt;&gt; /etc/apt/sources.list \</span></span><br><span class="line"><span class="bash">  &amp;&amp; <span class="built_in">echo</span> <span class="string">"deb http://mirrors.aliyun.com/debian-security jessie/updates main contrib non-free"</span> &gt;&gt; /etc/apt/sources.list</span></span><br><span class="line"><span class="comment">#更新源并安装缺少的包</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update &amp;&amp; apt-get install -y libltdl7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> dockerGid=<span class="number">999</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"docker:x:<span class="variable">$&#123;dockerGid&#125;</span>:jenkins"</span> &gt;&gt; /etc/group \</span></span><br><span class="line"><span class="bash">USER jenkins</span></span><br></pre></td></tr></table></figure><p>执行命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker build -t chc/jenkins .</span><br><span class="line">docker volume create jenkins_home</span><br><span class="line">docker run -d --name jenkins -p 8080:8080 -p 50000:50000 -v jenkins_home:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock -v $(<span class="built_in">which</span> docker):/usr/bin/docker -v /etc/docker:/etc/docker chc/jenkins</span><br></pre></td></tr></table></figure><p>-v /var/run/docker.sock:/var/run/docker.sock 与 -v /usr/bin/docker:/usr/bin/docker是把宿主机docker 映射到容器内。</p><p>-v /etc/docker:/etc/docker 宿主机docker的相关配置文件</p><h1 id="文档地址"><a href="#文档地址" class="headerlink" title="文档地址"></a>文档地址</h1><p><a href="https://jenkins.io" target="_blank" rel="noopener">官方文档</a></p><p><a href="https://www.w3cschool.cn/jenkins/?" target="_blank" rel="noopener">w3cSchool的文档</a></p>]]></content>
      
      
      <categories>
          
          <category> jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ组件设计和架构设计</title>
      <link href="/posts/7279d5a8/"/>
      <url>/posts/7279d5a8/</url>
      
        <content type="html"><![CDATA[<h1 id="一-设计理念图"><a href="#一-设计理念图" class="headerlink" title="一 设计理念图"></a>一 设计理念图</h1><p><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/rabbitmq/mq%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF%E5%92%8C%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%A1%88.PNG" alt="image"></p><h1 id="二-组件实现功能点"><a href="#二-组件实现功能点" class="headerlink" title="二 组件实现功能点"></a>二 组件实现功能点</h1><ul><li>支持消息高性能的序列化转换,异步化发送消息</li><li>支持消息生产实例与消费实例的连接池化缓存化,提升性能</li><li>支持可靠性投递消息,保障消息的100%不丢失</li><li>支持消费端的幂等操作,避免消费端重复消费的问题</li></ul><hr><ul><li>支持迅速消息发送模式,在一些日志收集/统计分析等需求下可以保证高性能,超高吞吐量</li><li>支持延迟消息模式,消息可以延迟发送,指定延迟时间,用于模型延迟检查,服务限流场景</li><li>支持事务消息,且100%保障可靠性投递,在金融行业单笔大金额操作时会有此类需求</li></ul><hr><ul><li>支持顺序消息,保证消息送达消费端的前后顺序,例如下订单等符合操作</li><li>支持消息补偿,重试,以及快速定位异常/失败消息</li><li>支持集群消息负载均衡,保障消息落到具体SET集群的负载均衡</li><li>支持消息路由策略,指定某些消息路由到指定的SET集群</li></ul>]]></content>
      
      
      <categories>
          
          <category> 消息队列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RabbitMq </tag>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ集群部署与故障处理</title>
      <link href="/posts/78cd3bf7/"/>
      <url>/posts/78cd3bf7/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="RabbitMQ集群"><a href="#RabbitMQ集群" class="headerlink" title="RabbitMQ集群"></a>RabbitMQ集群</h1><h2 id="一-集群架构模式"><a href="#一-集群架构模式" class="headerlink" title="一. 集群架构模式"></a>一. 集群架构模式</h2><ol><li>主备模式:实现RabbitMQ的高可用集群,一般在并发和数量不高的情况下,这种模型非常的好用且简单.主备模式也称之为Warren模式.</li><li>远程模式:远距离通信和复制,所谓Shovel就是我们可以把消息进行不同数据中心的复制工作,我们可以跨地域让两个mq集群互联</li><li>镜像模式:保证100%数据不丢失,在实际工作中用的最多.<br><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/rabbitmq/%E9%95%9C%E5%83%8F%E9%9B%86%E7%BE%A4%E6%A8%A1%E5%BC%8F.PNG" alt="镜像集群模式图"></li><li>多活模式:这种模式也是实现异地数据复制的主流模式,因为Shovel模式配置比较复制,所以一般来说实现异地集群都是使用这种双活或者多活模式来实现的.这种模型需要依赖rabbitmq的federation插件,可以实现持续的可靠的AMQP数据通信,多活模式在实际配置与应用非常的简单.<ul><li>Federation 只接收具有订阅的消息<br><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/rabbitmq/%E5%A4%9A%E6%B4%BB%E6%A8%A1%E5%BC%8F.PNG" alt="多活模式"></li></ul></li></ol><h2 id="二-镜像模式的集群部署"><a href="#二-镜像模式的集群部署" class="headerlink" title="二. 镜像模式的集群部署"></a>二. 镜像模式的集群部署</h2><h3 id="1-节点说明"><a href="#1-节点说明" class="headerlink" title="1.  节点说明"></a>1.  节点说明</h3><table><thead><tr><th>服务器</th><th>hostname</th><th>节点部署程序</th></tr></thead><tbody><tr><td>192.168.0.115</td><td>rabbit3</td><td>rabbitmq,Haproxy,keepalived</td></tr><tr><td>192.168.0.111</td><td>rabbit1</td><td>rabbitmq,Haproxy,keepalived</td></tr><tr><td>192.168.0.112</td><td>rabbit2</td><td>rabbitmq,Haproxy,keepalived</td></tr></tbody></table><h3 id="1-1-端口及其用途"><a href="#1-1-端口及其用途" class="headerlink" title="1.1 端口及其用途"></a>1.1 端口及其用途</h3><ul><li>5672 客户端连接端口。        </li><li>15672 web管控台端口。    </li><li>25672 集群通信端口</li></ul><h3 id="1-2-节点运行模式"><a href="#1-2-节点运行模式" class="headerlink" title="1.2    节点运行模式"></a>1.2    节点运行模式</h3><p>为保证数据持久性，目前所有node节点跑在disk模式，如果今后压力大，需要提高性能，考虑采用ram模式(内存模式)。</p><h3 id="1-3-开启防火墙端口"><a href="#1-3-开启防火墙端口" class="headerlink" title="1.3 开启防火墙端口"></a>1.3 开启防火墙端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=5672/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=15672/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=25672/tcp --permanent</span><br><span class="line">systemctl restart firewalld.service</span><br></pre></td></tr></table></figure><h3 id="2-创建文件夹和hosts"><a href="#2-创建文件夹和hosts" class="headerlink" title="2. 创建文件夹和hosts"></a>2. 创建文件夹和hosts</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 111,112,115服务器</span><br><span class="line"># 创建文件夹和hosts</span><br><span class="line">mkdir -p /opt/rabbitmq</span><br><span class="line"></span><br><span class="line"># 拷贝插件到主机</span><br><span class="line">docker run -itd --rm --name rabbit-cp rabbitmq:3.7.8-management</span><br><span class="line">docker cp rabbit-cp:/plugins/ /opt/rabbitmq/</span><br><span class="line">docker rm -fv rabbit-cp</span><br><span class="line"></span><br><span class="line">cat&gt; /opt/rabbitmq/hosts &lt;&lt;EOF </span><br><span class="line">127.0.0.1       localhost</span><br><span class="line">192.168.50.111 rabbit1 rabbit1 </span><br><span class="line">192.168.50.112 rabbit2 rabbit2 </span><br><span class="line">192.168.50.115 rabbit3 rabbit3 </span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="3-执行安装命令"><a href="#3-执行安装命令" class="headerlink" title="3. 执行安装命令"></a>3. 执行安装命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 111,112,115服务器,对应的修改--name和--hostname</span><br><span class="line">docker run -d \</span><br><span class="line">--net host \</span><br><span class="line">--name rabbit1  \</span><br><span class="line">--hostname rabbit1 \</span><br><span class="line">--restart=unless-stopped \</span><br><span class="line">--log-opt max-size=10m \</span><br><span class="line">--log-opt max-file=3 \</span><br><span class="line">-v /opt/rabbitmq:/var/lib/rabbitmq:z  \</span><br><span class="line">-v /opt/rabbitmq/hosts:/etc/hosts \</span><br><span class="line">-v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">-v /opt/rabbitmq/plugins:/plugins \</span><br><span class="line">-e RABBITMQ_DEFAULT_USER=user  \</span><br><span class="line">-e RABBITMQ_DEFAULT_PASS=password \</span><br><span class="line">-e RABBITMQ_ERLANG_COOKIE=&apos;0c3fd9eef69b40bdb9d98e4f1e550eb9&apos; \</span><br><span class="line">rabbitmq:3.7.8-management</span><br></pre></td></tr></table></figure><h3 id="3-1-命令内容说明"><a href="#3-1-命令内容说明" class="headerlink" title="3.1 命令内容说明"></a>3.1 命令内容说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#容器的主机名为 rabbit1，容器内部的hostname</span><br><span class="line">--hostname rabbit1</span><br><span class="line"># 不管退出状态码是什么始终重启容器，不过当daemon启动时，如果容器之前已经为停止状态，不要尝试启动它。</span><br><span class="line">--restart=unless-stopped</span><br><span class="line">#日志文件单个最大10M</span><br><span class="line">--log-opt max-size=10m</span><br><span class="line">#日志文件最多保留3个</span><br><span class="line">--log-opt max-file=3</span><br><span class="line">#将宿主机目录/data/rabbitmq挂载到容器的/var/lib/rabbitmq目录。z是一个标记，在selinux环境下使用。</span><br><span class="line">-v /data/rabbitmq:/var/lib/rabbitmq:z</span><br><span class="line">#略</span><br><span class="line">-v /opt/rabbitmq/hosts:/etc/hosts</span><br><span class="line"># 时间同步</span><br><span class="line">-v /etc/localtime:/etc/localtime:ro</span><br><span class="line"># 插件目录</span><br><span class="line">-v /opt/rabbitmq/plugins:/plugins</span><br><span class="line">#设置rabbitmq默认用户为user</span><br><span class="line">-e RABBITMQ_DEFAULT_USER=user</span><br><span class="line">#设置rabbitmq默认密码为password</span><br><span class="line">-e RABBITMQ_DEFAULT_PASS=password</span><br><span class="line">#设置rabbitmq的cookie为“0c3fd9eef69b40bdb9d98e4f1e550eb9”，可以自定义为其他文本，三个容器保持一致即可。</span><br><span class="line">-e RABBITMQ_ERLANG_COOKIE=&apos;0c3fd9eef69b40bdb9d98e4f1e550eb9&apos;</span><br></pre></td></tr></table></figure><h3 id="4-组成集群"><a href="#4-组成集群" class="headerlink" title="4. 组成集群"></a>4. 组成集群</h3><h4 id="slave加入集群操作（重新加入集群也是如此，以最开始的主节点为加入节点）"><a href="#slave加入集群操作（重新加入集群也是如此，以最开始的主节点为加入节点）" class="headerlink" title="slave加入集群操作（重新加入集群也是如此，以最开始的主节点为加入节点）"></a>slave加入集群操作（重新加入集群也是如此，以最开始的主节点为加入节点）</h4><ul><li>内存模式则将<code>--disc</code>改成<code>--ram</code></li></ul><ol><li><p>115 (rabbit3)加入集群</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 进入命令控制台</span><br><span class="line">docker exec -it rabbit3 /bin/bash</span><br><span class="line"># 关闭rabbit</span><br><span class="line">rabbitmqctl stop_app</span><br><span class="line"># 加入节点配置</span><br><span class="line">rabbitmqctl join_cluster --disc rabbit@rabbit1</span><br><span class="line"># 启动rabbit</span><br><span class="line">rabbitmqctl start_app</span><br><span class="line"># 退出命令控制台</span><br><span class="line">exit</span><br></pre></td></tr></table></figure></li><li><p>112 (rabbit2)加入集群</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it rabbit2 /bin/bash</span><br><span class="line">rabbitmqctl stop_app</span><br><span class="line">rabbitmqctl join_cluster --disc rabbit@rabbit1</span><br><span class="line">rabbitmqctl start_app</span><br><span class="line">exit</span><br></pre></td></tr></table></figure></li></ol><h4 id="移除集群节点"><a href="#移除集群节点" class="headerlink" title="移除集群节点"></a>移除集群节点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl forget_cluster_node rabbit@rabbit3</span><br></pre></td></tr></table></figure><h4 id="修改集群名称"><a href="#修改集群名称" class="headerlink" title="修改集群名称"></a>修改集群名称</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># rabbitmq_cluster1则为集群名称</span><br><span class="line">rabbitmqctl set_cluster_name rabbitmq_cluster1</span><br></pre></td></tr></table></figure><h4 id="查看集群状态"><a href="#查看集群状态" class="headerlink" title="查看集群状态"></a>查看集群状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl cluster_status</span><br></pre></td></tr></table></figure><h3 id="5-配置镜像队列"><a href="#5-配置镜像队列" class="headerlink" title="5. 配置镜像队列"></a>5. 配置镜像队列</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl set_policy ha-all &quot;^&quot; &apos;&#123;&quot;ha-mode&quot;:&quot;all&quot;&#125;&apos;</span><br></pre></td></tr></table></figure><h2 id="三-搭建HAProxy-负载均衡"><a href="#三-搭建HAProxy-负载均衡" class="headerlink" title="三. 搭建HAProxy(负载均衡)"></a>三. 搭建HAProxy(负载均衡)</h2><h3 id="端口及用途"><a href="#端口及用途" class="headerlink" title="端口及用途"></a>端口及用途</h3><ul><li>5669 Haproxy的统计web界面</li><li>5668 rabbitmq的视图界面</li><li>5667 rabbitmq的集群端口5672的入口</li><li>4369 集群建立连接端口</li><li>Haproxy的统计web界面地址 : <code>http://ip:5669/haproxy?stats</code></li></ul><h3 id="开启防火墙端口"><a href="#开启防火墙端口" class="headerlink" title="开启防火墙端口"></a>开启防火墙端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=5667/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=5668/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=5669/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=4369/tcp --permanent</span><br><span class="line">systemctl restart firewalld.service</span><br></pre></td></tr></table></figure><h3 id="1-创建haproxy-cfg配置文件"><a href="#1-创建haproxy-cfg配置文件" class="headerlink" title="1. 创建haproxy.cfg配置文件"></a>1. 创建haproxy.cfg配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"># 111,112,115服务器</span><br><span class="line"># 创建文件夹和haproxy.cfg</span><br><span class="line">mkdir -p /opt/haproxy</span><br><span class="line"></span><br><span class="line">cat&gt; /opt/haproxy/haproxy.cfg &lt;&lt;EOF </span><br><span class="line">global</span><br><span class="line">       maxconn 10000                   #默认最大连接数</span><br><span class="line">       log 127.0.0.1 local0            #[err warning info debug]</span><br><span class="line">       chroot /usr/local/sbin            #chroot运行的路径</span><br><span class="line">       daemon                          #以后台形式运行haproxy</span><br><span class="line">       pidfile /var/run/haproxy.pid    #haproxy的pid存放路径,启动进程的用户必须有权限访问此文件</span><br><span class="line">defaults</span><br><span class="line">       log 127.0.0.1 local3</span><br><span class="line">       mode http                       #所处理的类别 (#7层 http;4层tcp  )</span><br><span class="line">       maxconn 10000                   #最大连接数</span><br><span class="line">       option dontlognull              #不记录健康检查的日志信息</span><br><span class="line">       option redispatch               #serverId对应的服务器挂掉后,强制定向到其他健康的服务器</span><br><span class="line">       #stats refresh 30                #统计页面刷新间隔</span><br><span class="line">       retries 3                       #3次连接失败就认为服务不可用，也可以通过后面设置</span><br><span class="line">       balance roundrobin              #默认的负载均衡的方式,轮询方式</span><br><span class="line">      #balance source                  #默认的负载均衡的方式,类似nginx的ip_hash</span><br><span class="line">      #balance leastconn               #默认的负载均衡的方式,最小连接</span><br><span class="line">       timeout connect 5000                 #连接超时</span><br><span class="line">       timeout client 50000                #客户端超时</span><br><span class="line">       timeout server 50000                #服务器超时</span><br><span class="line">       timeout check 2000              #心跳检测超时</span><br><span class="line">####################################################################</span><br><span class="line">listen http_front</span><br><span class="line">        bind 0.0.0.0:5669           #监听端口  </span><br><span class="line">        stats refresh 10s           #统计页面自动刷新时间  </span><br><span class="line">        stats uri /haproxy?stats            #统计页面url  </span><br><span class="line">        stats realm Haproxy Manager #统计页面密码框上提示文本  </span><br><span class="line">        stats auth admin:admin      #统计页面用户名和密码设置  </span><br><span class="line">        #stats hide-version         #隐藏统计页面上HAProxy的版本信息</span><br><span class="line">#####################我把RabbitMQ的管理界面也放在HAProxy后面了###############################</span><br><span class="line">listen rabbitmq_admin </span><br><span class="line">    bind 0.0.0.0:5668</span><br><span class="line">    server rabbit3 192.168.50.115:15672</span><br><span class="line">    server rabbit2 192.168.50.112:15672</span><br><span class="line">    server rabbit1 192.168.50.111:15672</span><br><span class="line">####################################################################</span><br><span class="line">listen rabbitmq_cluster </span><br><span class="line">    bind 0.0.0.0:5667</span><br><span class="line">    option tcplog</span><br><span class="line">    mode tcp</span><br><span class="line">    timeout client  3h</span><br><span class="line">    timeout server  3h</span><br><span class="line">    option          clitcpka</span><br><span class="line">    balance roundrobin      #负载均衡算法（#banlance roundrobin 轮询，balance source 保存session值，支持static-rr，leastconn，first，uri等参数）</span><br><span class="line">    #balance url_param userid</span><br><span class="line">    #balance url_param session_id check_post 64</span><br><span class="line">    #balance hdr(User-Agent)</span><br><span class="line">    #balance hdr(host)</span><br><span class="line">    #balance hdr(Host) use_domain_only</span><br><span class="line">    #balance rdp-cookie</span><br><span class="line">    #balance leastconn</span><br><span class="line">    #balance source //ip</span><br><span class="line">    server   rabbit3 192.168.50.115:5672 check inter 5s rise 2 fall 3   #check inter 2000 是检测心跳频率，rise 2是2次正确认为服务器可用，fall 3是3次失败认为服务器不可用</span><br><span class="line">    server   rabbit2 192.168.50.112:5672 check inter 5s rise 2 fall 3</span><br><span class="line">    server   rabbit1 192.168.50.111:5672 check inter 5s rise 2 fall 3</span><br><span class="line">    </span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="2-启动Haproxy"><a href="#2-启动Haproxy" class="headerlink" title="2. 启动Haproxy"></a>2. 启动Haproxy</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">--privileged \</span><br><span class="line">--name haproxy \</span><br><span class="line">--restart=unless-stopped \</span><br><span class="line">-p 5667:5667 \</span><br><span class="line">-p 5668:5668 \</span><br><span class="line">-p 5669:5669 \</span><br><span class="line">-v /opt/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg \</span><br><span class="line">haproxy:1.9.2-alpine</span><br></pre></td></tr></table></figure><h2 id="四-搭建KeepAlived"><a href="#四-搭建KeepAlived" class="headerlink" title="四. 搭建KeepAlived"></a>四. 搭建KeepAlived</h2><h3 id="1-创建配置文件"><a href="#1-创建配置文件" class="headerlink" title="1. 创建配置文件"></a>1. 创建配置文件</h3><ol><li><p>主节点:192.168.50.111</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/keepalived</span><br><span class="line"></span><br><span class="line">cat&gt;/opt/keepalived/keepalived.conf&lt;&lt;EOF </span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER  ## 主节点为MASTER，备份节点为BACKUP</span><br><span class="line">    interface ens33 ## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span><br><span class="line">    virtual_router_id 111  ## 虚拟路由ID号（主备节点一定要相同）</span><br><span class="line">    mcast_src_ip 192.168.50.111 ## 本机ip地址</span><br><span class="line">    priority 100  ##优先级配置（0-254的值）</span><br><span class="line">    nopreempt</span><br><span class="line">    advert_int 1  ## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span><br><span class="line">authentication &#123;  ## 认证匹配</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass rabbitmq</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.50.28  ## 虚拟ip，可以指定多个</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>备份节点:192.168.50.112</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/keepalived</span><br><span class="line"></span><br><span class="line">cat&gt;/opt/keepalived/keepalived.conf&lt;&lt;EOF </span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP  ## 主节点为MASTER，备份节点为BACKUP</span><br><span class="line">    interface ens33 ## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span><br><span class="line">    virtual_router_id 111  ## 虚拟路由ID号（主备节点一定要相同）</span><br><span class="line">    mcast_src_ip 192.168.50.112 ## 本机ip地址</span><br><span class="line">    priority 100  ##优先级配置（0-254的值）</span><br><span class="line">    nopreempt</span><br><span class="line">    advert_int 1  ## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span><br><span class="line">authentication &#123;  ## 认证匹配</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass rabbitmq</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.50.28  ## 虚拟ip，可以指定多个</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>备份节点:192.168.50.115</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/keepalived</span><br><span class="line"></span><br><span class="line">cat&gt;/opt/keepalived/keepalived.conf&lt;&lt;EOF </span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP  ## 主节点为MASTER，备份节点为BACKUP</span><br><span class="line">    interface ens33 ## 绑定虚拟IP的网络接口（网卡），与本机IP地址所在的网络接口相同（服务器主机网卡）</span><br><span class="line">    virtual_router_id 111  ## 虚拟路由ID号（主备节点一定要相同）</span><br><span class="line">    mcast_src_ip 192.168.50.115 ## 本机ip地址</span><br><span class="line">    priority 100  ##优先级配置（0-254的值）</span><br><span class="line">    nopreempt</span><br><span class="line">    advert_int 1  ## 组播信息发送间隔，俩个节点必须配置一致，默认1s</span><br><span class="line">authentication &#123;  ## 认证匹配</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass rabbitmq</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.50.28  ## 虚拟ip，可以指定多个</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="2-启动keepalived"><a href="#2-启动keepalived" class="headerlink" title="2. 启动keepalived"></a>2. 启动keepalived</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --net=host \</span><br><span class="line">--privileged \</span><br><span class="line">--name keepalived \</span><br><span class="line">--restart=unless-stopped \</span><br><span class="line">-v /opt/keepalived/keepalived.conf:/container/service/keepalived/assets/keepalived.conf \</span><br><span class="line">osixia/keepalived --copy-service</span><br></pre></td></tr></table></figure><h2 id="五-集群配置文件"><a href="#五-集群配置文件" class="headerlink" title="五 集群配置文件"></a>五 集群配置文件</h2><ul><li>关键配置参数:<ol><li>tcp_listerners 设置rabbitmq的监听端口,默认为[5672]</li><li>disk_free_limit 磁盘低水位线,若磁盘容量低于指定值则停止接收数据,默认值为{mem_relative,1.0},即与内存相关联1:1,也可以定制为多少byte.</li><li>vm_memory_high_watermark,设置内存低水位线,若低于该水位线,则开启流控机制,默认值0.4,即内存总量的40%.</li><li>hipe_com批了将部分rabbitmq代码用High Performance Erlang compile编译,可提升性能,该参数是实验性,若出现erlang vmsegfaults,应该关掉.</li><li>force_fine_statistics,该参数属于rabbitmq_management,若为true则进行精细化的统计,但会影响性能</li><li>集群节点模式:Disk为磁盘存储/ram为内存存储</li><li>更详细的配置参见：<a href="http://www.rabbitmq.com/configure.html" target="_blank" rel="noopener">http://www.rabbitmq.com/configure.html</a></li></ol></li></ul><h2 id="六-集群恢复与故障转移"><a href="#六-集群恢复与故障转移" class="headerlink" title="六 集群恢复与故障转移"></a>六 集群恢复与故障转移</h2><ul><li>B为主节点(Master),A为备份节点(Salve)</li></ul><h3 id="1-场景1-A先停-B后停"><a href="#1-场景1-A先停-B后停" class="headerlink" title="1. 场景1: A先停,B后停"></a>1. 场景1: A先停,B后停</h3><ul><li>解决方法:只要先启动B,在启动A即可.或者先启动A,在30秒之内启动B即可恢复镜像队列</li></ul><h3 id="2-场景2-A-B同时停机"><a href="#2-场景2-A-B同时停机" class="headerlink" title="2. 场景2: A,B同时停机"></a>2. 场景2: A,B同时停机</h3><ul><li>解决方法:只需在30秒之内连续启动A和B即可恢复镜像</li></ul><h3 id="3-场景3-A先停-B后停-且A无法恢复"><a href="#3-场景3-A先停-B后停-且A无法恢复" class="headerlink" title="3. 场景3: A先停,B后停,且A无法恢复"></a>3. 场景3: A先停,B后停,且A无法恢复</h3><ul><li>解决方法: 先启动B,然后在B节点上调用控制台命令:rabbitmqctl forget_cluster_node A 解除与A的Cluster关系,在将新的Slave节点加入B即可重新恢复镜像队列</li></ul><h3 id="4-场景4-A先停-B后停-且B无法恢复"><a href="#4-场景4-A先停-B后停-且B无法恢复" class="headerlink" title="4. 场景4: A先停,B后停,且B无法恢复"></a>4. 场景4: A先停,B后停,且B无法恢复</h3><ul><li>解决方法: 在A节点执行rabbitmqctl forget_cluster_node -offline B时,rabbitmq会mock一个节点代表A,自动执行forget_cluster_node命令将B剔除cluster,然后A就可以正常启动了,最后将新的Slave节点加入A即可重新恢复镜像队列</li></ul><h3 id="5-场景5-A先停-B后停-且A-B均无法恢复-但是能得到A或B的磁盘文件"><a href="#5-场景5-A先停-B后停-且A-B均无法恢复-但是能得到A或B的磁盘文件" class="headerlink" title="5. 场景5: A先停,B后停,且A,B均无法恢复,但是能得到A或B的磁盘文件"></a>5. 场景5: A先停,B后停,且A,B均无法恢复,但是能得到A或B的磁盘文件</h3><ul><li>解决方法: 将A或B的数据库文件默认在$RABBIT_HOME/var/lib/目录中,把它拷贝到新节点的对应目录下,在将新节点的hostname改成A或B的hostname,如果是A节点的磁盘文件,则按照场景4处理即可,如果是B节点的磁盘文件,则按照场景3处理,最后将新的slave加入到新节点后完成恢复</li></ul><h2 id="七-制定扩展"><a href="#七-制定扩展" class="headerlink" title="七 制定扩展"></a>七 制定扩展</h2><ul><li>插件搜索下载地址:<code>http://www.rabbitmq.com/community-plugins.html</code></li></ul><ol><li>延迟队列插件</li></ol><ul><li><p>延迟插件名称:rabbitmq_delayed_message_exchange</p></li><li><p>将<code>***.ez</code>放入<code>/opt/rabbitmq/plugins</code>目录下(rabbit1,rabbit2,rabbit3)</p></li><li><p>重命名插件名称<code>rabbitmq_delayed_message_exchange-0.0.1.ez</code></p></li><li><p>进入docker rabbitmq 的命令行,启动插件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rabbit1</span></span><br><span class="line">docker <span class="built_in">exec</span> -it rabbit1 /bin/bash</span><br><span class="line">rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_delayed_message_exchange</span><br><span class="line"></span><br><span class="line"><span class="comment"># rabbit2</span></span><br><span class="line">docker <span class="built_in">exec</span> -it rabbit2 /bin/bash</span><br><span class="line">rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_delayed_message_exchange</span><br><span class="line"></span><br><span class="line"><span class="comment"># rabbit3</span></span><br><span class="line">docker <span class="built_in">exec</span> -it rabbit3 /bin/bash</span><br><span class="line">rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_delayed_message_exchange</span><br></pre></td></tr></table></figure><ul><li>ps: 关闭指定插件的命令<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins <span class="built_in">disable</span> rabbitmq_delayed_message_exchange</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 消息队列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
            <tag> RabbitMq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ的知识和使用</title>
      <link href="/posts/c6f2a7a/"/>
      <url>/posts/c6f2a7a/</url>
      
        <content type="html"><![CDATA[<h1 id="一-Rabbitmq简介"><a href="#一-Rabbitmq简介" class="headerlink" title="一 Rabbitmq简介"></a>一 Rabbitmq简介</h1><p>*rabbitmq是一个开源的消息代理和队列服务器,用来通过普通协议在完全不同的应用之间共享数据,rabbitmq是使用二郎语言来编写的,并且rabbitmq是基于AMQP协议的.</p><h2 id="1-特点"><a href="#1-特点" class="headerlink" title="1. 特点"></a>1. 特点</h2><ul><li>与springAMQP完美的整合,API丰富</li><li>集群模式丰富,表达式配置,ha模式,镜像队列模式</li><li>保证数据不丢失的前提做到高可靠性,可用性</li></ul><h1 id="二-AMQP协议"><a href="#二-AMQP协议" class="headerlink" title="二 AMQP协议"></a>二 AMQP协议</h1><h2 id="1-定义"><a href="#1-定义" class="headerlink" title="1. 定义"></a>1. 定义</h2><p>是具有现代特征的二进制协议.是一个提供统一消息服务的应用层标准高级消息队列协议,是应用层协议的一个开放标准,为面向消息的中间件设计.</p><h2 id="2-核心概念"><a href="#2-核心概念" class="headerlink" title="2. 核心概念"></a>2. 核心概念</h2><ul><li>Server:又称Broker,接受客户端的连接,实现AMQP实体服务</li><li>connection:连接,应用程序与broker的网络连接</li><li>Channel:网络信道,几乎所有的操作都在Channel中进行,Channel是进行消息读写的通道.客户端可建立多个Channel,每个Channel代表个会任务.</li><li>message:消息,服务器和应用程序之间传送的数据,由properties和body组成.properties可以对消息进行修饰,比如消息的优先级,延迟等高级特性;body则就是消息体内容.</li><li>virtual host: 虚拟地址,用于进行逻辑隔离,最上层的消息路由.一个virtual host里面可以有若干个exchange和queue, 同一个virtual host里面不能有相同名称的exchange或queue</li><li>exchange:交换机,接收消息,根据路由键转发消息到绑定的队列</li><li>binding:exchange和queue之间的虚拟连接,binding中可以包含routing key</li><li>Routing key: 一个路由规则,虚拟机可用它来确定如何路由一个特定消息</li><li>queue:消息队列,保存消息并将它们转发给消费者</li></ul><h2 id="3-exchange属性"><a href="#3-exchange属性" class="headerlink" title="3. exchange属性"></a>3. exchange属性</h2><ul><li>Name: 交换机名称</li><li>Type:交换机类型direct,topic,fanout,headers</li><li>Durability:是否需要持久化,true为持久化</li><li>Auto Delete:当最后一个绑定到exchange上的队列删除后,自动删除该exchange</li><li>Internal:当前exchange是否用于rabbitmq内部使用,默认false</li><li>Arguments:扩展参数,用于扩展AMQP协议自制定化使用<h3 id="1-Direct-Exchange"><a href="#1-Direct-Exchange" class="headerlink" title="1. Direct Exchange"></a>1. Direct Exchange</h3></li><li>所有发送到Direct Exchange的消息被转发到Routekey中指定queue</li><li>Direct模式可以使用rabbitmq自带的exchange:default exchange, 所有不需要将exchange进行任何绑定操作,消息传递时,routekey必须完全匹配才会被队列接收,否则该消息会被抛弃.</li></ul><h3 id="2-Topic-Exchange"><a href="#2-Topic-Exchange" class="headerlink" title="2.Topic Exchange"></a>2.Topic Exchange</h3><ul><li>所有发送到Topic Exchange的消息被转发到所有关心routekey中指定topic的queue上</li><li>exchange将routekey和某topic进行模糊匹配,此时队列需要绑定一个topic</li><li>可以使用通配符进行模糊匹配</li><li>“#”匹配一个或多个词</li><li>“*”匹配一个词</li><li>例如:”log.#”能够匹配到”log.INF.oa”</li><li>例如:”log.*”能够匹配到”log.conf”</li></ul><h3 id="3-fanout-exchange"><a href="#3-fanout-exchange" class="headerlink" title="3. fanout exchange"></a>3. fanout exchange</h3><ul><li>不处理路由键,只需要简单的将队列绑定到交换机上</li><li>发送到交换机的消息都会被转发到与该交换机绑定的所有队列上</li><li>fanout交换机转发消息是最快的</li></ul><h2 id="4-Queue"><a href="#4-Queue" class="headerlink" title="4. Queue"></a>4. Queue</h2><ul><li>消息队列,实际存储消息数据</li><li>Durability:是否持久化,Durable:是,Transient:否</li><li>Auto delete:如选yes, 代表当最后一个监听被移除之后,该queue会自动被删除</li></ul><h2 id="5-VirtualHost"><a href="#5-VirtualHost" class="headerlink" title="5. VirtualHost"></a>5. VirtualHost</h2><ul><li>虚拟地址,用于进行逻辑隔离,最上层的消息路由</li><li>一个 virtual host 里面可以有若干个exchange和queue</li><li>同一个virtual host里面不能有相同名称的exchange或queue</li></ul><h1 id="三-消息生产与消费"><a href="#三-消息生产与消费" class="headerlink" title="三 消息生产与消费"></a>三 消息生产与消费</h1><ul><li>ConnrctionFactory:获取连接工厂</li><li>Connection:一个连接</li><li>Channel:数据通信信道,可发送和接收消息</li><li>Queue:具体的消息存储队列</li><li>Producer&amp;Consumer 生产和消费者</li></ul><h1 id="四-可靠性投递"><a href="#四-可靠性投递" class="headerlink" title="四 可靠性投递"></a>四 可靠性投递</h1><ul><li><ol><li>消息信息落库,对消息状态进行记录</li></ol></li><li><ol start="2"><li>消息的延迟投递,做二次确认,回调检查<br><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/rabbitmq/%E5%8F%AF%E9%9D%A0%E6%80%A7%E6%8A%95%E9%80%92%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E4%BA%8C.PNG" alt="方案二"></li></ol></li></ul><h1 id="五-消息确认机制"><a href="#五-消息确认机制" class="headerlink" title="五 消息确认机制"></a>五 消息确认机制</h1><h2 id="1-Confirm"><a href="#1-Confirm" class="headerlink" title="1. Confirm"></a>1. Confirm</h2><ul><li>消息确认,是指生产者投递消息后,如果Broker收到消息,则会给我们生产者一个应答.</li><li>生产者进行接收应答,用来确认这条消息是否正常的发送到Broker,这种方式也是消息的可靠性投递的核心保障</li><li>只能说明投递成功,不能说明消费者接收成功</li></ul><h2 id="2-Return消息机制"><a href="#2-Return消息机制" class="headerlink" title="2. Return消息机制"></a>2. Return消息机制</h2><ul><li>Return Listener用于处理一些不可路由的消息</li><li>如果我们在发送消息的时候,当前的exchange不存在或者指定的路由key路由不到,就需要用到Return Listener</li><li>关键配置项:Mandatory:如果为true,监听器接收到路由不可达的消息,然后进行后续处理,如果为false,那么broker端自动删除该消息</li></ul><h1 id="六-消费端限流"><a href="#六-消费端限流" class="headerlink" title="六 消费端限流"></a>六 消费端限流</h1><ul><li>Rabbitmq提供了一种qos(服务质量保证)功能,即在非自动确认消息的前提下,如果一定数目的消息(通过基于consume或者channel设置qos的值)未被确认前,不进行消费新的消息.</li><li>java 方法:<code>void BasicQos(unit pregetchSize,ushort prefetchCount,bool global);</code><ol><li>prefetchSize:0 (单条消息消费的大小限制,一般设为:0不限制)</li><li>prefetchCount:N (一般设置:1,会告诉rabbitmq不要同时给一个消费者推送多余N个消息,即一旦有N给消息还没有ack,则该consumer将block掉,直到有消息ack)</li><li>global:true/false (是否将上面设置应用于channel,简单点说,就是上面限制是channel级别的还是consumer级别)</li><li>注意:prefetchSize和global这两项,rabbitmq没有实现,prefetchCount在no_ask=false的情况下生效,机在自动应答的情况下这两个值是不生效的.</li></ol></li></ul><h1 id="七-消费端ack与重回队列"><a href="#七-消费端ack与重回队列" class="headerlink" title="七 消费端ack与重回队列"></a>七 消费端ack与重回队列</h1><ul><li>消费端进行消费的时候,如果由于业务异常我们可以进行日志的记录,然后进行补偿</li><li>如果由于服务器宕机等严重问题,那我们就需要手工进行ack保障消费端消费端消费成功</li><li>消费端重回队列是为了对没有处理成功的消息,把消息重新递给broker</li><li>一般我们在实际应用中,都会关闭重回队列,也就是设置为false</li></ul><h1 id="八-TTL队列-消息"><a href="#八-TTL队列-消息" class="headerlink" title="八 TTL队列/消息"></a>八 TTL队列/消息</h1><ul><li>在消息发送时可以进行指定消息的过期时间</li><li>队列的过期时间,从消息进入队列开始计算,只要超过了队列的超时时间配置,那么消息会自动的清除</li></ul><h1 id="九-死信队列-DLX-Dead-Letter-Exchange"><a href="#九-死信队列-DLX-Dead-Letter-Exchange" class="headerlink" title="九 死信队列(DLX,Dead-Letter-Exchange)"></a>九 死信队列(DLX,Dead-Letter-Exchange)</h1><ol><li><p>特点</p><ul><li>利用DLX,当消息在一个队列中变成死信(dead message)之后,它能被重新publish到另一个exchange,这个exchange就是DLX</li><li>DLX也是一个正常的exchange,和一般的exchange没有区别,他能在任何的队列上被指定,实际上就是设置某个队列的属性.</li><li>当这个队列中有死信时,rabbitmq就会自动的将这个消息重新发布到设置的exchange上去,进而被路由到另一个队列.</li><li>可以监听这个队列中消息做相应的处理</li></ul></li><li><p>消息变成死信的情况</p><ul><li>消息被拒绝(basic.reject/basic.nack)并且requeue=false</li><li>消息TTL过期</li><li>队列达到最大长度</li></ul></li><li><p>死信队列设置:</p><ul><li>进行正常声明交换机,队列,绑定,只不过我们需要在队列加上一个参数即可:arguments.put(“x-dead-letter-exchange”,”dlx.exchange”);</li></ul></li></ol><h1 id="十-Spring-Cloud-Stream-整合"><a href="#十-Spring-Cloud-Stream-整合" class="headerlink" title="十 Spring Cloud Stream 整合"></a>十 Spring Cloud Stream 整合</h1><ul><li>barista接口:定义通道类型和通道名称,通道名称是作为配置用,通道类型则决定了app会使用者一通道进行发送消息还是从中接收消息</li><li>@Ouput:输出注解,用于定义发送消息接口</li><li>@Input:输入注解,用于定义消息的消费者接口</li><li>缺点:不能实现可靠性的投递,会存在少量消息丢失的问题</li></ul><h1 id="消息使用"><a href="#消息使用" class="headerlink" title="消息使用"></a>消息使用</h1><h2 id="1-事务机制"><a href="#1-事务机制" class="headerlink" title="1. 事务机制"></a>1. 事务机制</h2><ol><li><p>基本使用</p><ul><li>RabbitMQ中与事务机制有关的方法有三个：txSelect(), txCommit()以及txRollback()</li><li>txSelect用于将当前channel设置成transaction模式</li><li>txCommit用于提交事务</li><li>txRollback用于回滚事务</li><li>在通过txSelect开启事务之后，我们便可以发布消息给broker代理服务器了，如果txCommit提交成功了，则消息一定到达了broker了，如果在txCommit执行之前broker异常崩溃或者由于其他原因抛出异常，这个时候我们便可以捕获异常通过txRollback回滚事务了</li><li>使用说明地址:<code>https://www.jianshu.com/p/801456df3930</code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">channel.txSelect(); </span><br><span class="line">channel.basicPublish(<span class="string">""</span>, QUEUE_NAME, <span class="keyword">null</span>, msg.getBytes()); </span><br><span class="line">channel.txCommit();</span><br></pre></td></tr></table></figure></li></ul></li><li><p>缺点和解决方案</p></li></ol><ul><li>在并发量大的情况在rabbitmq事务会非常的占用资源</li><li>解决方法:<ol><li>采用类似可靠性投递的机制,进行补偿投递</li><li>操作的数据源要统一,也就是业务操作db1和消息投递的db2使用同一个数据源</li></ol></li></ul><h1 id="制定扩展"><a href="#制定扩展" class="headerlink" title="制定扩展"></a>制定扩展</h1><ul><li>插件搜索下载地址:<code>http://www.rabbitmq.com/community-plugins.html</code></li></ul><ol><li>延迟队列插件</li></ol><ul><li><p>延迟插件名称:rabbitmq_delayed_message_exchange</p></li><li><p>将<code>***.ez</code>放入<code>{rabbitmq_server}/plugins</code>目录下</p></li><li><p>重命名插件名称<code>rabbitmq_delayed_message_exchange-0.0.1.ez</code></p></li><li><p>启动插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins enable rabbitmq_delayed_message_exchange</span><br></pre></td></tr></table></figure><ul><li>ps: 关闭指定插件的命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmq-plugins disable rabbitmq_delayed_message_exchange</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="Github地址"><a href="#Github地址" class="headerlink" title="Github地址"></a>Github地址</h1><p><a href="https://github.com/chcGolang/RabbitMQ_Test" target="_blank" rel="noopener">https://github.com/chcGolang/RabbitMQ_Test</a></p>]]></content>
      
      
      <categories>
          
          <category> 消息队列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RabbitMq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式事务总结</title>
      <link href="/posts/a9e99186/"/>
      <url>/posts/a9e99186/</url>
      
        <content type="html"><![CDATA[<h1 id="GitHub地址"><a href="#GitHub地址" class="headerlink" title="GitHub地址"></a>GitHub地址</h1><p><a href="https://github.com/chcGolang/DistributedTransaction" target="_blank" rel="noopener">分布式事务知识</a><br><a href="https://github.com/chcGolang/SpringCloud_Test" target="_blank" rel="noopener">SpringCloud整合</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ol><li>什么是事务</li></ol><ul><li>事务是以一种可靠,一致的方式,访问和操作数据库中数据的程序单元</li></ul><ol start="2"><li><p>原则</p><ul><li>原子性</li><li>一致性</li><li>隔离性</li><li>持久性</li></ul></li><li><p>sql版的事务</p><ul><li>案例教程:<code>http://www.runoob.com/mysql/mysql-transaction.html</code><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;  <span class="comment"># 开始事务</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> runoob_transaction_test <span class="keyword">value</span>(<span class="number">5</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> runoob_transaction_test <span class="keyword">value</span>(<span class="number">6</span>);</span><br><span class="line"><span class="keyword">commit</span>; <span class="comment"># 提交事务</span></span><br><span class="line"><span class="keyword">rollback</span>;  <span class="comment"># 回滚</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>mysql的查询锁</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 加入FOR UPDATE就会获取锁,但是会锁住全表</span><br><span class="line">SELECT * FROM T_USER FOR UPDATE</span><br><span class="line"></span><br><span class="line"># 加入where条件,则只会锁住符合条件的那条数据</span><br><span class="line">SELECT * FROM T_USER WHERE id=1 FOR UPDATE</span><br></pre></td></tr></table></figure></li></ol><h1 id="Spring事务"><a href="#Spring事务" class="headerlink" title="Spring事务"></a>Spring事务</h1><h2 id="spring事务机制"><a href="#spring事务机制" class="headerlink" title="spring事务机制"></a>spring事务机制</h2><ul><li>提供统一的API接口支持不同的资源</li><li>提供声明式事务管理</li><li>方便的与Spring框架集成</li><li>多个资源的事务管理,同步</li></ul><h2 id="spring事务抽象"><a href="#spring事务抽象" class="headerlink" title="spring事务抽象"></a>spring事务抽象</h2><ul><li><p>PlatformTransactionManager:提供事务管理器的接口</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 事务管理器</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PlatformTransactionManager</span></span>&#123;</span><br><span class="line">    <span class="function">TransactionStatus <span class="title">getTransaction</span><span class="params">(TransactionDefinition definition)</span> <span class="keyword">throws</span> TransactionException</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">commit</span><span class="params">(TransactionStatus status)</span><span class="keyword">throws</span> TransactionException</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rollback</span><span class="params">(TransactionStatus status)</span><span class="keyword">throws</span> TransactionException</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>TransactionDefinition: 事务的定义</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 事务定义</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TransactionDefinition</span></span>&#123;</span><br><span class="line">    <span class="comment">// 获取事务传播机制</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getPropagationBehavior</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 隔离级别</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getlsolationLevel</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 事务名字</span></span><br><span class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 超时时间</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getTimeout</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 是否为只读</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isReadOnly</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ol><li>事务的隔离级别</li></ol><table><thead><tr><th>隔离级别</th><th>含义</th></tr></thead><tbody><tr><td>TransactionDefinition.ISOLATION_DEFAULT (默认)</td><td>使用后端数据库默认的隔离级别。</td></tr><tr><td>TransactionDefinition.ISOLATION_READ_UNCOMMITTED</td><td>允许读取尚未提交的更改。可能导致脏读、幻影读或不可重复读。</td></tr><tr><td>TransactionDefinition.ISOLATION_READ_COMMITTED</td><td>允许从已经提交的并发事务读取。可防止脏读，但幻影读和不可重复读仍可能会发生。</td></tr><tr><td>TransactionDefinition.ISOLATION_REPEATABLE_READ</td><td>对相同字段的多次读取的结果是一致的，除非数据被当前事务本身改变。可防止脏读和不可重复读，但幻影读仍可能发生。</td></tr><tr><td>TransactionDefinition.ISOLATION_SERIALIZABLE</td><td>完全服从ACID的隔离级别，确保不发生脏读、不可重复读和幻影读。这在所有隔离级别中也是最慢的，因为它通常是通过完全锁定当前事务所涉及的数据表来完成的。</td></tr></tbody></table><ol start="2"><li>传播机制</li></ol><table><thead><tr><th>传播行为</th><th>意义</th></tr></thead><tbody><tr><td>TransactionDefinition.PROPAGATION_MANDATORY</td><td>表示该方法必须运行在一个事务中。如果当前没有事务正在发生，将抛出一个异常</td></tr><tr><td>TransactionDefinition.PROPAGATION_NESTED</td><td>表示如果当前正有一个事务在进行中，则该方法应当运行在一个嵌套式事务中。被嵌套的事务可以独立于封装事务进行提交或回滚。如果封装事务不存在，行为就像PROPAGATION_REQUIRES一样。</td></tr><tr><td>TransactionDefinition.PROPAGATION_NEVER</td><td>表示当前的方法不应该在一个事务中运行。如果一个事务正在进行，则会抛出一个异常。</td></tr><tr><td>TransactionDefinition.PROPAGATION_NOT_SUPPORTED</td><td>表示该方法不应该在一个事务中运行。如果一个现有事务正在进行中，它将在该方法的运行期间被挂起。</td></tr><tr><td>TransactionDefinition.PROPAGATION_SUPPORTS</td><td>表示当前方法不需要事务性上下文，但是如果有一个事务已经在运行的话，它也可以在这个事务里运行。</td></tr><tr><td>TransactionDefinition.PROPAGATION_REQUIRES_NEW</td><td>表示当前方法必须在它自己的事务里运行。一个新的事务将被启动，而且如果有一个现有事务在运行的话，则将在这个方法运行期间被挂起。</td></tr><tr><td>TransactionDefinition.PROPAGATION_REQUIRED (默认)</td><td>表示当前方法必须在一个事务中运行。如果一个现有事务正在进行中，该方法将在那个事务中运行，否则就要开始一个新事务。</td></tr></tbody></table><ul><li>TransactionStatus: 正在运行的事务状态  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TransactionStatus</span> <span class="keyword">extends</span> <span class="title">SavepointManager</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> isNew <span class="title">Transaction</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">hasSavepoint</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setRolbackOnly</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isRollbackOnly</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isCompleted</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="PlatformTransactionManager的常见实现"><a href="#PlatformTransactionManager的常见实现" class="headerlink" title="PlatformTransactionManager的常见实现"></a>PlatformTransactionManager的常见实现</h3><ul><li>DataSourceTransactionManager</li><li>JpaTransactionManager</li><li>JmsTransactionManager</li><li>JtaTransactionManager</li></ul><h2 id="Spring外部事务和JTA"><a href="#Spring外部事务和JTA" class="headerlink" title="Spring外部事务和JTA"></a>Spring外部事务和JTA</h2><h3 id="本地事务"><a href="#本地事务" class="headerlink" title="本地事务"></a>本地事务</h3><ul><li>Spring容器管理事务的生命周期</li><li>通过Spring事务接口调用</li><li>业务代码与具体事务的实现无关<br><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/rabbitmq/spring%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1.PNG" alt="image"></li></ul><h3 id="外部-全局-事务"><a href="#外部-全局-事务" class="headerlink" title="外部(全局)事务"></a>外部(全局)事务</h3><ul><li>外部事务管理器提供事务管理</li><li>通过spring事务接口,调用外部管理器</li><li>使用JNDI等方式获取外部事务管理器的实例</li><li>外部事务管理器一般由应用服务器提供,如Jboss等</li></ul><h4 id="JTA"><a href="#JTA" class="headerlink" title="JTA"></a>JTA</h4><ul><li>外部事务管理器提供JTA事务管理</li><li>JTA事务管理器可以管理多个数据资源</li><li>通过2阶段提交实现多数据源的事务</li><li>JTA用途:一个java服务访问多个数据源的时候<br><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/rabbitmq/%E5%A4%96%E9%83%A8%E4%BA%8B%E5%8A%A1.PNG" alt="image"></li></ul><h4 id="XA与JTA"><a href="#XA与JTA" class="headerlink" title="XA与JTA"></a>XA与JTA</h4><ul><li>XA协议由Tuxedo首先提出的，并交给X/Open组织，作为资源管理器（数据库）与事务管理器的接口标准</li><li>Transaction Manager</li><li>XA Resource</li><li>两阶段提交</li><li>Spring Boot通过Atomkos或Bitronix的内嵌事务管理器支持跨多个XA资源的分布式JTA事务，当部署到恰当的J2EE应用服务器时也会支持JTA事务。</li><li>当发现JTA环境时，SpringBoot将使用Spring的JtaTransactionManager来管理事务。自动配置的JMS，DataSource和JPA　beans将被升级以支持XA事务。你可以使用标准的Spring idioms，比如@Transactional，来参与到一个分布式事务中。如果处于JTA环境，但仍想使用本地事务，你可以将spring.jta.enabled属性设置为false来禁用JTA自动配置功能。</li></ul><p><a href="https://www.breakyizhan.com/springboot/3413.html" target="_blank" rel="noopener">https://www.breakyizhan.com/springboot/3413.html</a></p><h4 id="JTA事务管理的弊端"><a href="#JTA事务管理的弊端" class="headerlink" title="JTA事务管理的弊端"></a>JTA事务管理的弊端</h4><ul><li>两阶段提交(第一阶段：准备阶段(投票阶段)和第二阶段：提交阶段（执行阶段）)</li><li>事务时间太长,锁数据的时间太长</li><li>低性能,低吞吐量</li></ul><h4 id="不使用JTA实现多数据源的事务管理"><a href="#不使用JTA实现多数据源的事务管理" class="headerlink" title="不使用JTA实现多数据源的事务管理"></a>不使用JTA实现多数据源的事务管理</h4><ul><li>Spring事务同步机制</li><li>多数据源上实现近似事务一致性</li><li>高性能,高吞吐量</li></ul><h2 id="spring事务异常"><a href="#spring事务异常" class="headerlink" title="spring事务异常"></a>spring事务异常</h2><ol><li>Spring Boot 2.0 使用data JPA @Transactional 报错事务不回滚</li></ol><ul><li>解决方法:<code>https://blog.csdn.net/kylinregister/article/details/80678223</code></li></ul><h1 id="分布式系统"><a href="#分布式系统" class="headerlink" title="分布式系统"></a>分布式系统</h1><ul><li>定义:将不同的组件分布在不同的服务器上,给用户提供一个可靠,统一的服务</li></ul><h2 id="基本原则"><a href="#基本原则" class="headerlink" title="基本原则"></a>基本原则</h2><ul><li>C 一致性</li><li>A 可用性</li><li>P 分区容错性</li></ul><h2 id="分布式系统设计需要考虑的问题"><a href="#分布式系统设计需要考虑的问题" class="headerlink" title="分布式系统设计需要考虑的问题"></a>分布式系统设计需要考虑的问题</h2><ul><li>服务拆分</li><li>数据拆分</li><li>计算拆分</li><li>服务状态以及异常处理</li></ul><h3 id="微服务架构的组成"><a href="#微服务架构的组成" class="headerlink" title="微服务架构的组成"></a>微服务架构的组成</h3><ul><li>服务发现与注册</li><li>服务网关与负载均衡</li><li>监控与熔断机制</li><li>配置,消息等</li></ul><h1 id="分布式事务"><a href="#分布式事务" class="headerlink" title="分布式事务"></a>分布式事务</h1><h2 id="事务的原则"><a href="#事务的原则" class="headerlink" title="事务的原则"></a>事务的原则</h2><ul><li>A 原子性</li><li>C 一致性</li><li>I 隔离性</li><li>D 持久性</li></ul><h2 id="spring分布式事务"><a href="#spring分布式事务" class="headerlink" title="spring分布式事务"></a>spring分布式事务</h2><p><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/spring%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1.PNG" alt="image"></p><h3 id="spring-JTA"><a href="#spring-JTA" class="headerlink" title="spring JTA"></a>spring JTA</h3><ul><li>可以使用如JBoss之类的应用服务器提供的JTA事务管理器</li><li>可以使用Atomikos,Bitronix等库提供的JTA事务管理器</li></ul><h3 id="不使用JTA的事务方案"><a href="#不使用JTA的事务方案" class="headerlink" title="不使用JTA的事务方案"></a>不使用JTA的事务方案</h3><ol><li><p>使用MQ最大努力一次提交+重试</p><ul><li>提交MQ事务出错,消息会被放回MQ,重新触发该方法</li><li>会重复数据库操作,需要忽略重复消息</li></ul></li><li><p>链式事务管理</p><ul><li>定义一个事务链</li><li>多个事务在一个事务管理器里依次提交</li><li>可能出错</li></ul></li></ol><h3 id="如何选择方案"><a href="#如何选择方案" class="headerlink" title="如何选择方案"></a>如何选择方案</h3><ol><li><p>根据一致性要求</p><ul><li>强一致性事务:JTA(性能最差,只适用于单个服务内)</li><li>弱,最终一致性事务:最大努力一次提交,链式事务(设计相应的错误处理机制)</li></ul></li><li><p>根据场景</p><ul><li>MQ-DB:最大努力一次提交+重试</li><li>多个DB:链式事务</li><li>多个数据源:链式事务,或其他事务同步方式</li></ul></li></ol><h2 id="分布式事务实现模式与技术"><a href="#分布式事务实现模式与技术" class="headerlink" title="分布式事务实现模式与技术"></a>分布式事务实现模式与技术</h2><h3 id="分布式系统唯一性ID-GUID"><a href="#分布式系统唯一性ID-GUID" class="headerlink" title="分布式系统唯一性ID:GUID"></a>分布式系统唯一性ID:GUID</h3><ul><li>分布式系统的全局唯一标识</li><li>UUID:生成唯一id的规范</li><li>用于唯一标识,处理重复消息</li><li>Redis的INCR操作,Zookeeper节点的版本号</li></ul><h3 id="分布式系统分布式对象"><a href="#分布式系统分布式对象" class="headerlink" title="分布式系统分布式对象"></a>分布式系统分布式对象</h3><ul><li>Redis:Redisson库:RLock,RMap,RQueue等对象</li><li>Zookeeper:Netflix Curator库:Lock,Queue等对象</li></ul><h3 id="实现模式"><a href="#实现模式" class="headerlink" title="实现模式"></a>实现模式</h3><ul><li>消息驱动模式:Message Driven (使用MQ消息将服务串起来)</li><li>事件溯源模式:Event Sourcing</li><li>TCC模式:Tty-Confirm-Cancel</li></ul><h3 id="消息驱动模式"><a href="#消息驱动模式" class="headerlink" title="消息驱动模式"></a>消息驱动模式</h3><h4 id="微服务架构的事务问题"><a href="#微服务架构的事务问题" class="headerlink" title="微服务架构的事务问题"></a>微服务架构的事务问题</h4><ol><li>服务间调用操作的回滚</li><li>服务间调用失败的重试问题</li></ol><ul><li>解决方法:<ul><li>方法1:减少服务间的调用</li><li>方法2:没有服务间调用,通过消息驱动调用服务</li></ul></li></ul><ol start="3"><li>案例地址:<a href="https://github.com/chcGolang/SpringCloud_Test" target="_blank" rel="noopener">https://github.com/chcGolang/SpringCloud_Test</a></li></ol><h4 id="注意的问题"><a href="#注意的问题" class="headerlink" title="注意的问题"></a>注意的问题</h4><ul><li>消息中间件需要支持事务</li><li>如何处理重试的消息</li><li>发送业务异常时回滚操作</li></ul><h4 id="系统错误的处理"><a href="#系统错误的处理" class="headerlink" title="系统错误的处理"></a>系统错误的处理</h4><ul><li>方法1: 将出错未处理的消息写到失败队列,进行相应回滚操作</li><li>方法2: 通过定时任务检查超时订单,对未完成的订单做自动回滚</li><li>方法3: 保存出错消息,人工处理</li></ul><h3 id="事件溯源"><a href="#事件溯源" class="headerlink" title="事件溯源"></a>事件溯源</h3><ul><li>优点<ol><li>历史重新:从事件中重新生成视图数据库</li><li>方便的数据流处理与报告生成</li><li>性能</li><li>服务的松耦合</li></ol></li><li>缺点<ol><li>只能保证事务的最终一致性</li><li>设计和开发思维的转变,学习成本</li><li>事件结构的改变</li><li>扩展性:Event Store的分布式实现,事件的分布式处理</li></ol></li></ul><h4 id="Axon框架"><a href="#Axon框架" class="headerlink" title="Axon框架"></a>Axon框架</h4><ul><li>学习入门地址:<a href="https://docs.axoniq.io/reference-guide/" target="_blank" rel="noopener">https://docs.axoniq.io/reference-guide/</a></li><li>实现Event Sourcing和CQRS模式的框架</li><li>实现命令,事件的分发,处理,聚合,查询,存储</li><li>提供标签式开发,易维护,并提供SpringBoot的集成</li><li>提供Command和Event</li></ul><h5 id="Axon框架的构成"><a href="#Axon框架的构成" class="headerlink" title="Axon框架的构成"></a>Axon框架的构成</h5><ul><li>聚合:Aggregate</li><li>聚合的资源库:Repository</li><li>Command:Command Bus和command handler</li><li>Event:Event Bus,Event Handler和Event Store</li><li>Saga:基于事件的流程管理模式</li><li>Query:执行数据查询操作的特殊Command\</li><li>可扩展性<ol><li>分布式Command分发</li><li>通过AMQP实现分布式Event分发和处理</li></ol></li></ul><h5 id="Axon框架处理Command过程"><a href="#Axon框架处理Command过程" class="headerlink" title="Axon框架处理Command过程"></a>Axon框架处理Command过程</h5><ul><li>Resource收到请求,send给CommandGateway</li><li>CommandGateway执行拦截器等,在发给CommandBus</li><li>CommandBus创建一个Unitofwork,关联一个事务,在其中调用CommandHandler处理这个Command</li><li>CommandHandler使用Repository获得一个聚合对象,并聚合所有该对象的event.设置lock,然后调用处理方法</li><li>CommandHandler在触发一个Event</li></ul><h5 id="Axon框架处理Event过程"><a href="#Axon框架处理Event过程" class="headerlink" title="Axon框架处理Event过程"></a>Axon框架处理Event过程</h5><ul><li>CommandHandler执行apply来触发一个event</li><li>EventBus在这个event上执行拦截器等</li><li>EventBus将在这个event保存到EventStore</li><li>EventBus调用在这个event上注册的所有处理方法(在UnitOfWork中执行)</li><li>在EventHandler中更新聚合数据,保存视图数据库,触发其他Command</li></ul><h5 id="Axon框架Command和event的区别"><a href="#Axon框架Command和event的区别" class="headerlink" title="Axon框架Command和event的区别"></a>Axon框架Command和event的区别</h5><ul><li>Command<ol><li>表示某种业务动作</li><li>只被处理一次</li><li>可以有返回值</li><li>只做条件检查,触发相应Event去更新数据</li></ol></li><li>Event<ol><li>表示系统内发生的事件,某种业务状态的更新</li><li>可以被多次处理</li><li>没有返回值</li><li>更新聚合数据并保持在Event Store中,用重新生成聚合数据</li></ol></li></ul><h5 id="Axon-Saga"><a href="#Axon-Saga" class="headerlink" title="Axon Saga"></a>Axon Saga</h5><ul><li>StartSaga - SageEventHandler - EndSaga</li><li>使用associate将不同的事件关联到同一个Saga流程中</li><li>正常的结束都通过EndSaga标签触发,超时使用EventScheduler,触发一个EndSaga</li><li>一个业务流程的执行对应一个saga实例</li><li>Saga实例状态和关联的事件会保证在数据库中</li></ul><h4 id="Axon分布式Event设计"><a href="#Axon分布式Event设计" class="headerlink" title="Axon分布式Event设计"></a>Axon分布式Event设计</h4><ul><li>聚合类上的Event Handler是本地处理,通过AMQP触发</li><li>聚合类上是处理完Event,在通过AMQP分发</li><li>每个服务监听各自的队列</li><li>每个事件只会被处理一次</li><li>每个EventHandler处理过的Event,都会保存在该服务的数据库中</li><li>Saga负责流程编排,Aggregate用于处理数据状态</li><li>Saga要负责处理流程内的所有事件</li><li>Saga处理的事件不会保存在domain_event表中</li><li>每个saga对象也会序列化后保存在数据库中</li><li>saga所在的服务可以实现分布式部署</li></ul><h2 id="分布式事务实现总结"><a href="#分布式事务实现总结" class="headerlink" title="分布式事务实现总结"></a>分布式事务实现总结</h2><ul><li>保证高可用:网络,分布式部署</li><li>保证事务同步:同步多数据源的事务</li><li>保证幂等性:通过重试解决大部分错误</li><li>合理设计流程:条件检查,预留资源,业务操作,完成资源</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> 事务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Socks5搭建</title>
      <link href="/posts/e2c8b11c/"/>
      <url>/posts/e2c8b11c/</url>
      
        <content type="html"><![CDATA[<h6 id="Socks5下载"><a href="#Socks5下载" class="headerlink" title="Socks5下载"></a>Socks5下载</h6><p>下载地址：<a href="http://sourceforge.net/projects/ss5/files/" target="_blank" rel="noopener">http://sourceforge.net/projects/ss5/files/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#通过yum安装ss5 依赖包：</span><br><span class="line">yum install gcc openldap-devel pam-devel openssl-devel</span><br><span class="line"></span><br><span class="line"># 解压,&quot;ss5-3.8.9-8.tar.gz&quot;是刚才下载的压缩包</span><br><span class="line"># -v过程显示文件 -z解压/压缩gzip -x解压操作 -f 后面加要操作的文件</span><br><span class="line">tar -vzx -f ss5-3.8.9-8.tar.gz</span><br><span class="line"></span><br><span class="line">cd ss5-3.8.9/</span><br><span class="line"></span><br><span class="line"># configure是一个shell脚本</span><br><span class="line"># 主要的作用是对即将安装的程序进行配置，</span><br><span class="line"># 检查当前的环境是否满足要安装程序的依赖关系.</span><br><span class="line"># 如果系统环境合适，就会生成makefile，否则会报错。</span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line"># make是一个命令工具</span><br><span class="line"># 解释 Makefile 中的规则。</span><br><span class="line"># Makefile文件中描述了整个工程所有文件的编译顺序、编译规则。</span><br><span class="line"># 实际上make是执行Makefile中的第一条命令</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">#接下来开始安装刚刚编译的程序：</span><br><span class="line">#执行Makefile中的install</span><br><span class="line">#这些都可以在Makefile文件中看到</span><br><span class="line">#可以使用vim Makefile查看文件</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">#启动脚本加执行权限</span><br><span class="line">chmod +x /etc/init.d/ss5</span><br><span class="line">设置监听端口</span><br><span class="line"></span><br><span class="line">vi /etc/sysconfig/ss5  </span><br><span class="line"># Add startup option here  </span><br><span class="line">SS5_OPTS=&quot; -u root -b 0.0.0.0:2233&quot;</span><br><span class="line"></span><br><span class="line"># 启动服务</span><br><span class="line">service start ss5</span><br><span class="line"></span><br><span class="line">#使用用户名密码登录，修改配置文件中的两行</span><br><span class="line">vi /etc/opt/ss5/ss5.conf  </span><br><span class="line">auth 0.0.0.0/0 - u  </span><br><span class="line">permit u 0.0.0.0/0 - 0.0.0.0/0 - - - - -</span><br><span class="line"></span><br><span class="line">#用户名和密码，一个用户和密码一行，用空格间隔</span><br><span class="line">vi /etc/opt/ss5/ss5.passwd  </span><br><span class="line">user1 123</span><br><span class="line">user2 123</span><br><span class="line"></span><br><span class="line"># 重启服务</span><br><span class="line">service restart ss5</span><br></pre></td></tr></table></figure><p>代理使用工具：Proxifier </p><p>配置: 配置文件-&gt;代理服务器-&gt;添加<br><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/3.png" alt="image"></p><p>自定义代理规则（微信代理为案例）：配置文件-&gt;代理规则-&gt;添加</p><p><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/4.png" alt="image"></p><p>如果工具无法代理则:<br><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/5.png" alt="image"><br>然后重启电脑</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Frp内网穿透搭建和使用</title>
      <link href="/posts/dbd6de1a/"/>
      <url>/posts/dbd6de1a/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一-简介和注意点"><a href="#一-简介和注意点" class="headerlink" title="一. 简介和注意点"></a>一. 简介和注意点</h1><ul><li><a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">官方中文文档地址</a></li><li><a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">安装包下载地址</a></li></ul><h1 id="二-搭建部署-0-24-1"><a href="#二-搭建部署-0-24-1" class="headerlink" title="二. 搭建部署(0.24.1)"></a>二. 搭建部署(0.24.1)</h1><h2 id="1-服务端部署"><a href="#1-服务端部署" class="headerlink" title="1. 服务端部署"></a>1. 服务端部署</h2><h3 id="第一种部署方式-安装包"><a href="#第一种部署方式-安装包" class="headerlink" title="第一种部署方式:安装包"></a>第一种部署方式:安装包</h3><ol><li><p>下载安装包</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置shell环境变量frp版本</span></span><br><span class="line"><span class="built_in">export</span> FRP_VERSION=0.24.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载并解压为frps</span></span><br><span class="line">wget https://github.com/fatedier/frp/releases/download/v<span class="variable">$&#123;FRP_VERSION&#125;</span>/frp_<span class="variable">$&#123;FRP_VERSION&#125;</span>_linux_amd64.tar.gz \</span><br><span class="line">&amp;&amp; tar -xf frp_<span class="variable">$&#123;FRP_VERSION&#125;</span>_linux_amd64.tar.gz \</span><br><span class="line">&amp;&amp; mkdir frps \</span><br><span class="line">&amp;&amp; cp frp_<span class="variable">$&#123;FRP_VERSION&#125;</span>_linux_amd64/frps* frps/ \</span><br><span class="line">&amp;&amp; rm -rf frp_<span class="variable">$&#123;FRP_VERSION&#125;</span>_linux_amd64*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="built_in">cd</span> frps</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件<code>frps.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [common] is integral section</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="comment"># 服务ip地址</span></span><br><span class="line"><span class="comment"># frp的服务端口号</span></span><br><span class="line"><span class="attr">bind_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># udp 端口</span></span><br><span class="line"><span class="attr">bind_udp_port</span> = <span class="number">7001</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kcp绑定的端口,可以和 bind_port 一样</span></span><br><span class="line"><span class="attr">kcp_bind_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># specify which address proxy will listen for, default value is same with bind_addr</span></span><br><span class="line"><span class="comment"># proxy_bind_addr = 127.0.0.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置http和https穿透的服务端口</span></span><br><span class="line"><span class="comment"># 注意:http端口和https端口可以与bind_port相同</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">vhost_https_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># http服务器响应头超时(秒)，默认为60s</span></span><br><span class="line"><span class="comment"># vhost_http_timeout = 60</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frps控制台</span></span><br><span class="line"><span class="comment"># dashboard_addr的默认值与bind_addr相同</span></span><br><span class="line"><span class="comment"># 只有设置了dashboard_port，仪表板才可用</span></span><br><span class="line"><span class="attr">dashboard_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7500</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frps控制台 用户名密码，默认都为 admin</span></span><br><span class="line"><span class="attr">dashboard_user</span> = admin</span><br><span class="line"><span class="attr">dashboard_pwd</span> = admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志文件</span></span><br><span class="line"><span class="attr">log_file</span> = ./frps.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志级别:trace, debug, info, warn, error</span></span><br><span class="line"><span class="attr">log_level</span> = info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志保存天数</span></span><br><span class="line"><span class="attr">log_max_days</span> = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frps的认证密码，用于客户端连接</span></span><br><span class="line"><span class="attr">token</span> = <span class="number">12345678</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># heartbeat configure, it's not recommended to modify the default value</span></span><br><span class="line"><span class="comment"># the default value of heartbeat_timeout is 90</span></span><br><span class="line"><span class="comment"># heartbeat_timeout = 90</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  可以配置允许使用的某个指定端口或者是一个范围内的所有端口，以 , 分隔，指定的范围以 - 分隔。</span></span><br><span class="line"><span class="comment"># allow_ports = 2000-3000,3001,3003,4000-50000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置每个代理可以创建的连接池上限,客户端设置超过此配置后会被调整到当前</span></span><br><span class="line"><span class="attr">max_pool_count</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个客户端可以使用最大端口，默认值为0表示没有限制</span></span><br><span class="line"><span class="attr">max_ports_per_client</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frps子域名设置，默认为空，可以输入类似abc.com这样的域名</span></span><br><span class="line"><span class="attr">subdomain_host</span> = </span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否tcp流多路复用</span></span><br><span class="line"><span class="attr">tcp_mux</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>systemctl来控制启动，并且加入自启</p></li></ol><ul><li><p>执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /lib/systemd/system/frps.service</span><br></pre></td></tr></table></figure></li><li><p>加入内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=fraps service</span><br><span class="line">After=network.target syslog.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">#启动服务的命令（此处写你的frps的实际安装目录）</span><br><span class="line">ExecStart=/your/path/frps -c /your/path/frps.ini</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></li><li><p>自启动命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动命令</span><br><span class="line">systemctl start frps </span><br><span class="line"># 自启动设置 </span><br><span class="line">systemctl enable frps</span><br></pre></td></tr></table></figure></li></ul><h3 id="第二种部署方式-docker"><a href="#第二种部署方式-docker" class="headerlink" title="第二种部署方式:docker"></a>第二种部署方式:docker</h3><ol><li>docker配置地址:<a href="https://github.com/chcGolang/frps" target="_blank" rel="noopener">https://github.com/chcGolang/frps</a></li><li>DockerHub地址:<a href="https://hub.docker.com/r/chcgolang/frps" target="_blank" rel="noopener">https://hub.docker.com/r/chcgolang/frps</a></li></ol><h2 id="2-域名配置"><a href="#2-域名配置" class="headerlink" title="2. 域名配置"></a>2. 域名配置</h2><p><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/%E4%BE%BF%E5%88%A9%E6%80%A7%E5%B7%A5%E5%85%B7/%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE.png" alt="image"></p><h2 id="2-客户端部署"><a href="#2-客户端部署" class="headerlink" title="2. 客户端部署"></a>2. 客户端部署</h2><h3 id="1-安装包的方式部署"><a href="#1-安装包的方式部署" class="headerlink" title="1. 安装包的方式部署"></a>1. 安装包的方式部署</h3><ol><li><p>linux</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置shell环境变量frp版本</span></span><br><span class="line"><span class="built_in">export</span> FRP_VERSION=0.24.1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载并解压为frps</span></span><br><span class="line">wget https://github.com/fatedier/frp/releases/download/v<span class="variable">$&#123;FRP_VERSION&#125;</span>/frp_<span class="variable">$&#123;FRP_VERSION&#125;</span>_linux_amd64.tar.gz \</span><br><span class="line">&amp;&amp; tar -xf frp_<span class="variable">$&#123;FRP_VERSION&#125;</span>_linux_amd64.tar.gz \</span><br><span class="line">&amp;&amp; mkdir frpc \</span><br><span class="line">&amp;&amp; cp frp_<span class="variable">$&#123;FRP_VERSION&#125;</span>_linux_amd64/frpc* frpc/ \</span><br><span class="line">&amp;&amp; rm -rf frp_<span class="variable">$&#123;FRP_VERSION&#125;</span>_linux_amd64*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入目录</span></span><br><span class="line"><span class="built_in">cd</span> frpc</span><br></pre></td></tr></table></figure></li><li><p>配置文件</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [common] is integral section</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="comment"># 服务端的公网IP和端口号</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过http代理或者socks5代理来连接frps，你可以在这里或者全局环境变量中设置http_proxy</span></span><br><span class="line"><span class="comment"># 仅在 protocol = tcp 时生效。</span></span><br><span class="line"><span class="comment"># http_proxy = http://user:passwd@192.168.1.128:8080</span></span><br><span class="line"><span class="comment"># http_proxy = socks5://user:passwd@192.168.1.128:1080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志记录文件</span></span><br><span class="line"><span class="comment"># log_file = ./frpc.log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志级别trace, debug, info, warn, error</span></span><br><span class="line"><span class="comment"># log_level = info</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志保存天数</span></span><br><span class="line"><span class="comment"># log_max_days = 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frps的认证密码</span></span><br><span class="line"><span class="attr">token</span> = <span class="number">12345678</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端管理视图</span></span><br><span class="line"><span class="attr">admin_addr</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">admin_port</span> = <span class="number">7400</span></span><br><span class="line"><span class="attr">admin_user</span> = admin</span><br><span class="line"><span class="attr">admin_pwd</span> = admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端预先建立连接</span></span><br><span class="line"><span class="attr">pool_count</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tcp流多路复用，必须与frps相同</span></span><br><span class="line"><span class="attr">tcp_mux</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理名称将更改为&#123;user&#125;。</span></span><br><span class="line"><span class="attr">user</span> = your_name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 决定是否退出程序时，第一次登录失败，否则继续重新登录到frps</span></span><br><span class="line"><span class="attr">login_fail_exit</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于连接服务器的通信协议</span></span><br><span class="line"><span class="comment"># 现在它支持tcp和kcp以及websocket</span></span><br><span class="line"><span class="attr">protocol</span> = tcp</span><br><span class="line"></span><br><span class="line"><span class="comment"># specify a dns server, so frpc will use this instead of default one</span></span><br><span class="line"><span class="comment"># dns_server = 8.8.8.8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定dns服务器，因此frpc将使用此服务器而不是默认服务器</span></span><br><span class="line"><span class="comment"># start = ssh,dns</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># heartbeat配置，不建议修改默认值</span></span><br><span class="line"><span class="comment"># the default value of heartbeat_interval is 10 and heartbeat_timeout is 90</span></span><br><span class="line"><span class="comment"># heartbeat_interval = 30</span></span><br><span class="line"><span class="comment"># heartbeat_timeout = 90</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh连接[里面的内容是唯一的]</span></span><br><span class="line"><span class="comment"># 如果[common]中的user不为空，则将其更改为&#123;user&#125;.&#123;proxy&#125;如'your_name.ssh</span></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="comment"># 连接类型:tcp | udp | http | https | stcp | xtcp</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frps和frpc之间的消息将被加密</span></span><br><span class="line"><span class="comment"># 如果公司内网防火墙对外网访问进行了流量识别与屏蔽，例如禁止了 ssh 协议等，通过设置 use_encryption = true，将 frpc 与 frps 之间的通信内容加密传输，将会有效防止流量被拦截。</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment"># 压缩传输的数据</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># remote port listen by frps</span></span><br><span class="line"><span class="comment"># remote_port = 6001</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># frps will load balancing connections for proxies in same group</span></span><br><span class="line"><span class="comment"># group = test_group</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># group should have same group key</span></span><br><span class="line"><span class="comment"># group_key = 123456</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用健康检查，类型为 tcp</span></span><br><span class="line"><span class="comment"># health_check_type = tcp</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立连接超时时间(秒)</span></span><br><span class="line"><span class="comment"># health_check_timeout_s = 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连续 3 次检查失败，此 proxy 会被摘除</span></span><br><span class="line"><span class="comment"># health_check_max_failed = 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每隔 10 秒进行一次健康检查</span></span><br><span class="line"><span class="comment"># health_check_interval_s = 10</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ssh_random]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="comment"># if remote_port is 0, frps will assign a random port for you</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if you want to expose multiple ports, add 'range:' prefix to the section name</span></span><br><span class="line"><span class="comment"># frpc will generate multiple proxies such as 'tcp_port_6010', 'tcp_port_6011' and so on.</span></span><br><span class="line"><span class="section">[range:tcp_port]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">6010</span>-<span class="number">6020</span>,<span class="number">6022</span>,<span class="number">6024</span>-<span class="number">6028</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6010</span>-<span class="number">6020</span>,<span class="number">6022</span>,<span class="number">6024</span>-<span class="number">6028</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 转发 DNS 查询请求</span></span><br><span class="line"><span class="section">[dns]</span></span><br><span class="line"><span class="attr">type</span> = udp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">114.114</span>.<span class="number">114.114</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">53</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6002</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 转发udp请求</span></span><br><span class="line"><span class="section">[range:udp_port]</span></span><br><span class="line"><span class="attr">type</span> = udp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">6010</span>-<span class="number">6020</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6010</span>-<span class="number">6020</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Resolve your domain names to [server_addr] so you can use http://web01.yourdomain.com to browse web01 and http://web02.yourdomain.com to browse web02</span></span><br><span class="line"><span class="section">[web01]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span></span><br><span class="line"><span class="comment"># http username and password are safety certification for http protocol</span></span><br><span class="line"><span class="comment"># if not set, you can access this custom_domains without certification</span></span><br><span class="line"><span class="attr">http_user</span> = admin</span><br><span class="line"><span class="attr">http_pwd</span> = admin</span><br><span class="line"><span class="comment"># if domain for frps is frps.com, then you can access [web01] proxy by URL http://test.frps.com</span></span><br><span class="line"><span class="attr">subdomain</span> = web01</span><br><span class="line"><span class="attr">custom_domains</span> = web02.yourdomain.com</span><br><span class="line"><span class="comment"># locations is only available for http type</span></span><br><span class="line"><span class="attr">locations</span> = /,/pic</span><br><span class="line"><span class="attr">host_header_rewrite</span> = example.com</span><br><span class="line"><span class="comment"># params with prefix "header_" will be used to update http request headers</span></span><br><span class="line"><span class="attr">header_X-From-Where</span> = frp</span><br><span class="line"><span class="attr">health_check_type</span> = http</span><br><span class="line"><span class="comment"># frpc will send a GET http request '/status' to local http service</span></span><br><span class="line"><span class="comment"># http service is alive when it return 2xx http response code</span></span><br><span class="line"><span class="attr">health_check_url</span> = /status</span><br><span class="line"><span class="attr">health_check_interval_s</span> = <span class="number">10</span></span><br><span class="line"><span class="attr">health_check_max_failed</span> = <span class="number">3</span></span><br><span class="line"><span class="attr">health_check_timeout_s</span> = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="section">[web02]</span></span><br><span class="line"><span class="attr">type</span> = https</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">8000</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">subdomain</span> = web01</span><br><span class="line"><span class="comment"># 访问的域名</span></span><br><span class="line"><span class="attr">custom_domains</span> = web02.yourdomain.com</span><br><span class="line"></span><br><span class="line"><span class="section">[plugin_unix_domain_socket]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6003</span></span><br><span class="line"><span class="comment"># if plugin is defined, local_ip and local_port is useless</span></span><br><span class="line"><span class="comment"># plugin will handle connections got from frps</span></span><br><span class="line"><span class="attr">plugin</span> = unix_domain_socket</span><br><span class="line"><span class="comment"># params with prefix "plugin_" that plugin needed</span></span><br><span class="line"><span class="attr">plugin_unix_path</span> = /var/run/docker.sock</span><br><span class="line"></span><br><span class="line"><span class="section">[plugin_http_proxy]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6004</span></span><br><span class="line"><span class="attr">plugin</span> = http_proxy</span><br><span class="line"><span class="attr">plugin_http_user</span> = abc</span><br><span class="line"><span class="attr">plugin_http_passwd</span> = abc</span><br><span class="line"></span><br><span class="line"><span class="section">[plugin_socks5]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6005</span></span><br><span class="line"><span class="attr">plugin</span> = socks5</span><br><span class="line"><span class="attr">plugin_user</span> = abc</span><br><span class="line"><span class="attr">plugin_passwd</span> = abc</span><br><span class="line"></span><br><span class="line"><span class="section">[plugin_static_file]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6006</span></span><br><span class="line"><span class="attr">plugin</span> = static_file</span><br><span class="line"><span class="attr">plugin_local_path</span> = /var/www/blog</span><br><span class="line"><span class="attr">plugin_strip_prefix</span> = static</span><br><span class="line"><span class="attr">plugin_http_user</span> = abc</span><br><span class="line"><span class="attr">plugin_http_passwd</span> = abc</span><br><span class="line"></span><br><span class="line"><span class="section">[secret_tcp]</span></span><br><span class="line"><span class="comment"># If the type is secret tcp, remote_port is useless</span></span><br><span class="line"><span class="comment"># Who want to connect local port should deploy another frpc with stcp proxy and role is visitor</span></span><br><span class="line"><span class="attr">type</span> = stcp</span><br><span class="line"><span class="comment"># sk used for authentication for visitors</span></span><br><span class="line"><span class="attr">sk</span> = abcdefg</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># user of frpc should be same in both stcp server and stcp visitor</span></span><br><span class="line"><span class="section">[secret_tcp_visitor]</span></span><br><span class="line"><span class="comment"># frpc role visitor -&gt; frps -&gt; frpc role server</span></span><br><span class="line"><span class="attr">role</span> = visitor</span><br><span class="line"><span class="attr">type</span> = stcp</span><br><span class="line"><span class="comment"># the server name you want to visitor</span></span><br><span class="line"><span class="attr">server_name</span> = secret_tcp</span><br><span class="line"><span class="attr">sk</span> = abcdefg</span><br><span class="line"><span class="comment"># connect this address to visitor stcp server</span></span><br><span class="line"><span class="attr">bind_addr</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">9000</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="section">[p2p_tcp]</span></span><br><span class="line"><span class="attr">type</span> = xtcp</span><br><span class="line"><span class="attr">sk</span> = abcdefg</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="section">[p2p_tcp_visitor]</span></span><br><span class="line"><span class="attr">role</span> = visitor</span><br><span class="line"><span class="attr">type</span> = xtcp</span><br><span class="line"><span class="attr">server_name</span> = p2p_tcp</span><br><span class="line"><span class="attr">sk</span> = abcdefg</span><br><span class="line"><span class="attr">bind_addr</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">9001</span></span><br><span class="line"><span class="attr">use_encryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>启动命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># windows</span><br><span class="line">frpc.exe -c frpc.ini</span><br><span class="line"># linux</span><br><span class="line">./frpc -c ./frpc.ini</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-路由器梅林固件部署"><a href="#2-路由器梅林固件部署" class="headerlink" title="2. 路由器梅林固件部署"></a>2. 路由器梅林固件部署</h3><ol><li>在软件中心安装 <strong>frpc穿透</strong> 的软件<br> <img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/%E4%BE%BF%E5%88%A9%E6%80%A7%E5%B7%A5%E5%85%B7/frpc%E5%B7%A5%E5%85%B7.png" alt="image"></li><li>进入进行配置就可以了</li></ol><h1 id="四-自己的frp服务端"><a href="#四-自己的frp服务端" class="headerlink" title="四. 自己的frp服务端"></a>四. 自己的frp服务端</h1><h2 id="1-frps-chc-cn"><a href="#1-frps-chc-cn" class="headerlink" title="1. frps.chc.cn"></a>1. frps.chc.cn</h2><ul><li>ip : 127.0.0.1</li></ul><table><thead><tr><th>Docker内定义</th><th>内容</th><th>描述</th></tr></thead><tbody><tr><td>bind_port</td><td>30000(TCP)</td><td>frps服务端口</td></tr><tr><td>kcp_bind_port</td><td>30000(UDP)</td><td>KCP加速端口</td></tr><tr><td>bind_udp_port</td><td>30001(UDP)</td><td>udp端口帮助udp洞洞穿nat</td></tr><tr><td>dashboard_port</td><td>30002(TCP)</td><td>Frps控制台端口</td></tr><tr><td>vhost_http_port</td><td>30000(TCP)</td><td>http穿透的端口。</td></tr><tr><td>vhost_https_port</td><td>30000(TCP)</td><td>https穿透服务的端口</td></tr><tr><td>token</td><td>teamfort</td><td>连接认证码</td></tr><tr><td>dashboard_user</td><td>teamfort</td><td>frps控制台用户名</td></tr><tr><td>dashboard_pwd</td><td>teamfort</td><td>frps控制台密码</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud使用总结</title>
      <link href="/posts/774b3897/"/>
      <url>/posts/774b3897/</url>
      
        <content type="html"><![CDATA[<h1 id="Github地址"><a href="#Github地址" class="headerlink" title="Github地址"></a>Github地址</h1><p><a href="https://github.com/chcGolang/SpringCloud_Test" target="_blank" rel="noopener">SpringCloud总结</a></p><h1 id="微服务架构组成"><a href="#微服务架构组成" class="headerlink" title="微服务架构组成"></a>微服务架构组成</h1><ul><li>服务</li><li>服务注册中心</li><li>网关</li><li>服务间调用协议</li></ul><h1 id="Springcloud微服务架构"><a href="#Springcloud微服务架构" class="headerlink" title="Springcloud微服务架构"></a>Springcloud微服务架构</h1><ul><li>spring cloud Netflix 微服务架构</li><li>spring cloud Config 配置服务中心</li><li>spring cloud Bus 事件总线</li></ul><h2 id="Spring-Cloud-Netflix-微服务架构"><a href="#Spring-Cloud-Netflix-微服务架构" class="headerlink" title="Spring Cloud Netflix 微服务架构"></a>Spring Cloud Netflix 微服务架构</h2><ul><li>服务注册中心:Eureka</li><li>网关: Zuul</li><li>声明式Rest调用接口:Feign Client</li><li>负载均衡:Ribbon</li><li>监控,熔断组件:Hystrix与Hystrix Dashboard</li></ul><h2 id="Spring-cloud-Config-配置服务"><a href="#Spring-cloud-Config-配置服务" class="headerlink" title="Spring cloud Config 配置服务"></a>Spring cloud Config 配置服务</h2><ul><li>配置:文件夹,git,svn,db</li><li>配置服务器</li><li>服务 -&gt; 配置服务器 -&gt; 配置</li><li>配置加密</li></ul><h2 id="Spring-cloud-Zuul-网关服务"><a href="#Spring-cloud-Zuul-网关服务" class="headerlink" title="Spring cloud Zuul 网关服务"></a>Spring cloud Zuul 网关服务</h2><ol><li>zuul服务的生命周期<br><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/spring-cloud/zuul%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.PNG" alt="image"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Pre filters:在请求被路由之前调用</span><br><span class="line">Routing filters:路由请求的作用</span><br><span class="line">Post filters:路由到微服务以后执行</span><br></pre></td></tr></table></figure></li></ol><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><h2 id="1-Cannot-execute-request-on-any-known-server"><a href="#1-Cannot-execute-request-on-any-known-server" class="headerlink" title="1. Cannot execute request on any known server"></a>1. Cannot execute request on any known server</h2><ul><li>原因:未到注册到服务中心</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">“eureka.client.service-url.”指定服务注册中心地址，类型为 HashMap，并设置有一组默认值，默认的Key为 defaultZone；默认的Value为http://localhost:8761/eureka ，如果服务注册中心为高可用集群时，多个注册中心地址以逗号分隔</span><br><span class="line">eureka.client.service-url.defaultZone</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果服务注册中心加入了安全验证，这里配置的地址格式为： http://&lt;username&gt;:&lt;password&gt;@localhost:8761/eureka 其中 &lt;username&gt; 为安全校验的用户名；&lt;password&gt; 为该用户的密码</span><br></pre></td></tr></table></figure><h2 id="2-Eureka-Client-启动后自动停止"><a href="#2-Eureka-Client-启动后自动停止" class="headerlink" title="2. Eureka-Client 启动后自动停止"></a>2. Eureka-Client 启动后自动停止</h2><p>在pom文件中添加如下内容即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- web应用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-自定义的统一配置信息无法刷新"><a href="#3-自定义的统一配置信息无法刷新" class="headerlink" title="3. 自定义的统一配置信息无法刷新"></a>3. 自定义的统一配置信息无法刷新</h2><ul><li>要在使用自定义统一配置的类的头部加入<code>@RefreshScope</code></li></ul><h2 id="4-Eureka2-x-配置连接密码"><a href="#4-Eureka2-x-配置连接密码" class="headerlink" title="4. Eureka2.x 配置连接密码"></a>4. Eureka2.x 配置连接密码</h2><ul><li><code>https://www.jianshu.com/p/a40219751264</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java的23种设计模式</title>
      <link href="/posts/5e103278/"/>
      <url>/posts/5e103278/</url>
      
        <content type="html"><![CDATA[<h1 id="设计模式的源码地址"><a href="#设计模式的源码地址" class="headerlink" title="设计模式的源码地址"></a>设计模式的源码地址</h1><p><a href="https://github.com/chcGolang/java_design_coding" target="_blank" rel="noopener">设计模式Github源码</a></p><h1 id="工厂方法模式"><a href="#工厂方法模式" class="headerlink" title="工厂方法模式"></a>工厂方法模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:定义一个创建对象的接口,但让实现这个接口的类来决定实例化哪个类,工厂方法让类的实例化推迟到子类中进行</li><li>类型:创建型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>创建对象需要大量重复的代码</li><li>客户端(应用层)不依赖于产品类实例如何被创建,实现等细节</li><li>一个类通过其子类来指定创建哪个对象</li></ul><p><strong>3. 优点</strong></p><ul><li>用户只需要关心所需产品对应的工厂,无须关心创建细节</li><li>加入新产品符合开闭原则,提高可扩展性</li></ul><p><strong>4. 缺点</strong></p><ul><li>类的个数容易过多,增加复杂度</li><li>增加了系统的抽象性和理解难度</li></ul><h1 id="抽象工厂"><a href="#抽象工厂" class="headerlink" title="抽象工厂"></a>抽象工厂</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:抽象工厂模式提供创建一系列相关或相互依赖对象的接口</li><li>无须指定他们具体的类</li><li>类型:创建型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>客户端(应用层)不依赖于产品类实例如何被创建,实现等细节</li><li>强调一系列相关的产品对象(属于同一产品族)一起使用创建对象需要大量重复的代码</li><li>提供一个产品类的库,所有的产品以同样的接口出现,从而使客户端不依赖于具体实现</li></ul><p><strong>3. 优点</strong></p><ul><li>具体产品在应用辰代码隔离,无须关心创建细节</li><li>将一个系列的产品族统一到一起创建</li></ul><p><strong>4. 缺点</strong></p><ul><li>规定了所有可能被创建的产品集合,产品族中扩展新的产品困难,需要修改抽象工厂的接口</li><li>增加了系统的抽象性和理解难度</li></ul><h1 id="建造者模式"><a href="#建造者模式" class="headerlink" title="建造者模式"></a>建造者模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:将一个复杂对象的构建与它的表示分类,使得同样的构建过程可以创建不同的表示</li><li>用户只需指定需要建造的类型就可以得到它们,建造过程及细节不需要知道</li><li>类型:创建型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>如果一个对象有非常复杂的内部结构(很多属性)</li><li>想把复杂对象的创建和使用分离</li></ul><p><strong>3. 优点</strong></p><ul><li>封装性好,创建和使用分离</li><li>扩展性好,建造类之间独立,一定程度上解耦</li></ul><p><strong>4. 缺点</strong></p><ul><li>产生多余的Builder对象</li><li>产品内部发生变化,建造者都要修改,成本较大</li></ul><h1 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:保证一个类仅有一个实例,并提供一个全局访问点</li><li>类型:创建型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>想确保任何情况下都绝对只有一个实例</li></ul><p><strong>3. 优点</strong></p><ul><li>在内存里只有一个实例,减少了内存开销</li><li>可以避免对资源的多重占用</li><li>设置全局访问点,严格控制访问</li></ul><p><strong>4. 缺点</strong></p><ul><li>没有接口,扩展困难</li></ul><p><strong>5. 重点</strong></p><ul><li>私有构造器</li><li>线程安全</li><li>延迟加载 </li><li>序列化和反序列化安全</li><li>反射</li></ul><h1 id="原型模式"><a href="#原型模式" class="headerlink" title="原型模式"></a>原型模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:指原型实例指定创建对象的种类,并且通过拷贝这些原型创建新对象</li><li>不需要知道任何创建的细节,不调用构造函数\</li><li>类型:创建型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>类初始化消耗较多资源</li><li>new产生的一个对象需要非常繁琐的过程(数据准备,访问权限等)</li><li>构造函数比较复杂</li><li>循环体中产生大量的对象</li></ul><p><strong>3. 优点</strong></p><ul><li>原型模式性能比直接new一个对象性能高</li><li>简化创建过程</li></ul><p><strong>4. 缺点</strong></p><ul><li>必须配备克隆方法</li><li>对克隆复杂对象或对克隆出的对象进行复杂改造时,容易引入风险</li></ul><p><strong>5. 扩展</strong></p><ul><li>深克隆</li><li>浅克隆</li></ul><h1 id="外观模式"><a href="#外观模式" class="headerlink" title="外观模式"></a>外观模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:又叫门面模式,提供一个统一的接口,用来访问子系统中的一群接口</li><li>外观模式定义了一个高层接口,让子系统更容易使用</li><li>类型:结构型</li></ul><p><strong>2. 使用场景</strong></p><ul><li>子系统越来越复杂,增加外观模式提供简单调用接口</li><li>构建多层系统结构,利用外观对象作为每层的入口,简化层间调用</li></ul><p><strong>3. 优点</strong></p><ul><li>简化了调用过程,无需了解深入子系统,防止带来风险</li><li>减少系统依赖,松散耦合</li><li>更好的划分层次</li><li>符合迪米特法则,即最少知道原则</li></ul><p><strong>4. 缺点</strong></p><ul><li>增加子系统,扩展子系统行为容易引入风险</li><li>不符合开闭原则</li></ul><h1 id="装饰者模式"><a href="#装饰者模式" class="headerlink" title="装饰者模式"></a>装饰者模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:在不改变原有对象的基础之上,将功能附加到对象上</li><li>提供了不继承更有弹性的替代方案(扩展原有对象功能)</li><li>类型:结构型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>扩展一个类的功能或给一个类添加附加职责</li><li>动态的给一个对象添加功能,这些功能可以再动态的撤销</li></ul><p><strong>3. 优点</strong></p><ul><li>继承的有力补充,比继承灵活,不改变原有对象的情况下给一个对象扩展功能</li><li>通过使用不同装饰类以及这些装饰类的排列组合,可以实现不同效果</li><li>符合开闭原则</li></ul><p><strong>4. 缺点</strong></p><ul><li>会出现更多的代码,更多的类,增加程序复杂性</li><li>动态装饰时,多层装饰时会更复杂</li></ul><h1 id="适配器模式"><a href="#适配器模式" class="headerlink" title="适配器模式"></a>适配器模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:将一个类的接口转换成客户期望的另一个接口</li><li>使原本接口不兼容的类可以一起工作</li><li>类型:结构型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>已经存在的类,它的方法和需求不匹配时(方法结构相同或类似)</li><li>不是软件设计阶段考虑的设计模式,是随着软件维护,由于不同产品,不同厂家造成功能类似而接口不相同情况下的解决方案</li></ul><p><strong>3. 优点</strong></p><ul><li>能提高类的透明性和复用,现有的类复用但不需要改变</li><li>目标类和适配类解耦,提高程序扩展性</li><li>符合开闭原则</li></ul><p><strong>4. 缺点</strong></p><ul><li>适配器编写过程需要全民考虑,可能会增加系统的复杂性</li><li>增加系统代码可读的难度</li></ul><p><strong>5. 扩展</strong></p><ul><li>对象适配器</li><li>类适配器</li></ul><h1 id="享元模式"><a href="#享元模式" class="headerlink" title="享元模式"></a>享元模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:提供了减少对象数量从而改善应用所需的对象结构的方式</li><li>运用共享技术有效地支持大量细粒度的对象</li><li>类型:结构型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>常常用于系统底层的开发,以便解决系统的性能问题</li><li>系统有大量相似对象,需要缓冲池的场景</li></ul><p><strong>3. 优点</strong></p><ul><li>减少对象的创建,降低内存中对象的数量,降低系统的内存,提高效率</li><li>减少内存之外的其他资源占有</li></ul><p><strong>4. 缺点</strong></p><ul><li>关注内/外部状态,关注线程安全问题</li><li>是系统,程序的逻辑复杂化</li></ul><p><strong>5. 扩展</strong></p><ul><li>内部状态</li><li>外部状态 </li></ul><h1 id="组合模式"><a href="#组合模式" class="headerlink" title="组合模式"></a>组合模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:将对象组合成树型结构以表示”部分-整体”的层次结构</li><li>组合模式使客户端对单个对象和组合对象保持一致的方式处理</li><li>类型:结构型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>希望客户端可以忽略组合对象和单个对象的差异时</li><li>处理一个树形结构时</li></ul><p><strong>3. 优点</strong></p><ul><li>清除地定义层次的复杂对象,表示对象的全部或部分层次</li><li>让客户端忽略了层次的差异,方便对整个层次结构进行控制</li><li>简化客户端代码</li><li>符合开闭原则</li></ul><p><strong>4. 缺点</strong></p><ul><li>限制类型时会较为复杂</li><li>是设计变得更加抽象</li></ul><h1 id="桥接模式"><a href="#桥接模式" class="headerlink" title="桥接模式"></a>桥接模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:将抽象部分与它的具体实现部分分离,使它们都可以独立地变化</li><li>通过组合的方式建立两个类之间联系,而不是继承</li><li>类型:结构型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>抽象和具体实现之间增加更多的灵活性</li><li>一个类存在两个(或多个)独立变化的维度,且这两个(或多个)</li><li>不希望使用继承,或因为多层继承导致系统类的个数剧增</li></ul><p><strong>3. 优点</strong></p><ul><li>分离抽象部分及具体实现部分</li><li>提高了系统的可扩展性</li><li>符合开闭原则</li><li>符合合成复用原则</li></ul><p><strong>4. 缺点</strong></p><ul><li>增加了系统的理解与设计难度</li><li>需要正确地识别出系统中两个独立变化的维度</li></ul><h1 id="模板方法"><a href="#模板方法" class="headerlink" title="模板方法"></a>模板方法</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:定义了一个算法的骨架,并允许子类为一个或多个步骤提供实现</li><li>模板方法使子类可以在不改变算法结构的情况下,重新定义算法的某些步骤</li><li>类型:行为型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>一次性实现一个算法的不变的部分,并将可变的行为留给子类来实现</li><li>各子类中公共的行为被提取出来并集中到一个公共父类中,从而避免代码重复</li></ul><p><strong>3. 优点</strong></p><ul><li>提高复用性</li><li>提高扩展性</li><li>符合开闭原则</li></ul><p><strong>4. 缺点</strong></p><ul><li>类数目增加</li><li>增加了系统实现的复杂度</li><li>继承关系自身缺点,如果父类添加新的抽象方法,所有子类都要改一遍</li></ul><h1 id="迭代器模式"><a href="#迭代器模式" class="headerlink" title="迭代器模式"></a>迭代器模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:提供一种方法,顺序访问一个集合对象中的各个元素,而又不暴露该对象的内部表示</li><li>类型:行为型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>访问一个集合对象的内容而无暴露它的内部表示</li><li>为遍历不同的集合结构提供一个统一的接口</li></ul><p><strong>3. 优点</strong></p><ul><li>分离了集合对象的遍历行为</li></ul><p><strong>4. 缺点</strong></p><ul><li>类的个数成对增加</li></ul><h1 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:定义了算法家族,分别封装起来,让它们之间可以相互替换,此模式让算法的变化不会影响到使用算法的用户</li><li>类型: 行为型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>系统有很多类,而他们的区别仅仅在于他们的行为不同</li><li>一个系统需要动态地在几种算法中选择一种</li></ul><p><strong>3. 优点</strong></p><ul><li>开闭原则</li><li>避免使用多重条件转移语句</li><li>提高算法的保密性和安全性</li></ul><p><strong>4. 缺点</strong></p><ul><li>客户端必须知道所有的策略类,并自行决定使用哪个策略类</li><li>产生很多策略类</li></ul><h1 id="解释器模式"><a href="#解释器模式" class="headerlink" title="解释器模式"></a>解释器模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:给定义一个语言,定义它的文法的一种表示,并定义一个解释器,这解释器使用该表示来解释语言中的句子</li><li>为了解释一种语言,而为语言创建的解释器</li><li>类型: 行为型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>某个特定类型问题发生频率足够高</li></ul><p><strong>2. 优点</strong></p><ul><li>语法由很多类表示,容易改变及扩展此语言</li></ul><p><strong>3. 缺点</strong></p><ul><li>当语法规则数目太多时,增加了系统复杂度</li></ul><h1 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:定义了对象之间的一对多依赖,让多个观察者对象同时监听某一个主题对象,当主题对象发送变化时,它的所有依赖者(观察者)都会收到通知并更新</li><li>类型:行为型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>关联行为场景,建立一套触发机制</li></ul><p><strong>3. 优点</strong></p><ul><li>观察者和被观察者之间建立一个抽象的耦合</li><li>观察者模式支持广播通信</li></ul><p><strong>4. 缺点</strong></p><ul><li>观察者之间有过多的细节依赖,提高时间消化及程序复杂度</li><li>使用要得当,要避免循环调用</li></ul><h1 id="备忘录模式"><a href="#备忘录模式" class="headerlink" title="备忘录模式"></a>备忘录模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:保存一个对象的某个状态,以便在适当的时候恢复对象</li><li>后悔药</li><li>类型: 行为型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>保存及恢复数据相关业务场景</li><li>后悔的时候,即想恢复到之前的状态</li></ul><p><strong>3. 优点</strong></p><ul><li>为用户提供一种可恢复机制</li><li>存档信息的封装</li></ul><p><strong>4. 缺点</strong></p><ul><li>资源占有</li></ul><h1 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义:将请求封装成对象,以便使用不同的请求</li><li>命令模式解决了应用程序中对象的职责以及它们之间的通讯方式</li><li>类型:行为型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>请求调用者和请求接收者需要解耦,使得调用者和接收者不直接交互</li><li>需要抽象出等待执行的行为</li></ul><p><strong>3. 优点</strong></p><ul><li>降低耦合</li><li>容易扩展新命令或者一组命令</li></ul><p><strong>4. 缺点</strong></p><ul><li>命令的无限扩展会增加类的数量 提高系统实现复杂度</li></ul><h1 id="中介者模式"><a href="#中介者模式" class="headerlink" title="中介者模式"></a>中介者模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>定义一个封装一组对象如何交互的对象</li><li>通过使对象明确地相互引用来促进松散耦合,并允许独立地改变它们的交互</li><li>类型:行为型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>系统中对象之间存在复杂的音乐关系,产生的相互依赖关系结构混乱且难以理解</li><li>交互的公共行为,如果需要改变行为则可以增加新的中介类</li></ul><p><strong>3. 优点</strong></p><ul><li>将一对多转化成一对一,降低程序复杂度</li><li>类之间解耦</li></ul><p><strong>4. 缺点</strong></p><ul><li>中介者过多,导致系统复杂</li></ul><h1 id="责任链模式"><a href="#责任链模式" class="headerlink" title="责任链模式"></a>责任链模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>为请求创建一个接收此次请求对象的链</li><li>类型:行为型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>一个请求的处理需要多个对象当中的一个或几个协作处理</li></ul><p><strong>3. 优点</strong></p><ul><li>请求的发送者和接收者(请求的处理)解耦</li><li>责任链可以动态组合</li></ul><p><strong>4. 缺点</strong></p><ul><li>责任链太长或者处理时间过长,影响性能</li><li>责任链有可能过多</li></ul><h1 id="访问者模式"><a href="#访问者模式" class="headerlink" title="访问者模式"></a>访问者模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>封装作用于某数据结构(如:list/set/map等)中的各元素的操作</li><li>可以在不改变各元素的类的前提下,定义作用于这些元素的操作</li><li>类型:行为型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>一个数据结构(如:list/set/map等)包含很多类型对象</li><li>数据结构与数据操作分离</li></ul><p><strong>3. 优点</strong></p><ul><li>增加新的操作很容易,即增加一个新的访问者</li></ul><p><strong>4. 缺点</strong></p><ul><li>增加新的数据结构困难</li><li>具体元素变更比较麻烦</li></ul><h1 id="状态模式"><a href="#状态模式" class="headerlink" title="状态模式"></a>状态模式</h1><p><strong>1. 定义与类型</strong></p><ul><li>运行一个对象在其内部状态改变时,改变它的行为</li><li>类型:行为型</li></ul><p><strong>2. 适用场景</strong></p><ul><li>一个对象存在多个状态(不同状态下行为不同),且状态可相互转换</li></ul><p><strong>3. 优点</strong></p><ul><li>将不同状态隔离</li><li>把各种状态的转换逻辑,分布到State的子类中,减少相互间依赖</li><li>增加新的状态非常简单</li></ul><p><strong>4. 缺点</strong></p><ul><li>状态多的业务场景导致类数目增加,系统变复杂</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM性能监控与调优</title>
      <link href="/posts/31cced81/"/>
      <url>/posts/31cced81/</url>
      
        <content type="html"><![CDATA[<h1 id="一-JDK命令行工具监控"><a href="#一-JDK命令行工具监控" class="headerlink" title="一. JDK命令行工具监控"></a>一. JDK命令行工具监控</h1><h2 id="0-命令文档地址"><a href="#0-命令文档地址" class="headerlink" title="0. 命令文档地址"></a>0. 命令文档地址</h2><p><a href="https://docs.oracle.com/javase/8/docs/technotes/tools/unix/index.html" target="_blank" rel="noopener">https://docs.oracle.com/javase/8/docs/technotes/tools/unix/index.html</a></p><h2 id="1-XX参数分类"><a href="#1-XX参数分类" class="headerlink" title="1. XX参数分类"></a>1. XX参数分类</h2><ul><li>Boolean类型</li></ul><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/java%2F1.png" width="500" hegiht="313" align="center"><ul><li>非Boolean类型</li></ul><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/java%2F2.png" width="500" hegiht="313" align="center"><ul><li>-Xmx -Xms(最大内存,最小内存)<ol><li>-Xms等价于-XX.InitialHeapSize</li><li>-Xmx等价于-XX:MaxHeapSize</li></ol></li></ul><h2 id="2-查看JVM运行时参数"><a href="#2-查看JVM运行时参数" class="headerlink" title="2. 查看JVM运行时参数"></a>2. 查看JVM运行时参数</h2><ul><li>-XX:+PrintFlagslnitial 查看初始值情况</li><li>-XX:+PrintFlagsFinal   查看最终值</li><li>-XX:+UnlockExperimentalVMOptions 解锁实验参数</li><li>-XX:+UnlockDiagnosticVMOptions 解锁诊断参数</li><li>-xx:+PrintCommandLineFlags 打印命令行参数</li></ul><h3 id="2-1-PrintFlagsFinal"><a href="#2-1-PrintFlagsFinal" class="headerlink" title="2.1 PrintFlagsFinal"></a>2.1 PrintFlagsFinal</h3><ul><li>=表示默认值, :=被用户或者JVM修改后的值<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -XX:+PrintFlagsFinal -version</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-jps"><a href="#2-2-jps" class="headerlink" title="2.2 jps"></a>2.2 jps</h3><p><a href="https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jps.html" target="_blank" rel="noopener">https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jps.html</a></p><ul><li><p>jps用法</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostid 命令对应的服务器ip，默认不加参数，代码查看本机</span></span><br><span class="line">jps [参数] [&lt;hostid&gt;]</span><br></pre></td></tr></table></figure></li><li><p>jps参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-q：只输出进程 ID</span><br><span class="line">-m：输出传入 main 方法的参数</span><br><span class="line">-l：输出完全的包名，应用主类名，jar的完全路径名</span><br><span class="line">-v：输出jvm参数</span><br><span class="line">-V：输出通过flag文件传递到JVM中的参数</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-3-jinfo"><a href="#2-3-jinfo" class="headerlink" title="2.3 jinfo"></a>2.3 jinfo</h3><ol><li><p>功能</p><ul><li>查看JVM参数(常用)</li><li>查看系统参数，即可通过System.getProperty(key)获得的参数(常用)</li><li>修改JVM参数(少用)</li></ul></li><li><p>使用命令</p><ul><li><p>分析pid</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jinfo [option] &#123;pid&#125;</span><br><span class="line"><span class="comment"># pid: 可通过jps或者ps获得</span></span><br></pre></td></tr></table></figure></li><li><p>分析core dump文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jinfo [option] &#123;executable&#125; &#123;core&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># executable: The Java executable from which the core dump was produced.</span></span><br><span class="line"><span class="comment"># core: The core file for which the configuration information is to be printed.</span></span><br></pre></td></tr></table></figure></li><li><p>分析远程进程</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jinfo [option] [ server-id ] &#123;remote-hostname-or-IP&#125;</span><br><span class="line"><span class="comment"># server-id: An optional unique ID to use when multiple debug servers are running on the same remote host.</span></span><br><span class="line"><span class="comment"># remote-hostname-or-IP: 远程服务的IP或者hostname</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>option可选值</p><ul><li><p>no-option:即，没有任何option。会打印所有的JVM参数和系统参数。等同于-flags + -sysprops</p></li><li><p>-flag {name} : 打印指定的JVM参数值。</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jinfo -flag SurvivorRatio 55394</span><br><span class="line"><span class="comment"># 结果为: -XX:SurvivorRatio=8</span></span><br></pre></td></tr></table></figure></li><li><p>-flag [+|-]name : enables or disables指定的VM参数，也就是使指定的VM参数生效或者失效</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jinfo -flag -PrintGCDateStamps 12905</span><br><span class="line"><span class="comment"># 结果为：使PrintGCDateStamps失效</span></span><br></pre></td></tr></table></figure></li><li><p>-flag name=value : 为指定的VM参数(name)设置指定的值(value)</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jinfo -flag MaxHeapFreeRatio=80 12905</span><br><span class="line"><span class="comment"># 再通过jinfo -flag MaxHeapFreeRatio 12905查看其值</span></span><br><span class="line"><span class="comment"># 结果为: -XX:MaxHeapFreeRatio=80</span></span><br></pre></td></tr></table></figure></li><li><p>-flags : 打印所有的VM参数</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Non-default VM flags: -XX:CICompilerCount=2 -XX:CMSFullGCsBeforeCompaction=0 -XX:CMSInitiatingOccupancyFraction=80 -XX:+DisableExplicitGC -XX:ErrorFile=null -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=null -XX:InitialCodeCacheSize=134217728 -XX:InitialHeapSize=1073741824 -XX:MaxHeapSize=1073741824 -XX:MaxMetaspaceSize=268435456 -XX:MaxNewSize=268435456 -XX:MinHeapDeltaBytes=196608 -XX:NewSize=268435456 -XX:OldPLABSize=16 -XX:OldSize=805306368 -XX:+PrintGC -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintHeapAtGC -XX:+PrintTenuringDistribution -XX:ReservedCodeCacheSize=134217728 -XX:SurvivorRatio=8 -XX:+UseCMSCompactAtFullCollection -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseFastUnorderedTimeStamps -XX:+UseParNewGC</span><br><span class="line">Command line:  -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8 -Djava.io.tmpdir=/opt/micheal/tmp -Djava.net.preferIPv6Addresses=false -DLog4jContextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector -Xmx1g -Xms1g -Xmn256m -XX:SurvivorRatio=8 -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError -XX:ReservedCodeCacheSize=128m -XX:InitialCodeCacheSize=128m -XX:+DisableExplicitGC -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintTenuringDistribution -XX:+UseConcMarkSweepGC -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:CMSFullGCsBeforeCompaction=0 -XX:+UseCMSCompactAtFullCollection -XX:CMSInitiatingOccupancyFraction=80 -Xloggc:/opt/logs/mobile/xm.test.read/xm.test.read.gc.log -XX:ErrorFile=/opt/logs/mobile/xm.test.read/xm.test.read.vmerr.log -XX:HeapDumpPath=/opt/logs/mobile/xm.test.read/xm.test.read.heaperr.log -Djetty.appkey=xm.test.read -Djetty.context=/ -Djetty.logs=/opt/logs/mobile/xm.test.read -Djetty.webroot=/opt/micheal/mobile/xm.test.read/webroot</span><br></pre></td></tr></table></figure></li><li><p>-sysprops : 打印系统参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jinfo -sysprops 12905</span><br></pre></td></tr></table></figure></li><li><p>-h : 帮助信息</p><ul><li>查看最大内存<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1292为进程Id</span></span><br><span class="line">jinfo -flag MaxHeapSize 1292</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ol><ul><li>查看垃圾回收器  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 1292为进程Id</span><br><span class="line">jinfo -flag UseG1GC 1292</span><br><span class="line">jinfo -flag UseConcMarkSweepGC 1292</span><br><span class="line">jinfo -flag UseParallelGC 1292</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-4-jstat查看JVM统计信息"><a href="#2-4-jstat查看JVM统计信息" class="headerlink" title="2.4 jstat查看JVM统计信息"></a>2.4 jstat查看JVM统计信息</h3><ul><li><p>用法</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">jstat -&lt;option&gt; [-t] [-h&lt;lines&gt;] &lt;vmid&gt; [&lt;interval&gt; [&lt;count&gt;]]</span><br><span class="line"><span class="comment"># option： 参数选项</span></span><br><span class="line"><span class="comment"># -t： 可以在打印的列加上Timestamp列，用于显示系统运行的时间</span></span><br><span class="line"><span class="comment"># -h： 可以在周期性数据数据的时候，可以在指定输出多少行以后输出一次表头</span></span><br><span class="line"><span class="comment"># vmid： Virtual Machine ID（ 进程的 pid）</span></span><br><span class="line"><span class="comment"># interval： 执行每次的间隔时间，单位为毫秒</span></span><br><span class="line"><span class="comment"># count： 用于指定输出多少次记录，缺省则会一直打印</span></span><br></pre></td></tr></table></figure></li><li><p>option参数</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-class</td><td>显示ClassLoad的相关信息；</td></tr><tr><td>-compiler</td><td>显示JIT编译的相关信息；</td></tr><tr><td>-gc</td><td>显示和gc相关的堆信息；</td></tr><tr><td>-gccapacity</td><td>显示各个代的容量以及使用情况；</td></tr><tr><td>-gcmetacapacity</td><td>显示metaspace的大小</td></tr><tr><td>-gcnew</td><td>显示新生代信息；</td></tr><tr><td>-gcnewcapacity</td><td>显示新生代大小和使用情况；</td></tr><tr><td>-gcold</td><td>显示老年代和永久代的信息；</td></tr><tr><td>-gcoldcapacity</td><td>显示老年代的大小；</td></tr><tr><td>-gcutil</td><td>显示垃圾收集信息；</td></tr><tr><td>-gccause</td><td>显示垃圾回收的相关信息（通-gcutil）,同时显示最后一次或当前正在发生的垃圾回收的诱因；</td></tr><tr><td>-printcompilation</td><td>输出JIT编译的方法信息；</td></tr></tbody></table></li></ul><ul><li><p>类加载 -class</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstat -class &lt;pid&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>结果字段</th><th>说明</th></tr></thead><tbody><tr><td>Loaded</td><td>已经装载的类的数量</td></tr><tr><td>Bytes</td><td>装载类所占用的字节数</td></tr><tr><td>Unloaded</td><td>已经卸载类的数量</td></tr><tr><td>Bytes</td><td>卸载类的字节数</td></tr><tr><td>Time</td><td>装载和卸载类所花费的时间</td></tr><tr><td>*  -compiler 显示VM实时编译(JIT)的数量信息</td><td></td></tr><tr><td><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstat -compiler &lt;pid&gt;</span><br></pre></td></tr></table></figure></td><td></td></tr></tbody></table><table><thead><tr><th>结果字段</th><th>说明</th></tr></thead><tbody><tr><td>Compiled</td><td>编译任务执行数量</td></tr><tr><td>Failed</td><td>编译任务执行失败数量</td></tr><tr><td>Invalid</td><td>编译任务执行失效数量</td></tr><tr><td>Time</td><td>编译任务消耗时间</td></tr><tr><td>FailedType</td><td>最后一个编译失败任务的类型</td></tr><tr><td>FailedMethod</td><td>最后一个编译失败任务所在的类及方法</td></tr><tr><td>* -gc 垃圾收集</td><td></td></tr><tr><td><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># -gc,-gcutil,-gccause,-gcnew,-gcold</span><br><span class="line">jstat -gc &lt;pid&gt;</span><br></pre></td></tr></table></figure></td><td></td></tr></tbody></table><table><thead><tr><th>结果字段</th><th>说明</th></tr></thead><tbody><tr><td>S0C</td><td>年轻代中第一个survivor（幸存区）的容量 （字节）</td></tr><tr><td>S1C</td><td>年轻代中第二个survivor（幸存区）的容量 (字节)</td></tr><tr><td>S0U</td><td>年轻代中第一个survivor（幸存区）目前已使用空间 (字节)</td></tr><tr><td>S1U</td><td>年轻代中第二个survivor（幸存区）目前已使用空间 (字节)</td></tr><tr><td>EC</td><td>年轻代中Eden（伊甸园）的容量 (字节)</td></tr><tr><td>EU</td><td>年轻代中Eden（伊甸园）目前已使用空间 (字节)</td></tr><tr><td>OC</td><td>Old代的容量 (字节)</td></tr><tr><td>OU</td><td>Old代目前已使用空间 (字节)</td></tr><tr><td>MC</td><td>metaspace(元空间)的容量 (字节)</td></tr><tr><td>MU</td><td>metaspace(元空间)目前已使用空间 (字节)</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时年轻代中gc次数</td></tr><tr><td>YGCT</td><td>从应用程序启动到采样时年轻代中gc所用时间(s)</td></tr><tr><td>FGC</td><td>从应用程序启动到采样时old代(全gc)gc次数</td></tr><tr><td>FGCT</td><td>从应用程序启动到采样时old代(全gc)gc所用时间(s)</td></tr><tr><td>GCT</td><td>从应用程序启动到采样时gc用的总时间(s)</td></tr><tr><td>CCSC</td><td>压缩类空间总量(字节)</td></tr><tr><td>CCSU</td><td>压缩类空间使用量(字节)</td></tr></tbody></table><ul><li><p>-gccapacity VM内存中三代（young,old,perm）对象的使用和占用大小</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstat -gccapacity &lt;pid&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>结果字段</th><th>说明</th></tr></thead><tbody><tr><td>NGCMN</td><td>年轻代(young)中初始化(最小)的大小(字节)</td></tr><tr><td>NGCMX</td><td>年轻代(young)的最大容量 (字节)</td></tr><tr><td>NGC</td><td>年轻代(young)中当前的容量 (字节)</td></tr><tr><td>S0C</td><td>年轻代中第一个survivor（幸存区）的容量 (字节)</td></tr><tr><td>S1C</td><td>年轻代中第二个survivor（幸存区）的容量 (字节)</td></tr><tr><td>EC</td><td>年轻代中Eden（伊甸园）的容量 (字节)</td></tr><tr><td>OGCMN</td><td>old代中初始化(最小)的大小 (字节)</td></tr><tr><td>OGCMX</td><td>old代的最大容量(字节)</td></tr><tr><td>OGC</td><td>old代当前新生成的容量 (字节)</td></tr><tr><td>OC</td><td>Old代的容量 (字节)</td></tr><tr><td>MCMN</td><td>metaspace(元空间)中初始化(最小)的大小 (字节)</td></tr><tr><td>MCMX</td><td>metaspace(元空间)的最大容量 (字节)</td></tr><tr><td>MC</td><td>metaspace(元空间)当前新生成的容量 (字节)</td></tr><tr><td>CCSMN</td><td>最小压缩类空间大小</td></tr><tr><td>CCSMX</td><td>最大压缩类空间大小</td></tr><tr><td>CCSC</td><td>当前压缩类空间大小</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时年轻代中gc次数</td></tr><tr><td>FGC</td><td>从应用程序启动到采样时old代(全gc)gc次数</td></tr></tbody></table></li><li><p>-gcmetacapacity metaspace中对象的信息及其占用量。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstat -gcmetacapacity &lt;pid&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>结果字段</th><th>说明</th></tr></thead><tbody><tr><td>MCMN</td><td>最小元数据容量</td></tr><tr><td>MCMX</td><td>最大元数据容量</td></tr><tr><td>MC</td><td>当前元数据空间大小</td></tr><tr><td>CCSMN</td><td>最小压缩类空间大小</td></tr><tr><td>CCSMX</td><td>最大压缩类空间大小</td></tr><tr><td>CCSC</td><td>当前压缩类空间大小</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时年轻代中gc次数</td></tr><tr><td>FGC</td><td>从应用程序启动到采样时old代(全gc)gc次数</td></tr><tr><td>FGCT</td><td>从应用程序启动到采样时old代(全gc)gc所用时间(s)</td></tr><tr><td>GCT</td><td>从应用程序启动到采样时gc用的总时间(s)</td></tr></tbody></table></li><li><p>-gcnew 年轻代对象的信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstat -gcnew &lt;pid&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>结果字段</th><th>说明</th></tr></thead><tbody><tr><td>S0C</td><td>年轻代中第一个survivor（幸存区）的容量 (字节)</td></tr><tr><td>S1C</td><td>年轻代中第二个survivor（幸存区）的容量 (字节)</td></tr><tr><td>S0U</td><td>年轻代中第一个survivor（幸存区）目前已使用空间 (字节)</td></tr><tr><td>S1U</td><td>年轻代中第二个survivor（幸存区）目前已使用空间 (字节)</td></tr><tr><td>TT</td><td>持有次数限制</td></tr><tr><td>MTT</td><td>最大持有次数限制</td></tr><tr><td>DSS</td><td>期望的幸存区大小</td></tr><tr><td>EC</td><td>年轻代中Eden（伊甸园）的容量 (字节)</td></tr><tr><td>EU</td><td>年轻代中Eden（伊甸园）目前已使用空间 (字节)</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时年轻代中gc次数</td></tr><tr><td>YGCT</td><td>从应用程序启动到采样时年轻代中gc所用时间(s)</td></tr></tbody></table></li><li><p>-gcnewcapacity 年轻代对象的信息及其占用量</p><table><thead><tr><th>结果字段</th><th>说明</th></tr></thead><tbody><tr><td>NGCMN</td><td>年轻代(young)中初始化(最小)的大小(字节)</td></tr><tr><td>NGCMX</td><td>年轻代(young)的最大容量 (字节)</td></tr><tr><td>NGC</td><td>年轻代(young)中当前的容量 (字节)</td></tr><tr><td>S0CMX</td><td>年轻代中第一个survivor（幸存区）的最大容量 (字节)</td></tr><tr><td>S0C</td><td>年轻代中第一个survivor（幸存区）的容量 (字节)</td></tr><tr><td>S1CMX</td><td>年轻代中第二个survivor（幸存区）的最大容量 (字节)</td></tr><tr><td>S1C</td><td>年轻代中第二个survivor（幸存区）的容量 (字节)</td></tr><tr><td>ECMX</td><td>年轻代中Eden（伊甸园）的最大容量 (字节)</td></tr><tr><td>EC</td><td>年轻代中Eden（伊甸园）的容量 (字节)</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时年轻代中gc次数</td></tr><tr><td>FGC</td><td>从应用程序启动到采样时old代(全gc)gc次数</td></tr></tbody></table></li><li><p>-gcold old代对象的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstat -gcold &lt;pid&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>结果字段</th><th>说明</th></tr></thead><tbody><tr><td>MC</td><td>metaspace(元空间)的容量 (字节)</td></tr><tr><td>MU</td><td>metaspace(元空间)目前已使用空间 (字节)</td></tr><tr><td>CCSC</td><td>压缩类空间大小</td></tr><tr><td>CCSU</td><td>压缩类空间使用大小</td></tr><tr><td>OC</td><td>Old代的容量 (字节)</td></tr><tr><td>OU</td><td>Old代目前已使用空间 (字节)</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时年轻代中gc次数</td></tr><tr><td>FGC</td><td>从应用程序启动到采样时old代(全gc)gc次数</td></tr><tr><td>FGCT</td><td>从应用程序启动到采样时old代(全gc)gc所用时间(s)</td></tr><tr><td>GCT</td><td>从应用程序启动到采样时gc用的总时间(s)</td></tr></tbody></table></li><li><p>-gcoldcapacity old代对象的信息及其占用量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstat -gcoldcapacity &lt;pid&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>结果字段</th><th>说明</th></tr></thead><tbody><tr><td>OGCMN</td><td>old代中初始化(最小)的大小 (字节)</td></tr><tr><td>OGCMX</td><td>old代的最大容量(字节)</td></tr><tr><td>OGC</td><td>old代当前新生成的容量 (字节)</td></tr><tr><td>OC</td><td>Old代的容量 (字节)</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时年轻代中gc次数</td></tr><tr><td>FGC</td><td>从应用程序启动到采样时old代(全gc)gc次数</td></tr><tr><td>FGCT</td><td>从应用程序启动到采样时old代(全gc)gc所用时间(s)</td></tr><tr><td>GCT</td><td>从应用程序启动到采样时gc用的总时间(s)</td></tr></tbody></table></li><li><p>-gcutil 统计gc信息</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstat -gcutil &lt;pid&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>结果字段</th><th>说明</th></tr></thead><tbody><tr><td>S0</td><td>年轻代中第一个survivor（幸存区）已使用的占当前容量百分比</td></tr><tr><td>S1</td><td>年轻代中第二个survivor（幸存区）已使用的占当前容量百分比</td></tr><tr><td>E</td><td>年轻代中Eden（伊甸园）已使用的占当前容量百分比</td></tr><tr><td>O</td><td>old代已使用的占当前容量百分比</td></tr><tr><td>M</td><td>元数据的空间使用率</td></tr><tr><td>P</td><td>perm代已使用的占当前容量百分比</td></tr><tr><td>YGC</td><td>从应用程序启动到采样时年轻代中gc次数</td></tr><tr><td>YGCT</td><td>从应用程序启动到采样时年轻代中gc所用时间(s)</td></tr><tr><td>FGC</td><td>从应用程序启动到采样时old代(全gc)gc次数</td></tr><tr><td>FGCT</td><td>从应用程序启动到采样时old代(全gc)gc所用时间(s)</td></tr><tr><td>GCT</td><td>从应用程序启动到采样时gc用的总时间(s)</td></tr></tbody></table></li><li><p>-gccause 显示垃圾回收的相关信息（通-gcutil）,同时显示最后一次或当前正在发生的垃圾回收的诱因。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jstat -gccause &lt;pid&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>结果字段</th><th>说明</th></tr></thead><tbody><tr><td>LGCC</td><td>最后一次GC原因</td></tr><tr><td>GCC</td><td>当前GC原因（No GC 为当前没有执行GC）</td></tr><tr><td>### 2.4 JVM的内存结构</td><td></td></tr></tbody></table></li></ul></li></ul><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/java%2F4.png" width="500" hegiht="313" align="center"><h3 id="2-5-jmap-MAT实战内存溢出"><a href="#2-5-jmap-MAT实战内存溢出" class="headerlink" title="2.5 jmap+MAT实战内存溢出"></a>2.5 jmap+MAT实战内存溢出</h3><ul><li><p>导出内存映像文件</p><ol><li><p>内存溢出自动导出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-XX:+HeapDumpOnOutOfMemoryError</span><br><span class="line">-XX:HeapDumpPath=./</span><br></pre></td></tr></table></figure></li><li><p>使用jmap命令手动导出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jmap -dump:format=b,file=heap.hprof 1292</span><br></pre></td></tr></table></figure></li></ol></li><li><p>MAT分析内存溢出</p><ol><li><p>下载地址</p><p> <a href="http://www.eclipse.org/mat/downloads.php" target="_blank" rel="noopener">http://www.eclipse.org/mat/downloads.php</a></p><p> 启动文件是<code>MemoryAnalyzer.exe</code></p><p> 打开hprof文件</p> <img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/java%2F5.png" width="500" hegiht="313" align="center"> <img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/java%2F6.png" width="500" hegiht="313" align="center"><hr> <img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/java%2F7.png" width="500" hegiht="313" align="center"></li></ol></li></ul><h3 id="2-5-jstack解决死循环和死锁"><a href="#2-5-jstack解决死循环和死锁" class="headerlink" title="2.5 jstack解决死循环和死锁"></a>2.5 jstack解决死循环和死锁</h3><ol><li><p>获取信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">jstack 1292 &gt; 1292.txt</span><br><span class="line"># 找出cpu占用高的PID</span><br><span class="line">top -p 1292 -H</span><br><span class="line"># 获取PID的16进制</span><br><span class="line">printf &quot;%x&quot; 8247</span><br><span class="line"># 在1292.txt文件中搜索查到的进制:2037</span><br><span class="line"># 跳到nid=0x2037行</span><br></pre></td></tr></table></figure></li><li><p>线程状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 1292.txt</span><br><span class="line">java.lang.Thread.State: WAITING (parking)</span><br><span class="line"># NEW           新建</span><br><span class="line"># RUNNABLE      运行中</span><br><span class="line"># WAITING       等待</span><br><span class="line"># BLOCKED       阻塞</span><br><span class="line"># TERMINATED    结束</span><br></pre></td></tr></table></figure></li><li><p>死锁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 拉到文件末尾</span><br><span class="line"># 有deadlock就是程序定位到死锁了</span><br></pre></td></tr></table></figure></li></ol><h1 id="三-java进程监控"><a href="#三-java进程监控" class="headerlink" title="三. java进程监控"></a>三. java进程监控</h1><h2 id="1-基于JVisualVM的可视化监控"><a href="#1-基于JVisualVM的可视化监控" class="headerlink" title="1. 基于JVisualVM的可视化监控"></a>1. 基于JVisualVM的可视化监控</h2><h3 id="1-本地监控"><a href="#1-本地监控" class="headerlink" title="1. 本地监控"></a>1. 本地监控</h3><pre><code>1. JVisualVM程序在jdk的bin目录下jvisualvm.exe2. 设置插件可安装</code></pre><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/java%2F8.png" width="500" hegiht="313" align="center"><img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/java%2F9.png" width="500" hegiht="313" align="center"><h3 id="2-安装插件"><a href="#2-安装插件" class="headerlink" title="2. 安装插件"></a>2. 安装插件</h3><ul><li><p>在下面地址中找出对应版本的<code>Java VisualVM</code>地址</p><p><a href="https://visualvm.github.io/pluginscenters.html" target="_blank" rel="noopener">https://visualvm.github.io/pluginscenters.html</a></p></li></ul><pre><code>* 安装Visual GC和BTrace插件</code></pre><h3 id="3-远程监控"><a href="#3-远程监控" class="headerlink" title="3. 远程监控"></a>3. 远程监控</h3><ul><li><p>ip:192.168.43.115,jmx端口:40124</p></li><li><p>配置hostname</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询</span></span><br><span class="line">hostname -i</span><br><span class="line"><span class="comment"># 加入hostname -i 的ip</span></span><br><span class="line"><span class="comment"># 与127.0.0.1 的一致</span></span><br><span class="line">vi /etc/hosts</span><br><span class="line"></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">192.168.43.115   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启防火墙端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=40124/tcp --permanent</span><br><span class="line">systemctl restart firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>配置授权的账号密码</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拷贝java的jmxremote.access和jmxremote.password到程序目录下</span></span><br><span class="line">cp JAVA_HOME/lib/management/jmxremote.access /home/project/jmxremote.access</span><br><span class="line">cp JAVA_HOME/lib/management/jmxremote.password /home/project/jmxremote.password</span><br><span class="line"><span class="comment"># 在/home/project/jmxremote.access加入账号和权限</span></span><br><span class="line">username readwrite</span><br><span class="line"><span class="comment"># 在/home/project/jmxremote.password加入密码</span></span><br><span class="line">username password</span><br><span class="line"><span class="comment"># 修改文件权限</span></span><br><span class="line">chmod 400 jmxremote.access</span><br><span class="line">chmod 400 jmxremote.password</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>远程jar监控</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=40124 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.access.file=./jmxremote.access -Dcom.sun.management.jmxremote.password.file=./jmxremote.password -Djava.net.preferIPv4Stack=true -Djava.rmi.server.hostname=192.168.43.115 -Dcom.sun.management.jmxremote.rmi.port=40124 -jar foot.jar</span><br></pre></td></tr></table></figure><table><thead><tr><th>配置</th><th>类型</th><th align="center">说明</th></tr></thead><tbody><tr><td>-Dcom.sun.management.jmxremote</td><td>布尔</td><td align="center">远程JMX访问</td></tr><tr><td>-Dcom.sun.management.jmxremote.port</td><td>数值</td><td align="center">远程监控端口</td></tr><tr><td>-Dcom.sun.management.jmxremote.ssl</td><td>布尔</td><td align="center">SSL加密，默认开启</td></tr><tr><td>-Dcom.sun.management.jmxremote.authenticate</td><td>布尔</td><td align="center">用户认证,默认开启</td></tr><tr><td>-Dcom.sun.management.jmxremote.access.file</td><td>字符</td><td align="center">对访问用户的权限授权的文件的路径，默认路径<code>JAVA_HOME/lib/management/jmxremote.access</code></td></tr><tr><td>-Dcom.sun.management.jmxremote. password.file</td><td>字符</td><td align="center">设置访问用户的用户名和密码，默认路径<code>JAVA_HOME/lib/management/jmxremote.password</code></td></tr><tr><td>-Djava.net.preferIPv4Stack</td><td>布尔</td><td align="center">ipv4方式访问,默认关闭</td></tr><tr><td>-Djava.rmi.server.hostname</td><td>string</td><td align="center">服务器ip或者域名</td></tr><tr><td>-Dcom.sun.management.jmxremote.rmi.port</td><td>数值</td><td align="center">rmi端口</td></tr></tbody></table></li><li><p>JVisualVM添加远程监控</p><p><img src="http://qiniu.caihc.site/blog/jvm1.PNG" alt="image"></p><p><img src="http://qiniu.caihc.site/blog/jvm2.PNG" alt="image"></p><p><img src="http://qiniu.caihc.site/blog/jvm3.PNG" alt></p></li></ul><h1 id="四-Nginx"><a href="#四-Nginx" class="headerlink" title="四. Nginx"></a>四. Nginx</h1><h2 id="1-基本命令"><a href="#1-基本命令" class="headerlink" title="1. 基本命令"></a>1. 基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 使用default.conf配置文件，将它放入`/etc/nginx/conf.d` 中</span><br><span class="line"></span><br><span class="line"># 启动命令</span><br><span class="line">nginx -c /etc/nginx/nginx.conf</span><br><span class="line">重启命令</span><br><span class="line">nginx -s reload</span><br><span class="line"># 查看编译信息</span><br><span class="line">nginx -V</span><br><span class="line"># 注意:配置反向代理要关闭selinux,setenforce 0</span><br></pre></td></tr></table></figure><h2 id="2-nginx优化"><a href="#2-nginx优化" class="headerlink" title="2. nginx优化"></a>2. nginx优化</h2><h3 id="1-增加工作线程数和并发数"><a href="#1-增加工作线程数和并发数" class="headerlink" title="1. 增加工作线程数和并发数"></a>1. 增加工作线程数和并发数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># nginx.conf</span><br><span class="line">worker_processes 4; #cpu核心数</span><br><span class="line">events&#123;</span><br><span class="line">   worker_connections 10240; #每个进程打开的最大连接数,包含了nginx与客户端和nignx与upstream之间的连接 </span><br><span class="line">   multi_accept on; #可以一次建立多个连接</span><br><span class="line">   use epoll;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-配置Server的长连接"><a href="#2-配置Server的长连接" class="headerlink" title="2. 配置Server的长连接"></a>2. 配置Server的长连接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># default.conf</span><br><span class="line">keepalive 300; #设置长连接数的数量</span><br></pre></td></tr></table></figure><h3 id="3-配置数据压缩"><a href="#3-配置数据压缩" class="headerlink" title="3. 配置数据压缩"></a>3. 配置数据压缩</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># nginx.conf</span><br><span class="line">gzip on;</span><br><span class="line">gzip_min_length 1k;</span><br><span class="line">gzip_http_version 1.0;</span><br><span class="line">gzip_disable &quot;MSIE [1-6].(?!.*SV1)&quot;;</span><br><span class="line">gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;</span><br><span class="line">gzip_vary on</span><br></pre></td></tr></table></figure><h3 id="4-操作系统优化"><a href="#4-操作系统优化" class="headerlink" title="4. 操作系统优化"></a>4. 操作系统优化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># /etc/sysctl.conf</span><br><span class="line">sysctl -w net.ipv4.tcp_syncookies = 1 # 防止一个套接字在有过多试图连接到达时引起过载</span><br><span class="line">sysctl -w net.core.somaxconn = 1024 #默认128,连接队列</span><br><span class="line">sysctl -w net.ipv4.tcp_fin_timeout = 10 #timewait的超时时间</span><br><span class="line">sysctl -w net.ipv4.tcp_tw_reuse = 1 #os直接使用timewait的连接</span><br><span class="line">sysctl -w net.ipv4.tcp_tw_recycle = 0 #回收禁用</span><br></pre></td></tr></table></figure><h2 id="3-nginx配置文件"><a href="#3-nginx配置文件" class="headerlink" title="3. nginx配置文件"></a>3. nginx配置文件</h2><ul><li><p>nginx.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">user  root;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">client_max_body_size 5m; </span><br><span class="line"></span><br><span class="line">underscores_in_headers on; #自定义 Head 必须定义 </span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_min_length 1k;</span><br><span class="line">    gzip_http_version 1.0;</span><br><span class="line">    gzip_disable &quot;MSIE [1-6].(?!.*SV1)&quot;;</span><br><span class="line">    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;</span><br><span class="line">gzip_vary on</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>default.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">upstream teamfortWeChat &#123;  #代理配置</span><br><span class="line">server 127.0.0.1:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream spring-boot-admin &#123; </span><br><span class="line">server 127.0.0.1:8012;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream spring-boot-admin-test &#123; #灰度ip发布</span><br><span class="line">server 127.0.0.1:8011;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#server &#123;#https配置</span><br><span class="line"> #   listen 443;</span><br><span class="line"> #   server_name 127.0.0.1;</span><br><span class="line"> #   ssl on;</span><br><span class="line"> #   root html;</span><br><span class="line"> #   index index.html index.htm;</span><br><span class="line"> #   ssl_certificate   cert/214245831800280.pem;</span><br><span class="line"> #   ssl_certificate_key  cert/214245831800280.key;</span><br><span class="line"> #   ssl_session_timeout 5m;</span><br><span class="line"> #   ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line"> #   ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line"> #   ssl_prefer_server_ciphers on;</span><br><span class="line">#</span><br><span class="line">#location / &#123;</span><br><span class="line"># root   html;</span><br><span class="line">#         index  index.html index.htm;</span><br><span class="line">#    &#125;</span><br><span class="line">#location /teamfortWeChat/ &#123;</span><br><span class="line">#proxy_pass   http://teamfortWeChat;</span><br><span class="line">#proxy_redirect off;</span><br><span class="line">#proxy_set_header Host $host;</span><br><span class="line">#proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">#proxy_connect_timeout 90;</span><br><span class="line">#proxy_send_timeout 90;</span><br><span class="line">#proxy_read_timeout 90;</span><br><span class="line">#&#125;</span><br><span class="line">#</span><br><span class="line">#&#125;</span><br><span class="line"></span><br><span class="line">server &#123;#http配置</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  127.0.0.1;</span><br><span class="line"></span><br><span class="line">    #charset koi8-r;</span><br><span class="line">    #access_log  /var/log/nginx/log/host.access.log  main;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location /spring-boot-admin/ &#123;</span><br><span class="line">if ($remote_addr ~* &quot;116.20.64.169&quot;) &#123;#ip不同进入服务不同一般用于灰度发布</span><br><span class="line">proxy_pass http://spring-boot-admin;</span><br><span class="line">&#125;</span><br><span class="line">proxy_pass http://spring-boot-admin-test;</span><br><span class="line">proxy_redirect off;</span><br><span class="line">proxy_set_header Host $host;</span><br><span class="line">proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">proxy_connect_timeout 90;</span><br><span class="line">proxy_send_timeout 90;</span><br><span class="line">proxy_read_timeout 90;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">   root   html;</span><br><span class="line">         index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    #加载其他配置文件</span><br><span class="line">include /etc/nginx/conf.d/server80/*.conf;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#设置例外静态资源，由nginx来处理静态资源#</span><br><span class="line">    location ~ \.(html|js|css|png|gif|jpg|jpeg|json|exml|fnt|ttf|TTF|woff|ico)$ &#123;  </span><br><span class="line">if ($request_uri ~* /spring-boot-admin/(.*)) &#123;#不需要nginx处理静态资源的项目</span><br><span class="line">proxy_pass http://spring-boot-admin;</span><br><span class="line">&#125;</span><br><span class="line">       root /usr/share/nginx/html; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">location /MP_verify_3YLUBmJdjqIG7yUh.txt &#123;  #微信公众号验证文件配置/usr/share/nginx/html</span><br><span class="line">        root /usr/share/nginx/html; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">location /.well-known/pki-validation/fileauth.txt &#123;  </span><br><span class="line">        root /usr/share/nginx/html; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    #location / &#123;</span><br><span class="line">    #    root   /usr/share/nginx/html;</span><br><span class="line">    #    index  index.html index.htm;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">    #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">    # redirect server error pages to the static page /50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">    #</span><br><span class="line">    #location ~ \.php$ &#123;</span><br><span class="line">    #    proxy_pass   http://127.0.0.1;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">    #</span><br><span class="line">    #location ~ \.php$ &#123;</span><br><span class="line">    #    root           html;</span><br><span class="line">    #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    #    fastcgi_index  index.php;</span><br><span class="line">    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">    #    include        fastcgi_params;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">    # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class="line">    # concurs with nginx&apos;s one</span><br><span class="line">    #</span><br><span class="line">    #location ~ /\.ht &#123;</span><br><span class="line">    #    deny  all;</span><br><span class="line">    #&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="五-JVM的GC调优"><a href="#五-JVM的GC调优" class="headerlink" title="五. JVM的GC调优"></a>五. JVM的GC调优</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动时加入以下命令用于记录内存溢出时的记录</span></span><br><span class="line">-XX:+DisableExplicitGC  <span class="comment"># 使用nio或者Netty的框架不能使用</span></span><br><span class="line">-XX:+HeapDumpOnOutOfMemoryError</span><br><span class="line">-XX:HeapDumpPath=./logs/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下的是打印日常gc日志</span></span><br><span class="line">-XX:+PrintGCDetails <span class="comment"># 打印gc详情</span></span><br><span class="line">-XX:+PrintGCDateStamps <span class="comment"># 打印gc时间戳</span></span><br><span class="line">-XX:+PrintGCTimeStamps</span><br><span class="line">-Xloggc:gcc.log <span class="comment"># 将日志输出到文件</span></span><br></pre></td></tr></table></figure><h2 id="5-1-GC日志"><a href="#5-1-GC日志" class="headerlink" title="5.1 GC日志"></a>5.1 GC日志</h2><ol><li><p>内容详情分析</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0.756: [Full GC (System) 0.756: [CMS: 0K-&gt;1696K(204800K), 0.0347096 secs] 11488K-&gt;1696K(252608K), [CMS Perm : 10328K-&gt;10320K(131072K)], 0.0347949 secs] [Times: user=0.06 sys=0.00, real=0.05 secs]</span><br><span class="line"> </span><br><span class="line">1.728: [GC 1.728: [ParNew: 38272K-&gt;2323K(47808K), 0.0092276 secs] 39968K-&gt;4019K(252608K), 0.0093169 secs] [Times: user=0.01 sys=0.00, real=0.00 secs]</span><br><span class="line"> </span><br><span class="line">2.642: [GC 2.643: [ParNew: 40595K-&gt;3685K(47808K), 0.0075343 secs] 42291K-&gt;5381K(252608K), 0.0075972 secs] [Times: user=0.03 sys=0.00, real=0.02 secs]</span><br><span class="line"> </span><br><span class="line">4.349: [GC 4.349: [ParNew: 41957K-&gt;5024K(47808K), 0.0106558 secs] 43653K-&gt;6720K(252608K), 0.0107390 secs] [Times: user=0.03 sys=0.00, real=0.02 secs]</span><br><span class="line"> </span><br><span class="line">5.617: [GC 5.617: [ParNew: 43296K-&gt;7006K(47808K), 0.0136826 secs] 44992K-&gt;8702K(252608K), 0.0137904 secs] [Times: user=0.03 sys=0.00, real=0.02 secs]</span><br><span class="line"> </span><br><span class="line">7.429: [GC 7.429: [ParNew: 45278K-&gt;6723K(47808K), 0.0251993 secs] 46974K-&gt;10551K(252608K), 0.0252421 secs]</span><br></pre></td></tr></table></figure><p> 取倒数第二条记录分析一下各个字段都代表了什么含义</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5.617（时间戳）: [GC（Young GC） 5.617（时间戳）: [ParNew（GC的区域）: 43296K（垃圾回收前的大小）-&gt;7006K（垃圾回收以后的大小）(47808K)（该区域总大小）, 0.0136826 secs（回收时间）] 44992K（堆区垃圾被回收前的大小）-&gt;8702K（堆区垃圾被回收后的大小）(252608K)（堆区总大小）, 0.0137904 secs（回收时间）] [Times: user=0.03（GC用户耗时） sys=0.00（GC系统耗时）, real=0.02 secs（GC实际耗时）]</span><br></pre></td></tr></table></figure></li></ol><pre><code>从最后一条GC记录中我们可以看到 Young GC回收了 45278-6723=38555K的内存Heap区通过这次回收总共减少了 46974-10551=36423K的内存。38555-36423=2132K说明通过该次Young GC有2132K的内存被移动到了Old Gen我们来验证一下在最后一次Young GC的回收以前 Old Gen的大小为8702-7006=1696回收以后Old Gen的内存使用为10551-6723=3828Old Gen在该次Young GC以后内存增加了3828-1696=2132K 与预计的相符</code></pre><ol start="2"><li>内容总结分析<br> <img src="https://youdaoyun-chc.oss-cn-shenzhen.aliyuncs.com/java/GC%E6%97%A5%E5%BF%97.png" alt="image"><ul><li>[GC [DefNew … …]</li><li>GC日志开头的信息通过设置-verbose:gc参数后才能输出。</li><li>“[GC”和”[Full GC”说明这次垃圾收集的停顿类型，如果这次GC发生了Stop-The-World，则为”[Full GC”，否则为”[GC”</li><li>“[DefNew “表示GC发生的区域为Serial收集器的新生代中，DefNew是”Default New Generation”的缩写。Serial收集器的老年代和永久代分别表示为”Tenured”、”Perm”</li><li>** eden space 8192K, 52% used**</li><li>新生代的Eden区总共大小为8MB，使用掉的4MB是用来存放allocation4对象</li><li>tenured generation total 10240K, used 6144K</li><li>老年代大小为10MB，使用掉的6MB是用来存放allocation1、allocation2和allocation3这3个对象</li></ul></li></ol><h1 id="6-工具"><a href="#6-工具" class="headerlink" title="6 工具"></a>6 工具</h1><ul><li><p>在线GC日志分析</p><p> <a href="http://gceasy.io/" target="_blank" rel="noopener">http://gceasy.io/</a></p></li><li><p>JVM在线调优</p><p><a href="http://xxfox.perfma.com/" target="_blank" rel="noopener">http://xxfox.perfma.com/</a> </p></li><li><p>visualGC 日志工具</p></li></ul><h1 id="7-JVM知识的优秀文章"><a href="#7-JVM知识的优秀文章" class="headerlink" title="7 JVM知识的优秀文章"></a>7 JVM知识的优秀文章</h1><p>【JVM调优总结-有着详细的jvm知识介绍】: <a href="https://www.jianshu.com/p/51d82de75d3d" target="_blank" rel="noopener">https://www.jianshu.com/p/51d82de75d3d</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 调优 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker命令选项</title>
      <link href="/posts/3fe19f6b/"/>
      <url>/posts/3fe19f6b/</url>
      
        <content type="html"><![CDATA[<h1 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h1><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>–log-opt max-size=[0-9+][k|m|g]</td><td>文件的大小<br><code>--log-opt max-size=10m</code></td></tr><tr><td>–log-opt max-file=[0-9+]</td><td>文件数量<br><code>--log-opt max-file=3</code></td></tr><tr><td>–add-host</td><td>指定往/etc/hosts添加的host<br><code>--add-host mysql:192.168.10.32</code></td></tr><tr><td>–restart=[no|on-failure|always|unless-stopped|]</td><td><code>no</code>:默认策略，在容器退出时不重启容器<br><code>on-failure</code>:在容器非正常退出时（退出状态非0），才会重启容器<br> <code>on-failure:3</code>:在容器非正常退出时重启容器，最多重启3次<br><code>always</code>:在容器退出时总是重启容器<br><code>unless-stopped</code>:在容器退出时总是重启容器，但是不考虑在Docker守护进程启动时就已经停止了的容器</td></tr></tbody></table><h1 id="组合命令"><a href="#组合命令" class="headerlink" title="组合命令"></a>组合命令</h1><h2 id="1-Image"><a href="#1-Image" class="headerlink" title="1. Image"></a>1. Image</h2><ul><li><p>删除全部镜像记录</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure></li><li><p>删除退出的镜像记录</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps -f &quot;status=exited&quot; -q)</span><br></pre></td></tr></table></figure></li><li><p>批量删除指定的镜像</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi -f $(docker images | grep dgemc.asuscomm.com:9293/teamfort_vote/teamfort_vote | awk &apos;&#123;print $3&#125;&apos;)</span><br></pre></td></tr></table></figure></li><li><p>镜像内容拷贝<br>  先启动</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name nginx  nginx</span><br></pre></td></tr></table></figure><p>  然后拷贝配置文件</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp nginx:/etc/nginx/ /etc/nginx/</span><br></pre></td></tr></table></figure><p>  然后删除</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -fv nginx</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-volume"><a href="#2-volume" class="headerlink" title="2. volume"></a>2. volume</h2><ul><li>删除所有（本地）没有被容器使用的volume  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume prune</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-network"><a href="#3-network" class="headerlink" title="3. network"></a>3. network</h2><ul><li>删除所有孤立的网络。 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network prune</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装教程</title>
      <link href="/posts/82496b1a/"/>
      <url>/posts/82496b1a/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><h3 id="Docker文档地址"><a href="#Docker文档地址" class="headerlink" title="Docker文档地址"></a>Docker文档地址</h3><p><a href="https://cloud.tencent.com/developer/doc/1060" target="_blank" rel="noopener">https://cloud.tencent.com/developer/doc/1060</a></p><p><a href="https://docker_practice.gitee.io/" target="_blank" rel="noopener">https://docker_practice.gitee.io/</a></p><h3 id="一-安装教程来源"><a href="#一-安装教程来源" class="headerlink" title="一. 安装教程来源"></a>一. 安装教程来源</h3><p><a href="http://get.daocloud.io" target="_blank" rel="noopener">http://get.daocloud.io</a></p><h3 id="二-Linux安装Docker"><a href="#二-Linux安装Docker" class="headerlink" title="二. Linux安装Docker"></a>二. Linux安装Docker</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><h3 id="三-Linux安装Docker-Compose"><a href="#三-Linux安装Docker-Compose" class="headerlink" title="三. Linux安装Docker Compose"></a>三. Linux安装Docker Compose</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` &gt; /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><h3 id="四-安装出现的问题解决"><a href="#四-安装出现的问题解决" class="headerlink" title="四. 安装出现的问题解决"></a>四. 安装出现的问题解决</h3><h4 id="1-Delta-RPMs-disabled-because-usr-bin-applydeltarpm-not-installed"><a href="#1-Delta-RPMs-disabled-because-usr-bin-applydeltarpm-not-installed" class="headerlink" title="1. Delta RPMs disabled because /usr/bin/applydeltarpm not installed"></a>1. <code>Delta RPMs disabled because /usr/bin/applydeltarpm not installed</code></h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum provides <span class="string">'*/applydeltarpm'</span>  </span><br><span class="line">yum install deltarpm</span><br></pre></td></tr></table></figure><h3 id="五-Docker-开机自启动"><a href="#五-Docker-开机自启动" class="headerlink" title="五. Docker 开机自启动"></a>五. Docker 开机自启动</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker配置问题</title>
      <link href="/posts/c282aa2f/"/>
      <url>/posts/c282aa2f/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Docker容器和宿主机时间同步问题"><a href="#1-Docker容器和宿主机时间同步问题" class="headerlink" title="1. Docker容器和宿主机时间同步问题"></a>1. Docker容器和宿主机时间同步问题</h2><ul><li><p>原因:宿主机时区和Docker容器的不一致，导致两者相差8小时</p></li><li><p>解决方法一:<br>  启动容器的时候指定启动参数，自动挂载localtime文件到容器内</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name &lt;name&gt; -v /etc/localtime:/etc/localtime:ro  ....</span><br></pre></td></tr></table></figure></li><li><p>解决方法二:<br>  把时区设置加入到Dockerfile中</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> CentOS</span></span><br><span class="line">RUN echo "Asia/shanghai" &gt; /etc/timezone;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Ubuntu</span></span><br><span class="line">RUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-设置自定义仓库"><a href="#2-设置自定义仓库" class="headerlink" title="2. 设置自定义仓库"></a>2. 设置自定义仓库</h2><ul><li><p>修改 /etc/docker/daemon.json 文件</p>   <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"insecure-registries": [</span><br><span class="line">   <span class="string">"dgemc.asuscomm.com:9293"</span></span><br><span class="line"> ]</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-设置Docker-Hub源"><a href="#3-设置Docker-Hub源" class="headerlink" title="3. 设置Docker Hub源"></a>3. 设置Docker Hub源</h2><ul><li>修改 /etc/docker/daemon.json 文件  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"registry-mirrors": [</span><br><span class="line">    <span class="string">"http://d2f5eeb9.m.daocloud.io"</span></span><br><span class="line">  ]</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-volume数据共享-–volumes-from"><a href="#4-volume数据共享-–volumes-from" class="headerlink" title="4. volume数据共享  –volumes-from"></a>4. volume数据共享  –volumes-from</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --privileged -p 8692:8121 --name shunde_accounting-wechat -v shunde_accounting:/home shunde_accounting-wechat:1.0</span><br><span class="line"></span><br><span class="line">docker run -d --privileged -p 8692:8121 --name shunde_accounting-wechat2 --volumes-from shunde_accounting-wechat shunde_accounting-wechat:1.0</span><br></pre></td></tr></table></figure><h2 id="5-docker容器固定ip"><a href="#5-docker容器固定ip" class="headerlink" title="5. docker容器固定ip"></a>5. docker容器固定ip</h2><ol><li><p>network plugin创建一个新的bridge</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network  create  -d bridge --subnet=192.168.210.0/24 --gateway=192.168.210.1 -o parent=eth0 br1</span><br></pre></td></tr></table></figure></li><li><p>创建容器</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d --net=br1 --ip=192.168.210.3 --name=nginx2 nginx:1.10-alpine</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-全局设置日志大小"><a href="#6-全局设置日志大小" class="headerlink" title="6. 全局设置日志大小"></a>6. 全局设置日志大小</h2><ul><li>在<code>/etc/docker/daemon.json</code>添加:  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"log-opts": &#123;"max-size":"100m", "max-file":"3"&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="7-volume权限问题"><a href="#7-volume权限问题" class="headerlink" title="7. volume权限问题"></a>7. volume权限问题</h2><ul><li><p>执行命令的时候加入<code>-u [当前linux用户名]</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docke -run -u root ....</span><br></pre></td></tr></table></figure></li></ul><h2 id="8-docker容器无法通过IP访问宿主机-No-route-to-host"><a href="#8-docker容器无法通过IP访问宿主机-No-route-to-host" class="headerlink" title="8. docker容器无法通过IP访问宿主机:No route to host"></a>8. docker容器无法通过IP访问宿主机:<code>No route to host</code></h2><p><strong>centos 7</strong></p><ul><li><p>查询docker0网卡ip</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ip addr |grep docker0</span><br><span class="line"></span><br><span class="line">3: docker0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span><br><span class="line">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span><br><span class="line">32: veth3adebab@if31: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker0 state UP group default </span><br><span class="line">48: veth7c11510@if47: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker0 state UP group default </span><br><span class="line">353: vethc143d81@if352: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker0 state UP group default </span><br><span class="line">423: veth5b7bcdf@if422: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker0 state UP group default</span><br></pre></td></tr></table></figure><p><code>inet 172.17.0.1/16</code>就是docker的ip范围</p></li><li><p>在<code>/etc/firewalld/zones/public.xml</code>添加以下内容:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">rule</span> <span class="attr">family</span>=<span class="string">"ipv4"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">address</span>=<span class="string">"172.17.0.0/16"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">accept</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">zone</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">short</span>&gt;</span>Public<span class="tag">&lt;/<span class="name">short</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>For use in public areas. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span> <span class="attr">name</span>=<span class="string">"ssh"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span> <span class="attr">name</span>=<span class="string">"dhcpv6-client"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">rule</span> <span class="attr">family</span>=<span class="string">"ipv4"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">address</span>=<span class="string">"172.17.0.0/16"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">accept</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">zone</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>重启防火墙</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure></li></ul><h2 id="9-alpine类型容器使用宿主机docker命令"><a href="#9-alpine类型容器使用宿主机docker命令" class="headerlink" title="9. alpine类型容器使用宿主机docker命令"></a>9. alpine类型容器使用宿主机docker命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-v /etc/localtime:/etc/localtime:ro</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock</span><br><span class="line">-v $(which docker):/usr/bin/docker</span><br><span class="line">-v /etc/docker:/etc/docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker exec &#123;容器名&#125; bash -c 'mkdir /lib64 &amp;&amp; ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2'</span><br></pre></td></tr></table></figure><h2 id="10-device-or-resource-busy"><a href="#10-device-or-resource-busy" class="headerlink" title="10.device or resource busy"></a>10.device or resource busy</h2><ul><li><p><strong>错误内容</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error response from daemon: container ebd41f555dc1f027eb76eb74ecd14f803a07bbacd2cb9bc4ee1143fa68e90c66: driver "btrfs" failed to remove root filesystem: Failed to destroy btrfs snapshot /volume1/@docker/btrfs/subvolumes for 78f48d4542b189e1b2603fd4d55cb3a2fcb091bc76f3a5023e7bcf33baeac1ba: device or resource busy</span><br></pre></td></tr></table></figure></li><li><p><strong>检查</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep docker /proc/*/mountinfo |grep 78f48d4542b189e1b2603fd4d55cb3a2fcb091bc76f3a5023e7bcf33baeac1ba</span><br></pre></td></tr></table></figure><p>输出类似这样的东西，其中/proc/之后的数字是pid：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/proc/2232/mountinfo:347 258 0:27 /@docker/btrfs/subvolumes/78f48d4542b189e1b2603fd4d55cb3a2fcb091bc76f3a5023e7bcf33baeac1ba / rw,relatime master:1 - btrfs /dev/vg1/volume_1 rw,synoacl,nospace_cache,metadata_ratio=50</span><br><span class="line">/proc/2340/mountinfo:347 258 0:27 /@docker/btrfs/subvolumes/78f48d4542b189e1b2603fd4d55cb3a2fcb091bc76f3a5023e7bcf33baeac1ba / rw,relatime master:1 - btrfs /dev/vg1/volume_1 rw,synoacl,nospace_cache,metadata_ratio=50</span><br></pre></td></tr></table></figure></li><li><p><strong>查看占用的进程</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -p 2232 -o comm=</span><br><span class="line">ps -p 2340 -o comm=</span><br></pre></td></tr></table></figure></li><li><p><strong>结束进程</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kill -9 2232</span><br><span class="line">kill -9 2340</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Harbor私有仓库搭建</title>
      <link href="/posts/27bcef6f/"/>
      <url>/posts/27bcef6f/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Harbor-服务搭建"><a href="#1-Harbor-服务搭建" class="headerlink" title="1. Harbor 服务搭建"></a>1. Harbor 服务搭建</h2><h3 id="1-下载Harbor安装文件"><a href="#1-下载Harbor安装文件" class="headerlink" title="1. 下载Harbor安装文件"></a>1. 下载Harbor安装文件</h3><ul><li>从 github harbor 官网 release 页面下载指定版本的安装包。<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、在线安装包</span></span><br><span class="line">    wget https://github.com/vmware/harbor/releases/download/v1.7.4/harbor-online-installer-v1.7.4.tgz</span><br><span class="line">    tar xvf harbor-online-installer-v1.7.4.tgz</span><br><span class="line"><span class="comment"># 2、离线安装包</span></span><br><span class="line">    wget https://github.com/vmware/harbor/releases/download/v1.1.2/harbor-offline-installer-v1.7.4.tgz</span><br><span class="line">    tar xvf harbor-offline-installer-v1.7.4.tgz</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-配置harbor-cfg"><a href="#2-配置harbor-cfg" class="headerlink" title="2. 配置harbor.cfg"></a>2. 配置harbor.cfg</h3><ol><li>配置说明<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hostname设置访问地址，可以使用ip、域名，不可以设置为127.0.0.1或localhost</span></span><br><span class="line"><span class="attr">hostname</span> = frp.teamfort.cn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问协议，默认是http，也可以设置https，如果设置https，则nginx ssl需要设置on</span></span><br><span class="line"><span class="attr">ui_url_protocol</span> = http</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql数据库root用户默认密码root123，实际使用时修改下</span></span><br><span class="line"><span class="attr">db_password</span> = root123</span><br><span class="line"></span><br><span class="line"><span class="attr">max_job_workers</span> = <span class="number">3</span> </span><br><span class="line"><span class="attr">customize_crt</span> = <span class="literal">on</span></span><br><span class="line"><span class="attr">ssl_cert</span> = /data/cert/server.crt</span><br><span class="line"><span class="attr">ssl_cert_key</span> = /data/cert/server.key</span><br><span class="line"><span class="attr">secretkey_path</span> = /data</span><br><span class="line"><span class="attr">admiral_url</span> = NA</span><br><span class="line"></span><br><span class="line"><span class="comment"># 邮件设置，发送重置密码邮件时使用</span></span><br><span class="line"><span class="attr">email_identity</span> = </span><br><span class="line"><span class="attr">email_server</span> = smtp.mydomain.com</span><br><span class="line"><span class="attr">email_server_port</span> = <span class="number">25</span></span><br><span class="line"><span class="attr">email_username</span> = sample_admin@mydomain.com</span><br><span class="line"><span class="attr">email_password</span> = abc</span><br><span class="line"><span class="attr">email_from</span> = admin &lt;sample_admin@mydomain.com&gt;</span><br><span class="line"><span class="attr">email_ssl</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Harbor后，管理员UI登录的密码，默认是Harbor12345</span></span><br><span class="line"><span class="attr">harbor_admin_password</span> = Harbor12345</span><br><span class="line"></span><br><span class="line"><span class="comment"># 认证方式，这里支持多种认证方式，如LADP、本次存储、数据库认证。默认是db_auth，mysql数据库认证</span></span><br><span class="line"><span class="attr">auth_mode</span> = db_auth</span><br><span class="line"></span><br><span class="line"><span class="comment"># LDAP认证时配置项</span></span><br><span class="line"><span class="comment">#ldap_url = ldaps://ldap.mydomain.com</span></span><br><span class="line"><span class="comment">#ldap_searchdn = uid=searchuser,ou=people,dc=mydomain,dc=com</span></span><br><span class="line"><span class="comment">#ldap_search_pwd = password</span></span><br><span class="line"><span class="comment">#ldap_basedn = ou=people,dc=mydomain,dc=com</span></span><br><span class="line"><span class="comment">#ldap_filter = (objectClass=person)</span></span><br><span class="line"><span class="comment">#ldap_uid = uid </span></span><br><span class="line"><span class="comment">#ldap_scope = 3 </span></span><br><span class="line"><span class="comment">#ldap_timeout = 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否开启自注册</span></span><br><span class="line"><span class="attr">self_registration</span> = <span class="literal">on</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Token有效时间，默认30分钟</span></span><br><span class="line"><span class="attr">token_expiration</span> = <span class="number">30</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户创建项目权限控制，默认是everyone（所有人），也可以设置为adminonly（只能管理员）</span></span><br><span class="line"><span class="attr">project_creation_restriction</span> = everyone</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-启动安装"><a href="#3-启动安装" class="headerlink" title="3. 启动安装"></a>3. 启动安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.sh</span><br></pre></td></tr></table></figure><h3 id="4-Harbor-UI访问地址"><a href="#4-Harbor-UI访问地址" class="headerlink" title="4. Harbor-UI访问地址"></a>4. Harbor-UI访问地址</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://frp.teamfort.cn:80</span><br></pre></td></tr></table></figure><h2 id="2-Harbor使用过程中的坑"><a href="#2-Harbor使用过程中的坑" class="headerlink" title="2. Harbor使用过程中的坑"></a>2. Harbor使用过程中的坑</h2><ul><li><p>配置文件修改<br><br>第一次安装Harbor后，mysql的数据会存储在/data/database文件夹下。如果你想修改mysql root密码的话（不管你有没有重装），都要先把/data/database删掉，否则UI容器会一直报“Access denied”的错误，即便是重下镜像也无法解决。（这个问题花费了我大半天的时间，最后终于在官方issues里找到了解决方案T_T）<br>当然在自己的测试环境里边可以随便玩，但如果想把Harbor部署到生产环境中，强烈建议预先配置好各类环境参数，避免改动。</p></li><li><p>Nginx端口修改<br><br>Harbor的Nginx端口映射到宿主机的80端口上了，一般情况下我们不希望80端口被占用，所以需要修改docker-compose.yml文件：</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">proxy:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">nginx:1.9</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span><span class="string">./common/config/nginx:/etc/nginx</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">9999</span><span class="string">:80</span></span><br><span class="line"><span class="bullet">      -</span> <span class="number">443</span><span class="string">:443</span></span><br><span class="line"><span class="attr">    depends_on:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">mysql</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">registry</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">ui</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">log</span></span><br></pre></td></tr></table></figure><p>  然后再修改common/templates/registry/config.yml文件：</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auth:</span></span><br><span class="line"><span class="attr">  token:</span></span><br><span class="line"><span class="attr">    issuer:</span><span class="string">registry-token-issuer</span></span><br><span class="line"><span class="attr">    realm:</span> <span class="string">$ui_url:9999/service/token</span></span><br><span class="line"><span class="attr">    rootcertbundle:</span><span class="string">/etc/registry/root.crt</span></span><br><span class="line"><span class="attr">    service:</span> <span class="string">token-service</span></span><br></pre></td></tr></table></figure><p>  修改完成后执行<code>sudo ./prepare</code>重新生成配置文件</p></li><li><p>Registry端口修改（非必需）<br><br>按照惯例，开放5000端口给registry使用，则修改docker-compose.yml文件，为registry节点添加posts属性，步骤与修改Nginx配置一样。</p></li><li><p>设置信赖列表<br><br>默认情况下，docker对registry的操作是基于https协议的，而Harbor默认是以http协议访问的，如果这时候执行docker login的操作，会得到这样的错误信息：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error response from daemon: Get https://xx.xxx.xx.xx/v1/users/: dial tcp xx.xxx.xx.xx:443:getsockopt: connection refused</span><br></pre></td></tr></table></figure><p>  这时候需要修改docker的启动文件<code>docker.service</code>，如下所示：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Modified,origin: ExecStart=/usr/bin/dockerd -H fd://</span></span><br><span class="line">ExecStart=/usr/bin/docker daemon -H fd:// --insecure-registry xx.xxx.xx.xx:5000</span><br></pre></td></tr></table></figure><p>  然后执行命令：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></li><li><p>登录私人仓库否则会出现 </p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">denied: requested access to the resource is denied</span><br></pre></td></tr></table></figure><p>  解决方法进行登录操作</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//登录</span><br><span class="line">docker login xx.xxx.xx.xx:5000</span><br><span class="line">//退出</span><br><span class="line">docker logout xx.xxx.xx.xx:5000</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-Harbor使用"><a href="#3-Harbor使用" class="headerlink" title="3. Harbor使用"></a>3. Harbor使用</h2><ol><li><p>上传项目到Harbor<br> 以docker的官方镜像hello-world为例，先下载好镜像，然后给镜像打tag：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag hello-world xx.xx.xx.xx:5000/test/hello-world</span><br></pre></td></tr></table></figure><p> 其中“test”为项目名，如果预先没有创建test项目的话，push的时候会提示：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">denied: requested access to the resource is denied</span><br></pre></td></tr></table></figure><p> 那么现在Harbor UI里新建一个test项目，然后执行：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push xx.xx.xx.xx:5000/test/hello-world</span><br></pre></td></tr></table></figure></li><li><p>拉去镜像</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull xx.xx.xx.xx:5000/test/hello-world</span><br></pre></td></tr></table></figure><p> 会报连接错误</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure><p> 解决的方法也很简单，在/etc/docker/daemon.json（如果没有就新建）中添加以下代码：</p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">"insecure-registries"</span>:[<span class="string">"xx.xx.xx.xx:5000"</span>] &#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker远程访问加入Tsl安全验证</title>
      <link href="/posts/63e1b8c2/"/>
      <url>/posts/63e1b8c2/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker远程访问加入Tsl安全验证"><a href="#Docker远程访问加入Tsl安全验证" class="headerlink" title="Docker远程访问加入Tsl安全验证"></a>Docker远程访问加入Tsl安全验证</h1><h3 id="Tsl脚本"><a href="#Tsl脚本" class="headerlink" title="Tsl脚本"></a>Tsl脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">reated by L.STONE &lt;web.developer.network@gmail.com&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -------------------------------------------------------------</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自动创建 Docker TLS 证书</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以下是配置信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --[BEGIN]------------------------------</span></span><br><span class="line"></span><br><span class="line">CODE="docker"</span><br><span class="line">IP="服务器ip"</span><br><span class="line">PASSWORD="2707829"</span><br><span class="line">COUNTRY="CN"</span><br><span class="line">STATE="gd"</span><br><span class="line">CITY="fs"</span><br><span class="line">ORGANIZATION="teamfort"</span><br><span class="line">ORGANIZATIONAL_UNIT="Dev"</span><br><span class="line">COMMON_NAME="$IP"</span><br><span class="line">EMAIL="qq869672271@gmail.com"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> --[END]--</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Generate CA key</span></span><br><span class="line">openssl genrsa -aes256 -passout "pass:$PASSWORD" -out "ca-key-$CODE.pem" 4096</span><br><span class="line"><span class="meta">#</span><span class="bash"> Generate CA</span></span><br><span class="line">openssl req -new -x509 -days 365 -key "ca-key-$CODE.pem" -sha256 -out "ca-$CODE.pem" -passin "pass:$PASSWORD" -subj "/C=$COUNTRY/ST=$STATE/L=$CITY/O=$ORGANIZATION/OU=$ORGANIZATIONAL_UNIT/CN=$COMMON_NAME/emailAddress=$EMAIL"</span><br><span class="line"><span class="meta">#</span><span class="bash"> Generate Server key</span></span><br><span class="line">openssl genrsa -out "server-key-$CODE.pem" 4096</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Generate Server Certs.</span></span><br><span class="line">openssl req -subj "/CN=$COMMON_NAME" -sha256 -new -key "server-key-$CODE.pem" -out server.csr</span><br><span class="line"></span><br><span class="line">echo "subjectAltName = IP:$IP,IP:127.0.0.1" &gt;&gt; extfile.cnf</span><br><span class="line">echo "extendedKeyUsage = serverAuth" &gt;&gt; extfile.cnf</span><br><span class="line"></span><br><span class="line">openssl x509 -req -days 365 -sha256 -in server.csr -passin "pass:$PASSWORD" -CA "ca-$CODE.pem" -CAkey "ca-key-$CODE.pem" -CAcreateserial -out "server-cert-$CODE.pem" -extfile extfile.cnf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Generate Client Certs.</span></span><br><span class="line">rm -f extfile.cnf</span><br><span class="line"></span><br><span class="line">openssl genrsa -out "key-$CODE.pem" 4096</span><br><span class="line">openssl req -subj '/CN=client' -new -key "key-$CODE.pem" -out client.csr</span><br><span class="line">echo extendedKeyUsage = clientAuth &gt;&gt; extfile.cnf</span><br><span class="line">openssl x509 -req -days 365 -sha256 -in client.csr -passin "pass:$PASSWORD" -CA "ca-$CODE.pem" -CAkey "ca-key-$CODE.pem" -CAcreateserial -out "cert-$CODE.pem" -extfile extfile.cnf</span><br><span class="line"></span><br><span class="line">rm -vf client.csr server.csr</span><br><span class="line"></span><br><span class="line">chmod -v 0400 "ca-key-$CODE.pem" "key-$CODE.pem" "server-key-$CODE.pem"</span><br><span class="line">chmod -v 0444 "ca-$CODE.pem" "server-cert-$CODE.pem" "cert-$CODE.pem"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 打包客户端证书</span></span><br><span class="line">mkdir -p "tls-client-certs-$CODE"</span><br><span class="line">cp -f "ca-$CODE.pem" "cert-$CODE.pem" "key-$CODE.pem" "tls-client-certs-$CODE/"</span><br><span class="line">cd "tls-client-certs-$CODE"</span><br><span class="line">tar zcf "tls-client-certs-$CODE.tar.gz" *</span><br><span class="line">mv "tls-client-certs-$CODE.tar.gz" ../</span><br><span class="line">cd ..</span><br><span class="line">rm -rf "tls-client-certs-$CODE"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 拷贝服务端证书</span></span><br><span class="line">mkdir -p /etc/docker/certs.d</span><br><span class="line">cp "ca-$CODE.pem" "server-cert-$CODE.pem" "server-key-$CODE.pem" /etc/docker/certs.d/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/docker/daemon.json</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="string">"tlsverify"</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="string">"tlscacert"</span>: <span class="string">"/etc/docker/certs.d/ca.pem"</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="string">"tlscert"</span>: <span class="string">"/etc/docker/certs.d/server-cert.pem"</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="string">"tlskey"</span>: <span class="string">"/etc/docker/certs.d/server-key.pem"</span>,</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   <span class="string">"hosts"</span>: [<span class="string">"tcp://0.0.0.0:2376"</span>, <span class="string">"unix:///var/run/docker.sock"</span>]</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> &#125;</span></span><br><span class="line"></span><br><span class="line">echo " - 修改 /etc/docker/daemon.json 文件"</span><br><span class="line">cat &lt;&lt;EOF</span><br><span class="line">vi /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  "tlsverify": true,</span><br><span class="line">  "tlscacert": "/etc/docker/certs.d/ca-$CODE.pem",</span><br><span class="line">  "tlscert": "/etc/docker/certs.d/server-cert-$CODE.pem",</span><br><span class="line">  "tlskey": "/etc/docker/certs.d/server-key-$CODE.pem",</span><br><span class="line">  "hosts": ["tcp://0.0.0.0:2376", "unix:///var/run/docker.sock"]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">echo ""</span><br><span class="line">echo "或者在vi /lib/systemd/system/docker.service 中的 ExecStart=/usr/bin/dockerd后加入"</span><br><span class="line">echo "--tlsverify --tlscacert=/etc/docker/certs.d/ca-$CODE.pem --tlscert=/etc/docker/certs.d/server-cert-$CODE.pem --tlskey=/etc/docker/certs.d/server-key-$CODE.pem -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"</span><br><span class="line">echo ""</span><br><span class="line"><span class="meta">#</span><span class="bash"> 拷贝客户端证书文件</span></span><br><span class="line">mkdir -p ~/.docker</span><br><span class="line">cp -v &#123;ca,cert,key&#125;-$CODE.pem ~/.docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端远程连接</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker -H 192.168.1.130:2376 --tlsverify --tlscacert ~/.docker/ca.pem --tlscert ~/.docker/cert.pem --tlskey ~/.docker/key.pem ps -a</span></span><br><span class="line">echo "docker -H $IP:2376 --tlsverify --tlscacert ~/.docker/ca-$CODE.pem --tlscert ~/.docker/cert-$CODE.pem --tlskey ~/.docker/key-$CODE.pem ps -a"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端使用 cURL 连接</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> curl --cacert ~/.docker/ca.pem --cert ~/.docker/cert.pem --key ~/.docker/key.pem https://192.168.1.130:2376/containers/json</span></span><br><span class="line">echo "curl --cacert ~/.docker/ca-$CODE.pem --cert ~/.docker/cert-$CODE.pem --key ~/.docker/key-$CODE.pem https://$IP:2376/containers/json"</span><br><span class="line"></span><br><span class="line">echo -e "\e[1;32mAll be done.\e[0m"</span><br></pre></td></tr></table></figure><p>然后在</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /lib/systemd/system/docker.service</span><br><span class="line"><span class="comment">#ExecStart=/usr/bin/dockerd后加入</span></span><br><span class="line"><span class="attr">ExecStart</span>=/usr/bin/dockerd --tlsverify --tlscacert=/etc/docker/certs.d/ca-<span class="variable">$&#123;CODE&#125;</span>.pem --tlscert=/etc/docker/certs.d/server-cert-<span class="variable">$&#123;CODE&#125;</span>.pem --tlskey=/etc/docker/certs.d/server-key-<span class="variable">$&#123;CODE&#125;</span>.pem -H tcp://<span class="number">0.0</span>.<span class="number">0.0</span>:<span class="number">2376</span> -H unix:///var/run/docker.sock</span><br></pre></td></tr></table></figure><p><code>chmod +x tls.sh</code></p><p>客户端的密钥在 <code>~/.docker</code> 下</p><p>重启docker服务</p><p><code>systemctl daemon-reload</code> </p><p><code>systemctl restart docker</code></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
